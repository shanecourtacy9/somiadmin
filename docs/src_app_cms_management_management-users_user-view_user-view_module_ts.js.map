{"version":3,"file":"src_app_cms_management_management-users_user-view_user-view_module_ts.js","mappings":"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","sources":["./src/app/cms/management/management-users/user-view/operator-view.resolver.ts","./src/app/cms/management/management-users/user-view/user-view-details/user-view-details.component.ts","./src/app/cms/management/management-users/user-view/user-view-details/user-view-details.component.html","./src/app/cms/management/management-users/user-view/user-view-routing.module.ts","./src/app/cms/management/management-users/user-view/user-view.component.ts","./src/app/cms/management/management-users/user-view/user-view.component.html","./src/app/cms/management/management-users/user-view/user-view.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewOperatorGQL,\n  ViewOperatorQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class OperatorViewResolver\n  implements Resolve<ApolloQueryResult<ViewOperatorQuery>>\n{\n  constructor(private gql: ViewOperatorGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewOperatorQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  UpdateOperatorGQL,\n  ViewOperatorQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom, map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-user-view-details\",\n  templateUrl: \"./user-view-details.component.html\",\n})\nexport class UserViewDetailsComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOperatorQuery>>;\n\n  form = this.fb.group({\n    id: [null, Validators.required],\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    userName: [null, Validators.required],\n    email: [null],\n    roleId: [null, Validators.required],\n    mobileNumber: [null, Validators.required],\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    private updateGQL: UpdateOperatorGQL,\n    private router: Router,\n    private fb: FormBuilder,\n    private msg: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.parent?.data.subscribe((data) =>\n      this.form.patchValue(data.operator.data.operator)\n    );\n    this.query = this.route.parent?.data.pipe(map((data) => data.operator));\n  }\n\n  async onSubmit() {\n    const { id, ...update } = this.form.value;\n    const result = await firstValueFrom(this.updateGQL.mutate({ id, update }));\n    this.msg.success(\"Done!\");\n    this.router.navigateByUrl(\"/management/users\");\n  }\n}\n","<!-- <nz-row *ngFor=\"let per of permissions\">\n    <h4 style=\"width: 160px;\">{{per}}:</h4>\n    <nz-checkbox-group *ngIf=\"permissionValues[per] != null\" [ngModel]=\"permissionValues[per]\"></nz-checkbox-group>\n    <br>\n    <br>\n</nz-row>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <button nz-button nzType=\"default\" type=\"submit\" [disabled]=\"!form.valid\">{{ 'profile.submit' | translate }}</button>\n</form>\n<br>\n<nz-alert *ngIf=\"model != null && model.id == null\" nzType=\"info\" nzMessage=\"{{ 'message.info' | translate }}\"\n    nzDescription=\"{{ 'user.defaultPasswordNotice' | translate }}\" nzShowIcon>\n</nz-alert> -->\n\n<form\n  nz-form\n  [nzLayout]=\"'vertical'\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <input formControlName=\"id\" type=\"hidden\" hidden />\n  <div class=\"lg:grid lg:grid-cols-3 lg:gap-2\">\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"firstName\">First Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid First Name\">\n        <input nz-input required formControlName=\"firstName\" id=\"firstName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"lastName\">Last Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid Last Name\">\n        <input nz-input required formControlName=\"lastName\" id=\"lastName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"roleId\">Role</nz-form-label>\n      <nz-form-control nzErrorTip=\"Role is not selected\">\n        <nz-select required formControlName=\"roleId\">\n          <nz-option\n            *ngFor=\"let role of (query | async)?.data?.operatorRoles\"\n            [nzValue]=\"role.id\"\n            [nzLabel]=\"role.title\"\n          ></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"userName\">User Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid User Name\">\n        <input nz-input required formControlName=\"userName\" id=\"userName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"email\">Email</nz-form-label>\n      <nz-form-control>\n        <input nz-input formControlName=\"email\" id=\"email\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"mobileNumber\"\n        >Mobile Number</nz-form-label\n      >\n      <nz-form-control>\n        <input formControlName=\"mobileNumber\" id=\"'mobileNumber\" nz-input />\n      </nz-form-control>\n    </nz-form-item>\n  </div>\n\n  <button\n    class=\"float-right\"\n    nz-button\n    nzType=\"default\"\n    type=\"submit\"\n    [disabled]=\"form.invalid\"\n  >\n    Save\n  </button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OperatorViewResolver } from './operator-view.resolver';\nimport { UserViewDetailsComponent } from './user-view-details/user-view-details.component';\nimport { UserViewComponent } from './user-view.component';\n\nconst routes: Routes = [\n  { path: '', component: UserViewComponent, resolve: { operator: OperatorViewResolver }, children: [\n    { path: '', redirectTo: 'details' },\n    { path: 'details', component: UserViewDetailsComponent  }\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    OperatorViewResolver\n  ]\n})\nexport class UserViewRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html'\n})\nexport class UserViewComponent {\n}\n","<nz-card>\n    <nz-tabset nzLinkRouter>\n        <nz-tab>\n            <a *nzTabLink nz-tab-link routerLink=\"details\">{{ 'users.tab.details' | translate }}</a>\n        </nz-tab>\n    </nz-tabset>\n    <router-outlet></router-outlet>\n</nz-card>","import { NgModule } from \"@angular/core\";\n\nimport { UserViewRoutingModule } from \"./user-view-routing.module\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\nimport { UserViewDetailsComponent } from \"./user-view-details/user-view-details.component\";\nimport { UserViewComponent } from \"./user-view.component\";\nimport { OperatorNewComponent } from \"../operator-new/operator-new.component\";\n\n@NgModule({\n  declarations: [\n    UserViewComponent,\n    UserViewDetailsComponent,\n    OperatorNewComponent,\n  ],\n  imports: [SharedModule, UserViewRoutingModule],\n})\nexport class UserViewModule {}\n"],"names":[],"sourceRoot":"webpack:///"}