{"version":3,"file":"src_app_cms_management_management-services_management-services_module_ts.js","mappings":"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","sources":["./src/app/@services/table-service.ts","./src/app/cms/management/management-services/management-service-category-view/management-service-category-view.component.ts","./src/app/cms/management/management-services/management-service-category-view/management-service-category-view.component.html","./src/app/cms/management/management-services/management-service-category-view/management-service-category-view.resolver.ts","./src/app/cms/management/management-services/management-services-list/management-services-list.component.ts","./src/app/cms/management/management-services/management-services-list/management-services-list.component.html","./src/app/cms/management/management-services/management-services-list/management-services-list.rsolver.ts","./src/app/cms/management/management-services/management-services-routing.module.ts","./src/app/cms/management/management-services/management-services-view/management-service-new.resolver.ts","./src/app/cms/management/management-services/management-services-view/management-service-view.resolver.ts","./src/app/cms/management/management-services/management-services-view/management-services-view.component.ts","./src/app/cms/management/management-services/management-services-view/management-services-view.component.html","./src/app/cms/management/management-services/management-services.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { OffsetPaging } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTableQueryParams } from \"ng-zorro-antd/table\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TableService {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  private serializeQueryParams(params: NzTableQueryParams) {\n    const obj: any = {};\n    if (params?.pageIndex > 1) {\n      obj[\"pageIndex\"] = params.pageIndex;\n    } else {\n      obj[\"pageIndex\"] = undefined;\n    }\n    if (params?.pageSize != 10) {\n      obj[\"pageSize\"] = params.pageSize;\n    }\n    if (params.filter != null) {\n      const filterArray = params.filter\n        .filter((val) => val.value != null && val.value.length > 0)\n        .map(\n          (filt) =>\n            `${filt.key}|${Array.isArray(filt.value) ? \"in\" : \"eq\"}|${\n              Array.isArray(filt.value) ? filt.value.join(\"-\") : filt.value\n            }`\n        );\n      obj[\"filter\"] =\n        filterArray.length > 0 ? filterArray.join(\",\") : undefined;\n    }\n    if (params.sort != null && params.sort.length > 0) {\n      const sortArray = params.sort\n        .filter((val) => val.value != null)\n        .map((val) => `${val.key}|${val.value == \"ascend\" ? \"ASC\" : \"DESC\"}`);\n      obj[\"sort\"] = sortArray.length > 0 ? sortArray.join(\",\") : undefined;\n    }\n    return obj;\n  }\n\n  onTableQueryParamsChange(params: NzTableQueryParams): void {\n    const param = this.serializeQueryParams(params);\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: param,\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterText(key: string, value: string | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (value != undefined) {\n      baseFilter[key] = { like: value };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterRange(key: string, range: number[] | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (range != undefined) {\n      baseFilter[key] = { between: range };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\" || action == \"between\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  resetFilter(key: string, input: HTMLInputElement) {\n    this.filterText(key, undefined);\n    input.value = \"\";\n  }\n\n  downloadURI(uri: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.target = \"_blank\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  deserializeQueryParams<SortType, FilterType>(\n    queryParams: any\n  ): {\n    sorting?: TableSortItem<SortType>[];\n    paging: OffsetPaging;\n    filter?: FilterType;\n  } {\n    const sorting = queryParams.sort\n      ? queryParams.sort.split(\",\").map((sItem: string) => ({\n          field: sItem.split(\"|\")[0] as unknown as SortType,\n          direction: sItem.split(\"|\")[1] as SortDirection,\n        }))\n      : [];\n    const filter: any = {};\n    if (queryParams.filter != null) {\n      queryParams.filter.split(\",\").forEach((item: string) => {\n        const operation: any = {};\n        const operationType = item.split(\"|\")[1];\n        if (operationType == \"in\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = operationValue;\n        } else if (operationType == \"between\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = {\n            lower: operationValue[0],\n            upper: operationValue[1],\n          };\n        } else {\n          operation[operationType] = item.split(\"|\")[2];\n        }\n        filter[item.split(\"|\")[0]] = operation;\n      });\n    }\n    const pageIndex =\n      queryParams.pageIndex != null ? parseInt(queryParams.pageIndex) : 1;\n    const pageSize =\n      queryParams.pageSize != null ? parseInt(queryParams.pageSize) : 10;\n    return {\n      sorting: sorting.length > 0 ? sorting : undefined,\n      paging: {\n        offset: (pageIndex - 1) * pageSize ?? undefined,\n        limit: pageSize,\n      },\n      filter:\n        filter != null && Object.keys(filter).length > 0 ? filter : undefined,\n    };\n  }\n}\n\nclass TableSortItem<T> {\n  field!: T;\n  direction!: SortDirection;\n}\n\nenum SortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  CreateServiceCategoryGQL,\n  DeleteServiceCategoryGQL,\n  UpdateServiceCategoryGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom, Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-management-service-category-view\",\n  templateUrl: \"./management-service-category-view.component.html\",\n})\nexport class ManagementServiceCategoryViewComponent\n  implements OnInit, OnDestroy\n{\n  form = this.fb.group({\n    id: [null],\n    name: [null, Validators.required],\n  });\n  subscription!: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private updateGQL: UpdateServiceCategoryGQL,\n    private createGQL: CreateServiceCategoryGQL,\n    private deleteGQL: DeleteServiceCategoryGQL,\n    private fb: FormBuilder,\n    private routerHelper: RouterHelperService,\n    private msg: NzMessageService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe((data) =>\n      data.serviceCategory != null\n        ? this.form.patchValue(data.serviceCategory.data.serviceCategory)\n        : null\n    );\n  }\n\n  async onSubmit() {\n    const { id, ...input } = this.form.value;\n    if (id == null) {\n      await firstValueFrom(this.createGQL.mutate({ input }));\n    } else {\n      await firstValueFrom(this.updateGQL.mutate({ id, input }));\n    }\n    this.routerHelper.goToParent(this.route);\n  }\n\n  async deleteCategory() {\n    const id = this.form.value.id;\n    try {\n      const res = await firstValueFrom(this.deleteGQL.mutate({ id }));\n      this.routerHelper.goToParent(this.route);\n      this.msg.success(\"Deleted!\");\n    } catch (exception: any) {\n      this.msg.error(exception.message);\n    }\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Service Category\"\n  nzSubtitle=\"Input service category details below.\"\n>\n</nz-page-header>\n<nz-card>\n  <form nz-form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"name\">Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid Name\">\n        <input nz-input formControlName=\"name\" id=\"name\" />\n      </nz-form-control>\n    </nz-form-item>\n    <button\n      nz-button\n      class=\"float-right\"\n      nzType=\"default\"\n      [disabled]=\"form.invalid\"\n    >\n      Save\n    </button>\n  </form>\n</nz-card>\n<nz-card\n  class=\"mt-2\"\n  nzTitle=\"Dangerous Area\"\n  *ngIf=\"this.form.value?.id !== null\"\n>\n  <div>\n    <p class=\"text-lg leading-6 font-medium text-gray-900\">Delete Category</p>\n    <p class=\"mt-2 max-w-xl text-sm text-gray-500\">\n      Be careful with this action. It is irreversible.\n    </p>\n    <button nz-button nzDanger class=\"mt-2\" (click)=\"deleteCategory()\">\n      Detete\n    </button>\n  </div>\n</nz-card>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewServiceCategoryGQL,\n  ViewServiceCategoryQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ManagementServicesCategoryViewResolver\n  implements Resolve<ApolloQueryResult<ViewServiceCategoryQuery>>\n{\n  constructor(private gql: ViewServiceCategoryGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewServiceCategoryQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ServicesListQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-management-services-list\",\n  templateUrl: \"./management-services-list.component.html\",\n})\nexport class ManagementServicesListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ServicesListQuery>>;\n  lastNameSearchValue = \"\";\n  selectedCategory?: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public tagColor: TagColorService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.services));\n  }\n\n  // async searchData(reset: boolean = false, params: Params = this.queryParams): Promise<void> {\n  //   if (reset) {\n  //     this.pageIndex = 1;\n  //   }\n  //   let as = Object.assign(params, {page: this.pageIndex == 1 ? null : this.pageIndex, pageSize: this.pageSize == 10 ? null : this.pageSize});\n  //   this.router.navigate(\n  //     [],\n  //     {\n  //       relativeTo: this.route,\n  //       queryParams: as,\n  //       queryParamsHandling: 'merge',\n  //     });\n  // }\n\n  // ngOnInit(): void {\n  //   this.route.data.subscribe(x=>{\n  //     this.total = x.items.count;\n  //     this.listOfData = x.items.data;\n  //     this.selectedCategory = 0;\n  //   });\n  // }\n\n  // async changeStatus(id: number, status: boolean) {\n  //   await this.backend.saveRow('Service', {id: id, enabled: status});\n  //   //this.listOfData[this.listOfData.findIndex(x=> { return x.id == id})].enabled = status;\n  // }\n\n  // async deleteCategory(cat: ServiceCategory) {\n  //   await this.backend.deleteRow('ServiceCategory', cat.id);\n  //   this.router.navigate([], { queryParams: {refresh: new Date().getTime()}})\n  // }\n\n  // async onDelete(serviceId: number) {\n  //   await this.backend.deleteRow('Service', serviceId);\n  //   this.router.navigate([], { queryParams: {refresh: new Date().getTime()}})\n  // }\n}\n","<nz-card *ngIf=\"(query | async)?.data?.serviceCategories as categories\">\n  <nz-tabset\n    [nzTabBarExtraContent]=\"extraTemplate\"\n    [(nzSelectedIndex)]=\"selectedCategory\"\n    nzType=\"card\"\n  >\n    <nz-tab *ngFor=\"let cat of categories\" [nzTitle]=\"cat.name\">\n      <nz-table\n        #ajaxTable\n        [nzFrontPagination]=\"false\"\n        [nzData]=\"cat.services\"\n        nzBordered\n      >\n        <thead>\n          <tr>\n            <th>{{ \"profile.name\" | translate }}</th>\n            <th>{{ \"profile.actions\" | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let data of ajaxTable.data\">\n            <td>{{ data.name }}</td>\n            <td>\n              <a [routerLink]=\"'view/' + data.id\">{{\n                \"profile.view\" | translate\n              }}</a>\n            </td>\n          </tr>\n        </tbody>\n      </nz-table>\n    </nz-tab>\n  </nz-tabset>\n  <ng-template #extraTemplate>\n    <button\n      nz-button\n      style=\"margin-left: 8px\"\n      *ngIf=\"categories.length > 0\"\n      [routerLink]=\"'category/view/' + categories[selectedCategory ?? 0].id\"\n    >\n      {{ \"services.editCategory\" | translate }}\n    </button>\n    <button nz-button style=\"margin-left: 8px\" routerLink=\"category/new/\">\n      {{ \"services.newCategory\" | translate }}\n    </button>\n    <button\n      nz-button\n      style=\"margin-left: 8px\"\n      *ngIf=\"categories.length > 0\"\n      [routerLink]=\"'new'\"\n    >\n      {{ \"services.newService\" | translate }}\n    </button>\n  </ng-template>\n  <div *ngIf=\"categories.length < 1\">\n    <nz-result\n      nzStatus=\"info\"\n      nzTitle=\"{{ 'service.createFirstNotice' | translate }}\"\n    >\n      <div nz-result-extra>\n        <button nz-button nzType=\"default\" routerLink=\"category/new/\">\n          {{ \"services.newCategory\" | translate }}\n        </button>\n      </div>\n    </nz-result>\n  </div>\n</nz-card>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ServicesListGQL,\n  ServicesListQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ServicesListResolver\n  implements Resolve<ApolloQueryResult<ServicesListQuery>>\n{\n  constructor(private paging: TableService, private gql: ServicesListGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ServicesListQuery>> {\n    return this.gql.fetch();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementServicesListComponent } from './management-services-list/management-services-list.component';\nimport { ManagementServicesViewComponent } from './management-services-view/management-services-view.component';\nimport { ManagementServiceCategoryViewComponent } from './management-service-category-view/management-service-category-view.component';\nimport { ServicesListResolver } from './management-services-list/management-services-list.rsolver';\nimport { ManagementServicesViewResolver } from './management-services-view/management-service-view.resolver';\nimport { ManagementServicesCategoryViewResolver } from './management-service-category-view/management-service-category-view.resolver';\nimport { ManagementServiceNewResolver } from './management-services-view/management-service-new.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: ManagementServicesListComponent, resolve: { services: ServicesListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', component: ManagementServicesViewComponent, resolve: { service: ManagementServicesViewResolver } },\n  { path: 'new', component: ManagementServicesViewComponent, resolve: { service: ManagementServiceNewResolver } },\n  { path: 'category/view/:id', component: ManagementServiceCategoryViewComponent, resolve: { serviceCategory: ManagementServicesCategoryViewResolver } },\n  { path: 'category/new', component: ManagementServiceCategoryViewComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ServicesListResolver,\n    ManagementServicesViewResolver,\n    ManagementServiceNewResolver,\n    ManagementServicesCategoryViewResolver\n  ]\n})\nexport class ManagementServicesRoutingModule { }\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  NewServiceGQL,\n  ViewRiderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ManagementServiceNewResolver\n  implements Resolve<ApolloQueryResult<ViewRiderQuery>>\n{\n  constructor(private gql: NewServiceGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewRiderQuery>> {\n    return this.gql.fetch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewRiderQuery,\n  ViewServiceCategoryGQL,\n  ViewServiceGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ManagementServicesViewResolver\n  implements Resolve<ApolloQueryResult<ViewRiderQuery>>\n{\n  constructor(private gql: ViewServiceGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewRiderQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CreateServiceGQL,\n  NewServiceQuery,\n  ServicePaymentMethod,\n  SetRegionsOnServiceGQL,\n  UpdateServiceGQL,\n  ViewServiceQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { environment } from \"@ridy/admin-panel/src/environments/environment\";\nimport { NzInputNumberComponent } from \"ng-zorro-antd/input-number\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { NzTimePickerComponent } from \"ng-zorro-antd/time-picker\";\nimport { NzUploadFile } from \"ng-zorro-antd/upload\";\nimport { firstValueFrom, Observable, Observer } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-management-services-view\",\n  templateUrl: \"./management-services-view.component.html\",\n  styles: [\n    \"nz-input-number{ @apply w-full }\",\n    \"nz-time-picker{@apply w-full }\",\n  ],\n})\nexport class ManagementServicesViewComponent implements OnInit {\n  form = this.fb.group({\n    id: [null],\n    name: [null, Validators.required],\n    description: [null],\n    categoryId: [null, Validators.required],\n    baseFare: [0, Validators.required],\n    perHundredMeters: [0, Validators.required],\n    perMinuteDrive: [0, Validators.required],\n    perMinuteWait: [0, Validators.required],\n    prepayPercent: [0, Validators.required],\n    minimumFee: [0, Validators.required],\n    roundingFactor: [null],\n    searchRadius: [0, Validators.required],\n    twoWayAvailable: [false, Validators.required],\n    maximumDestinationDistance: [0, Validators.required],\n    paymentMethod: [\"CashCredit\", Validators.required],\n    cancellationTotalFee: [0, Validators.required],\n    cancellationDriverShare: [0, Validators.required],\n    providerSharePercent: [0, Validators.required],\n    providerShareFlat: [0, Validators.required],\n    personCapacity: [null],\n    mediaId: [null, Validators.required],\n    timeMultipliers: [[]],\n    distanceMultipliers: [[]],\n    regions: [[]],\n  });\n  root = environment.root;\n  loadingUpload = false;\n  query?:\n    | Observable<ApolloQueryResult<ViewServiceQuery>>\n    | Observable<ApolloQueryResult<NewServiceQuery>>;\n  @ViewChild(\"timeStartPicker\", { static: false })\n  timeStartPicker!: NzTimePickerComponent;\n  @ViewChild(\"timeEndPicker\", { static: false })\n  timeEndPicker!: NzTimePickerComponent;\n  @ViewChild(\"timeMultiplyInput\", { static: false })\n  timeMultiplyInput!: NzInputNumberComponent;\n  @ViewChild(\"distanceFromInput\", { static: false })\n  distanceFromInput!: NzInputNumberComponent;\n  @ViewChild(\"distanceToInput\", { static: false })\n  distanceToInput!: NzInputNumberComponent;\n  @ViewChild(\"distanceMultiplyInput\", { static: false })\n  distanceMultiplyInput!: NzInputNumberComponent;\n\n  formatterPercent = (value: number) => `${value} %`;\n  parserPercent = (value: string) => value.replace(\" %\", \"\");\n  formatterMeters = (value: number) => `${value} m`;\n  formatterPrice = (value: number) => `${value}`;\n  parserMeters = (value: string) => value.replace(\" m\", \"\");\n  jwt = localStorage.getItem(\"somi_admin_token\");\n  avatarUrl?: string;\n  paymentMethods = Object.values(ServicePaymentMethod);\n  beforeUpload = (file: NzUploadFile, _fileList: NzUploadFile[]) =>\n    new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng =\n        file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (!isJpgOrPng) {\n        this.msg.error(\"You can only upload JPG file!\");\n        observer.complete();\n        return;\n      }\n      const isLt2M = (file.size ?? 0) / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error(\"Image must smaller than 2MB!\");\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private updateGQL: UpdateServiceGQL,\n    private createGQL: CreateServiceGQL,\n    private setRegionsGQL: SetRegionsOnServiceGQL,\n    private msg: NzMessageService,\n    private routerHelper: RouterHelperService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.service));\n    this.route.data.subscribe((data) => {\n      if (data.service.data.service == null) return;\n      if (data.service.data.service.regions.length > 0) {\n        const currency = data.service.data.service.regions[0].currency;\n        this.formatterPrice = (value: number) =>\n          value != null ? `${value} ${currency}` : \"\";\n      }\n      data.service.data.service.regions = data.service.data.service.regions.map(\n        (region: { id: string }) => region.id\n      );\n\n      this.form.patchValue(data.service.data.service);\n      this.avatarUrl = data.service.data.service.media.address;\n    });\n  }\n\n  async onSubmit() {\n    const { id, regions, ...input } = this.form.value;\n    if (regions.length < 1) {\n      this.msg.error(\n        \"Select at least one region which this service can be ordered from.\"\n      );\n      return;\n    }\n    let resId = id;\n    try {\n      if (id == null) {\n        const result = await firstValueFrom(this.createGQL.mutate({ input }));\n        resId = result.data?.createOneService.id;\n      } else {\n        const result = await firstValueFrom(\n          this.updateGQL.mutate({ id, input })\n        );\n        resId = result.data?.updateOneService.id;\n      }\n      await firstValueFrom(\n        this.setRegionsGQL.mutate({ id: resId, relationIds: regions })\n      );\n      this.routerHelper.goToParent(this.route);\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n\n  insertTimeRule() {\n    if (this.form.value.timeMultipliers == null) {\n      this.form.value.timeMultipliers = [];\n    }\n    this.form.value.timeMultipliers.push({\n      startTime: this.timeStartPicker.inputRef.nativeElement.value,\n      endTime: this.timeEndPicker.inputRef.nativeElement.value,\n      multiply: parseFloat(\n        this.timeMultiplyInput.inputElement.nativeElement.value\n      ),\n    });\n  }\n\n  removeTimeRule(_rule: TimeMultiplier) {\n    this.form.value.timeMultipliers = this.form.value.timeMultipliers.filter(\n      (rule: any) => rule != _rule\n    );\n  }\n\n  insertDistanceRule() {\n    if (this.form.value.distanceMultipliers == null) {\n      this.form.value.distanceMultipliers = [];\n    }\n    this.form.value.distanceMultipliers.push({\n      distanceFrom: parseInt(\n        this.distanceFromInput.inputElement.nativeElement.value\n      ),\n      distanceTo: parseInt(\n        this.distanceToInput.inputElement.nativeElement.value\n      ),\n      multiply: parseFloat(\n        this.distanceMultiplyInput.inputElement.nativeElement.value\n      ),\n    });\n  }\n\n  removeDistanceRule(_rule: DistanceMultiplier) {\n    const distanceMultipliers = this.form.value.distanceMultipliers.filter(\n      (rule: any) => rule != _rule\n    );\n    this.form.patchValue({ distanceMultipliers });\n  }\n\n  handleRegionCheckChange(\n    checked: boolean,\n    region: { id: string; currency: string }\n  ) {\n    if (checked) {\n      this.formatterPrice = (value: number) => `${value} ${region.currency}`;\n      if (this.form.value.regions.indexOf(region.id) < 0) {\n        this.form.value.regions.push(region.id);\n      }\n    } else {\n      this.form.value.regions = this.form.value.regions.filter(\n        (_region: string) => _region != region.id\n      );\n    }\n  }\n\n  handleUploadChange(event: { file: NzUploadFile }) {\n    switch (event.file.status) {\n      case \"uploading\":\n        this.loadingUpload = true;\n        break;\n      case \"done\":\n        this.loadingUpload = false;\n        this.form.patchValue({ mediaId: event.file.response.id });\n        this.avatarUrl = event.file.response.address;\n        break;\n      case \"error\":\n        this.msg.error(\"Network error\");\n        this.loadingUpload = false;\n        break;\n    }\n  }\n}\n\nexport interface TimeMultiplier {\n  startTime: string;\n  endTime: string;\n  multiply: number;\n}\n\nexport interface DistanceMultiplier {\n  distanceFrom: number;\n  distanceTo: number;\n  multiply: number;\n}\n","<nz-card *ngIf=\"(query | async)?.data as data\">\n  <div>\n    <form\n      nz-form\n      [formGroup]=\"form\"\n      (ngSubmit)=\"onSubmit()\"\n      nzLayout=\"vertical\"\n    >\n      <input type=\"hidden\" hidden formControlName=\"id\" />\n      <input type=\"hidden\" hidden formControlName=\"regions\" />\n      <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n        <nz-form-item>\n          <nz-form-label nzFor=\"name\" nzRequired>Name</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"name\" id=\"name\" />\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"description\">Description</nz-form-label>\n          <nz-form-control>\n            <input nz-input formControlName=\"description\" id=\"description\" />\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"categoryId\" nzRequired>Category</nz-form-label>\n          <nz-form-control>\n            <nz-select formControlName=\"categoryId\" id=\"categoryId\">\n              <nz-option\n                *ngFor=\"let category of data.serviceCategories\"\n                [nzValue]=\"category.id\"\n                [nzLabel]=\"category.name\"\n              ></nz-option>\n            </nz-select>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"personCapacity\"\n            >Max Person Capacity</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"personCapacity\"\n              id=\"personCapacity\"\n              [nzMin]=\"0\"\n              [nzMax]=\"100\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"baseFare\" nzRequired>Base Fare</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"baseFare\"\n              id=\"baseFare\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"perHundredMeters\"\n            >Per Hundred Meters</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"perHundredMeters\"\n              id=\"perHundredMeters\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"perMinuteDrive\"\n            >Per Minute Drive</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"perMinuteDrive\"\n              id=\"perMinuteDrive\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"perMinuteWait\"\n            >Per Minute Wait</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"perMinuteWait\"\n              id=\"perMinuteWait\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"prepayPercent\"\n            >Prepay Percent</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"prepayPercent\"\n              id=\"prepayPercent\"\n              nzRequired\n              [nzFormatter]=\"formatterPercent\"\n              [nzParser]=\"parserPercent\"\n              [nzMax]=\"100\"\n              [nzMin]=\"0\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"minimumFee\"\n            >Minimum Fee</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"minimumFee\"\n              id=\"minimumFee\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"roundingFactor\">Rounding Factor</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"roundingFactor\"\n              id=\"roundingFactor\"\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"maximumDestinationDistance\"\n            >Maximum Distance</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"maximumDestinationDistance\"\n              id=\"maximumDestinationDistance\"\n              nzRequired\n              [nzFormatter]=\"formatterMeters\"\n              [nzParser]=\"parserMeters\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"searchRadius\"\n            >Search Radius</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"searchRadius\"\n              id=\"searchRadius\"\n              nzRequired\n              [nzFormatter]=\"formatterMeters\"\n              [nzParser]=\"parserMeters\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"paymentMethod\"\n            >Payment Method</nz-form-label\n          >\n          <nz-form-control>\n            <nz-select formControlName=\"paymentMethod\" id=\"paymentMethod\">\n              <nz-option\n                *ngFor=\"let paymentMethod of paymentMethods\"\n                [nzValue]=\"paymentMethod\"\n                [nzLabel]=\"paymentMethod\"\n              >\n              </nz-option>\n            </nz-select>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"providerSharePercent\" nzRequired\n            >Provider Share Percent</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"providerSharePercent\"\n              id=\"providerSharePercent\"\n              nzRequired\n              [nzFormatter]=\"formatterPercent\"\n              [nzParser]=\"parserPercent\"\n              [nzMax]=\"100\"\n              [nzMin]=\"0\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"providerShareFlat\" nzRequired\n            >Provider Share Flat</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"providerShareFlat\"\n              id=\"providerShareFlat\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"cancellationTotalFee\" nzRequired\n            >Cancelation Total Fee</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"cancellationTotalFee\"\n              id=\"cancellationTotalFee\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            >\n            </nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"cancellationDriverShare\" nzRequired\n            >Cancelation Driver Share</nz-form-label\n          >\n          <nz-form-control>\n            <nz-input-number\n              formControlName=\"cancellationDriverShare\"\n              id=\"cancellationDriverShare\"\n              nzRequired\n              [nzFormatter]=\"formatterPrice\"\n            >\n            </nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzFor=\"twoWayAvailable\" nzRequired\n            >Two way available?</nz-form-label\n          >\n          <nz-form-control>\n            <nz-switch\n              formControlName=\"twoWayAvailable\"\n              id=\"twoWayAvailable\"\n            ></nz-switch>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item class=\"lg:col-span-4\">\n          <nz-form-label nzRequired>\n            {{ \"service.Regions\" | translate }}\n          </nz-form-label>\n          <nz-form-control>\n            <nz-tag\n              *ngFor=\"let region of data.regions.nodes\"\n              nzMode=\"checkable\"\n              [nzChecked]=\"form.value.regions.indexOf(region.id) > -1\"\n              (nzCheckedChange)=\"handleRegionCheckChange($event, region)\"\n            >\n              {{ region.name }}\n            </nz-tag>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired>Image</nz-form-label>\n          <nz-form-control>\n            <nz-upload\n              [nzAction]=\"root + 'upload'\"\n              [nzHeaders]=\"{ Authorization: 'Bearer ' + jwt }\"\n              (nzChange)=\"handleUploadChange($event)\"\n              [nzBeforeUpload]=\"beforeUpload\"\n              nzListType=\"picture-card\"\n              [nzShowUploadList]=\"false\"\n            >\n              <ng-container *ngIf=\"!avatarUrl\">\n                <i\n                  class=\"upload-icon\"\n                  nz-icon\n                  [nzType]=\"loadingUpload ? 'loading' : 'plus'\"\n                ></i>\n                <div class=\"ant-upload-text\">\n                  {{ \"profile.upload\" | translate }}\n                </div>\n              </ng-container>\n              <img\n                *ngIf=\"avatarUrl\"\n                [src]=\"root + avatarUrl\"\n                style=\"width: 100%\"\n              />\n            </nz-upload>\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n    </form>\n    <nz-card class=\"lg:col-span-4\" nzTitle=\"Time Multiplier\">\n      <ul nz-list [nzDataSource]=\"form.value.timeMultipliers\" nzBordered>\n        <li nz-list-item *ngFor=\"let item of form.value.timeMultipliers\">\n          <span nz-typography\n            ><mark>{{ item.multiply }}x</mark></span\n          >\n          <ul nz-list-item-actions>\n            <nz-list-item-action>\n              <a (click)=\"removeTimeRule(item)\">{{\n                \"profile.delete\" | translate\n              }}</a>\n            </nz-list-item-action>\n          </ul>\n          {{ item.startTime }} - {{ item.endTime }}\n        </li>\n      </ul>\n      <div class=\"md:grid md:grid-cols-3 md:gap-2 mt-2\">\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.timeMultiplierTable.startTime\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-time-picker\n              #timeStartPicker\n              nzPlaceHolder=\"{{\n                'service.timeMultiplierTable.startTime' | translate\n              }}\"\n              nzFormat=\"HH:mm\"\n            ></nz-time-picker>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.timeMultiplierTable.endTime\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-time-picker\n              #timeEndPicker\n              nzPlaceHolder=\"{{\n                'service.timeMultiplierTable.endTime' | translate\n              }}\"\n              nzFormat=\"HH:mm\"\n            ></nz-time-picker>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.timeMultiplierTable.multiplyBy\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              #timeMultiplyInput\n              nzPlaceHolder=\"{{\n                'service.timeMultiplierTable.multiplyBy' | translate\n              }}\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n      <button\n        nz-button\n        nzType=\"default\"\n        (click)=\"insertTimeRule()\"\n        [disabled]=\"\n          timeStartPicker.value == null ||\n          timeEndPicker.value == null ||\n          timeMultiplyInput.inputElement.nativeElement.value == ''\n        \"\n        class=\"float-right\"\n      >\n        {{ \"service.insertRule\" | translate }}\n      </button>\n    </nz-card>\n    <nz-card class=\"lg:col-span-4\" nzTitle=\"Distance Multiplier\">\n      <ul nz-list [nzDataSource]=\"form.value.distanceMultipliers\" nzBordered>\n        <li nz-list-item *ngFor=\"let item of form.value.distanceMultipliers\">\n          <span nz-typography\n            ><mark>{{ item.multiply }}x</mark></span\n          >\n          <ul nz-list-item-actions>\n            <nz-list-item-action>\n              <a (click)=\"removeDistanceRule(item)\">{{\n                \"profile.delete\" | translate\n              }}</a>\n            </nz-list-item-action>\n          </ul>\n          {{ item.distanceFrom }} - {{ item.distanceTo }}\n        </li>\n      </ul>\n      <div class=\"md:grid md:grid-cols-3 md:gap-2 mt-2\">\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.distanceMultiplierTable.distanceFrom\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              #distanceFromInput\n              nzPlaceHolder=\"{{\n                'service.distanceMultiplierTable.distanceFrom' | translate\n              }}\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.distanceMultiplierTable.distanceTo\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              #distanceToInput\n              nzPlaceHolder=\"{{\n                'service.distanceMultiplierTable.distanceTo' | translate\n              }}\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label>{{\n            \"service.timeMultiplierTable.multiplyBy\" | translate\n          }}</nz-form-label>\n          <nz-form-control>\n            <nz-input-number\n              #distanceMultiplyInput\n              nzPlaceHolder=\"{{\n                'service.timeMultiplierTable.multiplyBy' | translate\n              }}\"\n            ></nz-input-number>\n          </nz-form-control>\n        </nz-form-item>\n      </div>\n      <button\n        nz-button\n        nzType=\"default\"\n        (click)=\"insertDistanceRule()\"\n        [disabled]=\"\n          distanceFromInput.inputElement.nativeElement.value == '' ||\n          distanceToInput.inputElement.nativeElement.value == '' ||\n          distanceMultiplyInput.inputElement.nativeElement.value == ''\n        \"\n        class=\"float-right\"\n      >\n        {{ \"service.insertRule\" | translate }}\n      </button>\n    </nz-card>\n    <button\n      nz-button\n      nzType=\"default\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"form.invalid\"\n      class=\"float-right mt-2\"\n    >\n      {{ \"profile.submit\" | translate }}\n    </button>\n  </div>\n</nz-card>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ManagementServicesRoutingModule } from \"./management-services-routing.module\";\nimport { ManagementServicesListComponent } from \"./management-services-list/management-services-list.component\";\nimport { ManagementServicesViewComponent } from \"./management-services-view/management-services-view.component\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { ManagementServiceCategoryViewComponent } from \"./management-service-category-view/management-service-category-view.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [\n    ManagementServicesListComponent,\n    ManagementServicesViewComponent,\n    ManagementServiceCategoryViewComponent,\n  ],\n  imports: [ManagementServicesRoutingModule, SharedModule],\n  providers: [TagColorService],\n})\nexport class ManagementServicesModule {}\n"],"names":[],"sourceRoot":"webpack:///"}