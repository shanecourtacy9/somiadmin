{"version":3,"file":"src_app_cms_management_management-cars_management-cars_module_ts.js","mappings":"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","sources":["./src/app/@services/table-service.ts","./src/app/cms/management/management-cars/management-cars-list/management-cars-list.component.ts","./src/app/cms/management/management-cars/management-cars-list/management-cars-list.component.html","./src/app/cms/management/management-cars/management-cars-list/management-cars-list.resolver.ts","./src/app/cms/management/management-cars/management-cars-routing.module.ts","./src/app/cms/management/management-cars/management-cars.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { OffsetPaging } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTableQueryParams } from \"ng-zorro-antd/table\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TableService {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  private serializeQueryParams(params: NzTableQueryParams) {\n    const obj: any = {};\n    if (params?.pageIndex > 1) {\n      obj[\"pageIndex\"] = params.pageIndex;\n    } else {\n      obj[\"pageIndex\"] = undefined;\n    }\n    if (params?.pageSize != 10) {\n      obj[\"pageSize\"] = params.pageSize;\n    }\n    if (params.filter != null) {\n      const filterArray = params.filter\n        .filter((val) => val.value != null && val.value.length > 0)\n        .map(\n          (filt) =>\n            `${filt.key}|${Array.isArray(filt.value) ? \"in\" : \"eq\"}|${\n              Array.isArray(filt.value) ? filt.value.join(\"-\") : filt.value\n            }`\n        );\n      obj[\"filter\"] =\n        filterArray.length > 0 ? filterArray.join(\",\") : undefined;\n    }\n    if (params.sort != null && params.sort.length > 0) {\n      const sortArray = params.sort\n        .filter((val) => val.value != null)\n        .map((val) => `${val.key}|${val.value == \"ascend\" ? \"ASC\" : \"DESC\"}`);\n      obj[\"sort\"] = sortArray.length > 0 ? sortArray.join(\",\") : undefined;\n    }\n    return obj;\n  }\n\n  onTableQueryParamsChange(params: NzTableQueryParams): void {\n    const param = this.serializeQueryParams(params);\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: param,\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterText(key: string, value: string | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (value != undefined) {\n      baseFilter[key] = { like: value };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterRange(key: string, range: number[] | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (range != undefined) {\n      baseFilter[key] = { between: range };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\" || action == \"between\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  resetFilter(key: string, input: HTMLInputElement) {\n    this.filterText(key, undefined);\n    input.value = \"\";\n  }\n\n  downloadURI(uri: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.target = \"_blank\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  deserializeQueryParams<SortType, FilterType>(\n    queryParams: any\n  ): {\n    sorting?: TableSortItem<SortType>[];\n    paging: OffsetPaging;\n    filter?: FilterType;\n  } {\n    const sorting = queryParams.sort\n      ? queryParams.sort.split(\",\").map((sItem: string) => ({\n          field: sItem.split(\"|\")[0] as unknown as SortType,\n          direction: sItem.split(\"|\")[1] as SortDirection,\n        }))\n      : [];\n    const filter: any = {};\n    if (queryParams.filter != null) {\n      queryParams.filter.split(\",\").forEach((item: string) => {\n        const operation: any = {};\n        const operationType = item.split(\"|\")[1];\n        if (operationType == \"in\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = operationValue;\n        } else if (operationType == \"between\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = {\n            lower: operationValue[0],\n            upper: operationValue[1],\n          };\n        } else {\n          operation[operationType] = item.split(\"|\")[2];\n        }\n        filter[item.split(\"|\")[0]] = operation;\n      });\n    }\n    const pageIndex =\n      queryParams.pageIndex != null ? parseInt(queryParams.pageIndex) : 1;\n    const pageSize =\n      queryParams.pageSize != null ? parseInt(queryParams.pageSize) : 10;\n    return {\n      sorting: sorting.length > 0 ? sorting : undefined,\n      paging: {\n        offset: (pageIndex - 1) * pageSize ?? undefined,\n        limit: pageSize,\n      },\n      filter:\n        filter != null && Object.keys(filter).length > 0 ? filter : undefined,\n    };\n  }\n}\n\nclass TableSortItem<T> {\n  field!: T;\n  direction!: SortDirection;\n}\n\nenum SortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CarsListQuery,\n  CreateCarColorGQL,\n  CreateCarModelGQL,\n  DeleteCarColorGQL,\n  DeleteCarModelGQL,\n  UpdateCarColorGQL,\n  UpdateCarModelGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { firstValueFrom, map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-management-cars-list\",\n  templateUrl: \"./management-cars-list.component.html\",\n})\nexport class ManagementCarsListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<CarsListQuery>>;\n  editId?: string;\n  editColorId?: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private routerHelper: RouterHelperService,\n    public tableService: TableService,\n    private deleteCarModelGQL: DeleteCarModelGQL,\n    private deleteCarColorGQL: DeleteCarColorGQL,\n    private updateCarModelGQL: UpdateCarModelGQL,\n    private updateCarColorGQL: UpdateCarColorGQL,\n    private createCarModelGQL: CreateCarModelGQL,\n    private createCarColorGQL: CreateCarColorGQL\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.cars));\n  }\n\n  startEdit(id: string, event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.editId = id;\n  }\n\n  async onSubmitEditModel(id: string, name: string) {\n    const res = await firstValueFrom(\n      this.updateCarModelGQL.mutate({ id, input: { name } })\n    );\n    this.editId = undefined;\n  }\n\n  async onAddModel() {\n    const res = await firstValueFrom(\n      this.createCarModelGQL.mutate({ input: { name: \"\" } })\n    );\n    this.routerHelper.refresh(this.route);\n  }\n\n  async onDeleteModel(id: string) {\n    const result = await firstValueFrom(this.deleteCarModelGQL.mutate({ id }));\n    this.routerHelper.refresh(this.route);\n  }\n\n  startEditColor(id: string, event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.editColorId = id;\n  }\n\n  async onSubmitEditColor(id: string, title: string) {\n    const res = await firstValueFrom(\n      this.updateCarColorGQL.mutate({ id, input: { name: title } })\n    );\n    this.editColorId = undefined;\n  }\n\n  async onAddColor() {\n    const res = await firstValueFrom(\n      this.createCarColorGQL.mutate({ input: { name: \"\" } })\n    );\n    this.routerHelper.refresh(this.route);\n  }\n\n  async onDeleteColor(id: string) {\n    const result = await firstValueFrom(this.deleteCarColorGQL.mutate({ id }));\n    this.routerHelper.refresh(this.route);\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Cars\"\n  nzSubtitle=\"Basic car info definitions\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" (click)=\"onAddModel()\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      *ngIf=\"(query | async)?.data?.carModels?.nodes as carModels\"\n      #ajaxTable\n      [nzData]=\"carModels\"\n      nzBordered\n      nzTitle=\"Models\"\n    >\n      <thead>\n        <tr>\n          <th nzWidth=\"80%\">{{ \"profile.name\" | translate }}</th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let data of ajaxTable.data\"\n          class=\"editable-row\"\n          (click)=\"startEdit(data.id, $event)\"\n        >\n          <td>\n            <div class=\"editable-cell\" *ngIf=\"editId !== data.id; else editTpl\">\n              <div class=\"editable-cell-value-wrap\">\n                {{ data.name }}\n              </div>\n            </div>\n            <ng-template #editTpl>\n              <input\n                nz-input\n                [(ngModel)]=\"data.name\"\n                (keyup.enter)=\"onSubmitEditModel(data.id, data.name)\"\n              />\n            </ng-template>\n          </td>\n          <td>\n            <a\n              nz-popconfirm\n              nzPopconfirmTitle=\"{{ 'message.areYouSure' | translate }}\"\n              (nzOnConfirm)=\"onDeleteModel(data.id)\"\n              >{{ \"profile.delete\" | translate }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n    <button\n      nz-button\n      nzType=\"default\"\n      (click)=\"onAddColor()\"\n      class=\"float-right mb-2\"\n    >\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n    <nz-table\n      *ngIf=\"(query | async)?.data?.carColors as carColors\"\n      #colorTable\n      [nzData]=\"carColors\"\n      nzBordered\n      nzTitle=\"Colors\"\n    >\n      <thead>\n        <tr>\n          <th nzWidth=\"80%\">{{ \"profile.name\" | translate }}</th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let data of colorTable.data\"\n          class=\"editable-row\"\n          (click)=\"startEditColor(data.id, $event)\"\n        >\n          <td>\n            <div\n              class=\"editable-cell\"\n              *ngIf=\"editColorId !== data.id; else editTpl\"\n            >\n              <div class=\"editable-cell-value-wrap\">\n                {{ data.name }}\n              </div>\n            </div>\n            <ng-template #editTpl>\n              <input\n                nz-input\n                [(ngModel)]=\"data.name\"\n                (keyup.enter)=\"onSubmitEditColor(data.id, data.name)\"\n              />\n            </ng-template>\n          </td>\n          <td>\n            <a\n              nz-popconfirm\n              nzPopconfirmTitle=\"{{ 'message.areYouSure' | translate }}\"\n              (nzOnConfirm)=\"onDeleteColor(data.id)\"\n              >{{ \"profile.delete\" | translate }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n  </nz-page-header-content>\n</nz-page-header>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CarModelFilter,\n  CarModelSortFields,\n  CarsListGQL,\n  CarsListQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class CarsListResolver\n  implements Resolve<ApolloQueryResult<CarsListQuery>>\n{\n  constructor(private paging: TableService, private gql: CarsListGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<CarsListQuery>> {\n    const params = this.paging.deserializeQueryParams<\n      CarModelSortFields,\n      CarModelFilter\n    >(route.queryParams);\n    return this.gql.fetch({});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementCarsListComponent } from './management-cars-list/management-cars-list.component';\nimport { CarsListResolver } from './management-cars-list/management-cars-list.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: ManagementCarsListComponent, resolve: { cars: CarsListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    CarsListResolver\n  ]\n})\nexport class ManagementCarsRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ManagementCarsRoutingModule } from \"./management-cars-routing.module\";\nimport { ManagementCarsListComponent } from \"./management-cars-list/management-cars-list.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [ManagementCarsListComponent],\n  imports: [ManagementCarsRoutingModule, SharedModule],\n  providers: [],\n})\nexport class ManagementCarsModule {}\n"],"names":[],"sourceRoot":"webpack:///"}