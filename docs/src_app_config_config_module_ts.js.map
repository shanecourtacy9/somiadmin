{"version":3,"file":"src_app_config_config_module_ts.js","mappings":"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","sources":["./src/app/config/config-resolver.ts","./src/app/config/config-routing.module.ts","./src/app/config/config.component.ts","./src/app/config/config.component.html","./src/app/config/config.guard.ts","./src/app/config/config.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport {\n  CurrentConfigurationGQL,\n  CurrentConfigurationQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\n\n@Injectable()\nexport class ConfigResolver\n  implements Resolve<ApolloQueryResult<CurrentConfigurationQuery>>\n{\n  constructor(private currentConfigGql: CurrentConfigurationGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<CurrentConfigurationQuery>> {\n    return this.currentConfigGql.fetch({});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConfigComponent } from './config.component';\nimport { ConfigGuard } from './config.guard';\nimport { ConfigResolver } from './config-resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: ConfigComponent, canActivate: [ConfigGuard], resolve: { config: ConfigResolver } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [ConfigGuard, ConfigResolver]\n})\nexport class ConfigRoutingModule { }\n","import {\n  Component,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CurrentConfigurationQuery,\n  DisableServerGQL,\n  UpdateConfigStatus,\n  UpdateFirebaseGQL,\n  UpdateMapsApiKeyGQL,\n  UpdatePurchaseCodeGQL,\n  UpdatePurchaseCodeStatus,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { environment } from \"@ridy/admin-panel/src/environments/environment\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { NzModalRef, NzModalService } from \"ng-zorro-antd/modal\";\nimport { NzUploadChangeParam } from \"ng-zorro-antd/upload\";\nimport { firstValueFrom, map, Observable, Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-config\",\n  templateUrl: \"./config.component.html\",\n  styleUrls: [\"./config.component.css\"],\n})\nexport class ConfigComponent implements OnInit, OnDestroy {\n  currentStep = 0;\n  tplModal!: NzModalRef;\n  remoteConfig!: Observable<ApolloQueryResult<CurrentConfigurationQuery>>;\n  currentConfig!: CurrentConfigurationQuery;\n  root = environment.root;\n  clients: string[] = [];\n  selectedClient!: string;\n  configed = false;\n  tplModalButtonLoading = false;\n  @ViewChild(\"tplContent\") clientModalContent!: TemplateRef<HTMLElement>;\n  @ViewChild(\"tplFooter\") clientModalFooter!: TemplateRef<HTMLElement>;\n\n  configSubscription?: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private updatePurchaseGql: UpdatePurchaseCodeGQL,\n    private updateMapsGql: UpdateMapsApiKeyGQL,\n    private updateFirebaseGql: UpdateFirebaseGQL,\n    private disableServerGql: DisableServerGQL,\n    private modalService: NzModalService,\n    private msg: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.remoteConfig = this.route.data.pipe(map((data) => data.config));\n    this.configSubscription = this.remoteConfig.subscribe(\n      (data) => (this.currentConfig = data.data)\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.configSubscription?.unsubscribe();\n  }\n\n  pre(): void {\n    this.currentStep -= 1;\n  }\n\n  async next() {\n    switch (this.currentStep) {\n      case 0: {\n        if (this.currentConfig.currentConfiguration.purchaseCode == null) {\n          this.msg.error(\"Purchase code is invalid.\");\n          return;\n        }\n        const result = await firstValueFrom(\n          this.updatePurchaseGql.mutate({\n            code: this.currentConfig.currentConfiguration.purchaseCode ?? \"\",\n          })\n        );\n        console.log(result);\n        if (\n          result.data?.updatePurchaseCode.status ==\n          UpdatePurchaseCodeStatus.ClientFound\n        ) {\n          this.clients =\n            result.data?.updatePurchaseCode.clients?.map(\n              (client) => client.ip\n            ) ?? [];\n          this.createClientsModal();\n          return;\n        }\n        if (\n          result.data?.updatePurchaseCode.status ==\n          UpdatePurchaseCodeStatus.Invalid\n        ) {\n          this.msg.error(\n            \"Purchase code is Invalid. You can contact minimalistic.apps@gmail.com for more information.\"\n          );\n        }\n        if (\n          result.data?.updatePurchaseCode.status == UpdatePurchaseCodeStatus.Ok\n        ) {\n          this.currentStep += 1;\n        }\n        break;\n      }\n\n      case 1: {\n        if (\n          this.currentConfig.currentConfiguration.adminPanelAPIKey == null ||\n          this.currentConfig.currentConfiguration.adminPanelAPIKey.length <\n            10 ||\n          this.currentConfig.currentConfiguration.backendMapsAPIKey == null ||\n          this.currentConfig.currentConfiguration.backendMapsAPIKey.length < 10\n        ) {\n          this.msg.error(\"Google Maps API Keys seems invalid.\");\n          return;\n        }\n        const result = await firstValueFrom(\n          this.updateMapsGql.mutate({\n            backend: this.currentConfig.currentConfiguration.backendMapsAPIKey,\n            adminPanel:\n              this.currentConfig.currentConfiguration.adminPanelAPIKey,\n          })\n        );\n        if (result.data?.updateMapsAPIKey.status == UpdateConfigStatus.Ok) {\n          this.currentStep += 1;\n        } else {\n          this.msg.error(\n            result.data?.updateMapsAPIKey.message ?? \"Unknown Error\"\n          );\n        }\n        break;\n      }\n    }\n  }\n\n  createClientsModal(): void {\n    this.tplModal = this.modalService.create({\n      nzTitle: \"License Verification\",\n      nzContent: this.clientModalContent,\n      nzFooter: this.clientModalFooter,\n      nzMaskClosable: false,\n      nzClosable: false,\n    });\n  }\n  async disableServer() {\n    this.tplModalButtonLoading = true;\n    await firstValueFrom(\n      this.disableServerGql.mutate({ ip: this.selectedClient })\n    );\n    this.msg.success(\"Disable was successful.\");\n    this.tplModal.close();\n  }\n\n  async done() {\n    if (\n      this.currentConfig.currentConfiguration.firebaseProjectPrivateKey == null\n    ) {\n      this.msg.error(\"Firebase Project key seems invalid.\");\n      return;\n    }\n    const result = await firstValueFrom(\n      this.updateFirebaseGql.mutate({\n        keyFileName:\n          this.currentConfig.currentConfiguration.firebaseProjectPrivateKey,\n      })\n    );\n    if (result.data?.updateFirebase.status == UpdateConfigStatus.Ok) {\n      this.configed = true;\n    } else {\n      this.msg.error(result.data?.updateFirebase.message ?? \"Unknown error\");\n    }\n  }\n\n  handleChange(event: NzUploadChangeParam): void {\n    const status = event.file.status;\n    if (status !== \"uploading\") {\n    }\n    if (status === \"done\") {\n      this.msg.success(`${event.file.name} file uploaded successfully.`);\n      this.currentConfig.currentConfiguration.firebaseProjectPrivateKey =\n        event.file.name;\n    } else if (status === \"error\") {\n      this.msg.error(`${event.file.name} file upload failed.`);\n    }\n  }\n}\n","<nz-steps *ngIf=\"!configed\" [nzCurrent]=\"currentStep\" nzType=\"navigation\">\n  <nz-step\n    nzTitle=\"Purchase Code\"\n    nzDescription=\"License Verification\"\n  ></nz-step>\n  <nz-step nzTitle=\"Maps API\" nzDescription=\"Google Maps API Keys\"></nz-step>\n  <nz-step\n    nzTitle=\"Firebase Admin SDK\"\n    nzDescription=\"Notification & Auth\"\n  ></nz-step>\n</nz-steps>\n<div class=\"step-content\" *ngIf=\"currentStep === 0\">\n  <input\n    nz-input\n    placeholder=\"Purchase Code\"\n    [(ngModel)]=\"currentConfig.currentConfiguration.purchaseCode\"\n  />\n</div>\n<div class=\"step-content\" *ngIf=\"currentStep === 1\">\n  <input\n    nz-input\n    placeholder=\"Backend Maps API key\"\n    [(ngModel)]=\"currentConfig.currentConfiguration.backendMapsAPIKey\"\n  />\n  <input\n    nz-input\n    placeholder=\"Dashboard Maps API key\"\n    [(ngModel)]=\"currentConfig.currentConfiguration.adminPanelAPIKey\"\n  />\n</div>\n<div class=\"step-content\" *ngIf=\"currentStep === 2 && !configed\">\n  <nz-upload\n    nzType=\"drag\"\n    [nzAction]=\"root + 'config/upload'\"\n    (nzChange)=\"handleChange($event)\"\n    nzAccept=\".json,application/json\"\n  >\n    <p class=\"ant-upload-drag-icon\">\n      <i nz-icon nzType=\"inbox\"></i>\n    </p>\n    <p class=\"ant-upload-text\">Firebase Project Private Key</p>\n    <p class=\"ant-upload-hint\">\n      Upload private key json file received from firebase project under Service\n      Account and by clicking on the `Generate Private Key` button.\n    </p>\n  </nz-upload>\n</div>\n<div class=\"steps-action\" *ngIf=\"!configed\">\n  <button nz-button nzType=\"default\" (click)=\"pre()\" *ngIf=\"currentStep > 0\">\n    Previous\n  </button>\n  <button nz-button nzType=\"default\" (click)=\"next()\" *ngIf=\"currentStep < 2\">\n    Next\n  </button>\n  <button nz-button nzType=\"default\" (click)=\"done()\" *ngIf=\"currentStep === 2\">\n    Done\n  </button>\n</div>\n<nz-result\n  *ngIf=\"configed\"\n  nzStatus=\"success\"\n  nzTitle=\"Configuration Done!\"\n  nzSubTitle=\"Your configuration steps are done now! You will need to wait for around 30 seconds so system would set it up then you can go to login screen using button below.\"\n>\n  <div nz-result-extra>\n    <button nz-button nzType=\"default\" routerLink=\"../login\">Go Login</button>\n  </div>\n</nz-result>\n<ng-template #tplContent>\n  <p>\n    This purchase code seems to have been used by another server `in\n    past`/`right now`. You can select to disable the previous server from below\n    list and continue using on this server.\n  </p>\n  <nz-select\n    [(ngModel)]=\"selectedClient\"\n    nzAllowClear\n    nzPlaceHolder=\"Choose\"\n    style=\"width: 100%\"\n  >\n    <nz-option\n      *ngFor=\"let client of clients\"\n      [nzValue]=\"client\"\n      [nzLabel]=\"client\"\n    ></nz-option>\n  </nz-select>\n</ng-template>\n<ng-template #tplFooter>\n  <button\n    nz-button\n    nzType=\"default\"\n    [nzLoading]=\"tplModalButtonLoading\"\n    [disabled]=\"selectedClient === null\"\n    (click)=\"disableServer()\"\n  >\n    Disable Selected Server\n  </button>\n</ng-template>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { CurrentConfigurationGQL } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom } from \"rxjs\";\n\n@Injectable()\nexport class ConfigGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private msg: NzMessageService,\n    private currentConfigGql: CurrentConfigurationGQL\n  ) {}\n\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean | UrlTree> {\n    const result = await firstValueFrom(this.currentConfigGql.fetch({}));\n    if (result.data.currentConfiguration.firebaseProjectPrivateKey == null) {\n      return true;\n    } else {\n      this.msg.warning(\n        \"System is already configured. Try with admin password parameter\"\n      );\n      this.router.navigate([\"../login\"]);\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigComponent } from './config.component';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { ConfigRoutingModule } from './config-routing.module';\nimport { SharedModule } from '../@components/shared.module';\n\n\n\n@NgModule({\n  declarations: [ConfigComponent],\n  imports: [\n    CommonModule,\n    ConfigRoutingModule,\n    SharedModule,\n  ],\n  providers: [NzModalService]\n})\nexport class ConfigModule { }\n"],"names":[],"sourceRoot":"webpack:///"}