{"version":3,"file":"src_app_cms_management_management-settings_management-settings_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACuB;;;AAG9E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uFAA2B,EAAE;CACrD,CAAC;AAMK,MAAM,+BAA+B;;8GAA/B,+BAA+B;4HAA/B,+BAA+B;gIAHjC,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,+BAA+B,oFAFhC,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV4C;AACnB;AACQ;AACF;AACiB;AAClC;;;;;;;;;;;;;;;;AAM/B,MAAM,2BAA2B;IAMtC,YACU,KAAqB,EACrB,OAAyB,EACzB,iBAAoC,EACpC,EAAe,EACf,SAA2B;QAJ3B,UAAK,GAAL,KAAK,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAkB;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAAkB;QAVrC,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,WAAW,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;YACxC,WAAW,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;YACxC,iBAAiB,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;SAC/C,CAAC,CAAC;IAOA,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEb,QAAQ;;YACZ,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;gBACpE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC7C,OAAO;aACR;YACD,IAAI;gBACF,MAAM,oDAAc,CAClB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAC5B,KAAK,EAAE;wBACL,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;wBACxC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;qBACxC;iBACF,CAAC,CACH,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;gBACvD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;aACnB;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC9C;QACH,CAAC;KAAA;;sGAnCU,2BAA2B;yHAA3B,2BAA2B;QCZxC,+EAAgC;;QAE5B,+EAKiB;QACjB,0EAAuB;QACiB,uJAAY,cAAU,IAAC;QAC3D,+EAAc;QAET,uEAAY;QAAA,4DACd;QACD,sFAAoD;QAClD,uEAKE;QACJ,4DAAkB;QAEpB,gFAAc;QAET,wEAAY;QAAA,4DACd;QACD,sFAAoD;QAClD,uEAKE;QACJ,4DAAkB;QAEpB,gFAAc;QAET,+EAAmB;QAAA,4DACrB;QACD,sFAAoD;QAClD,wEAKE;QACJ,4DAAkB;QAEpB,8EAMC;QACC,kEACF;QAAA,4DAAS;;QAxDP,0DAAsD;QAAtD,2KAAsD;QAE1D,0DAAiB;QAAjB,0EAAiB;QAME,0DAAkB;QAAlB,+EAAkB;QA4CjC,2DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;;;ACpDY;AAEwC;AACT;AACK;;AAM5E,MAAM,wBAAwB;;gGAAxB,wBAAwB;qHAAxB,wBAAwB;yHAF1B,CAAC,yDAAY,EAAE,gGAA+B,EAAE,4FAAY,CAAC;mIAE3D,wBAAwB,mBAHpB,uFAA2B,aAChC,yDAAY,EAAE,gGAA+B,EAAE,4FAAY","sources":["./src/app/cms/management/management-settings/management-settings-routing.module.ts","./src/app/cms/management/management-settings/management-settings.component.ts","./src/app/cms/management/management-settings/management-settings.component.html","./src/app/cms/management/management-settings/management-settings.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagementSettingsComponent } from './management-settings.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ManagementSettingsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagementSettingsRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { UpdatePasswordGQL } from \"@ridy/admin-panel/generated/graphql\";\nimport { firstValueFrom } from \"rxjs\";\n\n@Component({\n  selector: \"app-management-settings\",\n  templateUrl: \"./management-settings.component.html\",\n})\nexport class ManagementSettingsComponent implements OnInit {\n  form = this.fb.group({\n    oldPassword: [null, Validators.required],\n    newPassword: [null, Validators.required],\n    newPasswordRepeat: [null, Validators.required],\n  });\n  constructor(\n    private route: ActivatedRoute,\n    private message: NzMessageService,\n    private updatePasswordGql: UpdatePasswordGQL,\n    private fb: FormBuilder,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit(): void {}\n\n  async onSubmit() {\n    if (this.form.value.newPassword != this.form.value.newPasswordRepeat) {\n      this.message.error(\"Passwords don't match.\");\n      return;\n    }\n    try {\n      await firstValueFrom(\n        this.updatePasswordGql.mutate({\n          input: {\n            oldPassword: this.form.value.oldPassword,\n            newPasswod: this.form.value.newPassword,\n          },\n        })\n      );\n      this.message.success(\"Password Updated Successfully.\");\n      this.form.reset();\n    } catch (error) {\n      this.message.error(\"Action is not allowed.\");\n    }\n  }\n}\n","<nz-tabset nzTabPosition=\"left\">\n  <nz-tab nzTitle=\"{{ 'settings.generalSettings' | translate }}\">\n    <nz-page-header\n      [nzGhost]=\"false\"\n      nzTitle=\"Change Password\"\n      nzSubtitle=\"Update your password used to access this panel\"\n    >\n    </nz-page-header>\n    <nz-card style=\"mt-16\">\n      <form nz-form #frm [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"oldPassword\"\n            >Old Password</nz-form-label\n          >\n          <nz-form-control nzErrorTip=\"Password is incorrect\">\n            <input\n              nz-input\n              formControlName=\"oldPassword\"\n              id=\"oldPassword\"\n              type=\"password\"\n            />\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"newPassword\"\n            >New Password</nz-form-label\n          >\n          <nz-form-control nzErrorTip=\"Password is incorrect\">\n            <input\n              nz-input\n              formControlName=\"newPassword\"\n              id=\"newPassword\"\n              type=\"password\"\n            />\n          </nz-form-control>\n        </nz-form-item>\n        <nz-form-item>\n          <nz-form-label nzRequired nzFor=\"newPasswordRepeat\"\n            >New Password Repeat</nz-form-label\n          >\n          <nz-form-control nzErrorTip=\"Password is incorrect\">\n            <input\n              nz-input\n              formControlName=\"newPasswordRepeat\"\n              id=\"newPasswordRepeat\"\n              type=\"password\"\n            />\n          </nz-form-control>\n        </nz-form-item>\n        <button\n          nz-button\n          nzType=\"default\"\n          type=\"submit\"\n          [disabled]=\"form.invalid\"\n          class=\"float-right\"\n        >\n          Save\n        </button>\n      </form>\n    </nz-card>\n  </nz-tab>\n</nz-tabset>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ManagementSettingsRoutingModule } from \"./management-settings-routing.module\";\nimport { ManagementSettingsComponent } from \"./management-settings.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [ManagementSettingsComponent],\n  imports: [CommonModule, ManagementSettingsRoutingModule, SharedModule],\n})\nexport class ManagementSettingsModule {}\n"],"names":[],"sourceRoot":"webpack:///"}