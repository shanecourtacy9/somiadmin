{"version":3,"file":"src_app_cms_management_management-payment-gateways_management-payment-gateways_module_ts.js","mappings":";;;;;;;;;;;;;;;AACyD;;;AAOlD,MAAM,YAAY;IACvB,YAAoB,MAAc,EAAU,KAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAG,CAAC;IAE7D,oBAAoB,CAAC,MAA0B;QACrD,MAAM,GAAG,GAAQ,EAAE,CAAC;QACpB,IAAI,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,IAAG,CAAC,EAAE;YACzB,GAAG,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC;SACrC;aAAM;YACL,GAAG,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;SAC9B;QACD,IAAI,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,KAAI,EAAE,EAAE;YAC1B,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;SACnC;QACD,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;YACzB,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM;iBAC9B,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC1D,GAAG,CACF,CAAC,IAAI,EAAE,EAAE,CACP,GAAG,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IACpD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAC1D,EAAE,CACL,CAAC;YACJ,GAAG,CAAC,QAAQ,CAAC;gBACX,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SAC9D;QACD,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI;iBAC1B,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC;iBAClC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YACxE,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SACtE;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,wBAAwB,CAAC,MAA0B;QACjD,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE,KAAK;YAClB,mBAAmB,EAAE,OAAO;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,GAAW,EAAE,KAAyB;;QAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAW,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,MAAM,UAAU,GAAG,QAAE,CAAC,MAAM,mCAAI,EAAE,CAAC;QACnC,IAAI,KAAK,IAAI,SAAS,EAAE;YACtB,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;SACnC;aAAM;YACL,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACtB;QACD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;aACpC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACX,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACb;YACD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,KAAK,GACT,MAAM,IAAI,IAAI;gBACZ,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBACnC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YAC9B,OAAO,GAAG,GAAG,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;QACrC,CAAC,CAAC;aACD,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE,EAAE,MAAM,EAAE;YACvB,mBAAmB,EAAE,OAAO;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,KAA2B;;QAClD,MAAM,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAW,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,MAAM,UAAU,GAAG,QAAE,CAAC,MAAM,mCAAI,EAAE,CAAC;QACnC,IAAI,KAAK,IAAI,SAAS,EAAE;YACtB,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;SACtC;aAAM;YACL,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACtB;QACD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;aACpC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACX,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACb;YACD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,KAAK,GACT,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,SAAS;gBACnC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;gBACnC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YAE9B,OAAO,GAAG,GAAG,IAAI,MAAM,IAAI,KAAK,EAAE,CAAC;QACrC,CAAC,CAAC;aACD,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC;QAChC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE,EAAE,MAAM,EAAE;YACvB,mBAAmB,EAAE,OAAO;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,KAAuB;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAChC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,IAAY;QACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,sBAAsB,CACpB,WAAgB;;QAMhB,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI;YAC9B,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAa,EAAE,EAAE,CAAC,CAAC;gBAClD,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAwB;gBACjD,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAkB;aAChD,CAAC,CAAC;YACL,CAAC,CAAC,EAAE,CAAC;QACP,MAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,EAAE;YAC9B,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,EAAE;gBACrD,MAAM,SAAS,GAAQ,EAAE,CAAC;gBAC1B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,aAAa,IAAI,IAAI,EAAE;oBACzB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrD,SAAS,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC;iBAC3C;qBAAM,IAAI,aAAa,IAAI,SAAS,EAAE;oBACrC,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrD,SAAS,CAAC,aAAa,CAAC,GAAG;wBACzB,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;wBACxB,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;qBACzB,CAAC;iBACH;qBAAM;oBACL,SAAS,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/C;gBACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACzC,CAAC,CAAC,CAAC;SACJ;QACD,MAAM,SAAS,GACb,WAAW,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,MAAM,QAAQ,GACZ,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACrE,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;YACjD,MAAM,EAAE;gBACN,MAAM,EAAE,OAAC,SAAS,GAAG,CAAC,CAAC,GAAG,QAAQ,mCAAI,SAAS;gBAC/C,KAAK,EAAE,QAAQ;aAChB;YACD,MAAM,EACJ,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;SACxE,CAAC;IACJ,CAAC;;wEAnKU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;AAwKpB,MAAM,aAAa;CAGlB;AAED,IAAK,aAGJ;AAHD,WAAK,aAAa;IAChB,4BAAW;IACX,8BAAa;AACf,CAAC,EAHI,aAAa,KAAb,aAAa,QAGjB;;;;;;;;;;;;;;;;;;;;;ACrLsD;AAE6C;AACF;AACC;AACI;;;AAGvG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gHAA4B,EAAE,OAAO,EAAE,EAAC,eAAe,EAAE,4GAA0B,EAAE,EAAE,qBAAqB,EAAE,2BAA2B,EAAC;IACjK,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAA2B,EAAE,OAAO,EAAE,EAAC,cAAc,EAAE,2GAA0B,EAAE,EAAE;IACpH,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,6GAA2B,EAAE;CACxD,CAAC;AAUK,MAAM,sCAAsC;;4HAAtC,sCAAsC;mIAAtC,sCAAsC;wIALtC;QACT,4GAA0B;QAC1B,2GAA0B;KAC3B,YALQ,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAMX,sCAAsC,oFANvC,yDAAY;;;;;;;;;;;;;;;;;;;;;;AChBuB;AAEuD;AACC;AACH;AACF;AACf;;AAO5E,MAAM,+BAA+B;;8GAA/B,+BAA+B;4HAA/B,+BAA+B;iIAF/B,CAAC,2GAAe,CAAC,YADnB,CAAC,yDAAY,EAAE,+GAAsC,EAAE,4FAAY,CAAC;mIAGlE,+BAA+B,mBAJ3B,gHAA4B,EAAE,6GAA2B,aAC9D,yDAAY,EAAE,+GAAsC,EAAE,4FAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrB;AACR;AAOJ;AACmD;AACnB;AACpB;AAEiB;;;;;;;;;;;;;;;;;;;;;;ICO9D,2EAIa;;;IAFX,4EAAgB;;;IA0DpB,wEAAiC;IAC/B,mEAIK;IACL,0EAA6B;IAC3B,uDACF;;IAAA,4DAAM;IACR,qEAAe;;;IALX,0DAA6C;IAA7C,6GAA6C;IAG7C,0DACF;IADE,6JACF;;;IAEF,qEAAsE;;;IAA/C,4JAAwB;;;ADvElD,MAAM,2BAA2B;IAqCtC,YACU,KAAqB,EACrB,EAAe,EACf,SAAkC,EAClC,SAAkC,EAClC,YAAiC,EACjC,GAAqB;QALrB,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAAyB;QAClC,cAAS,GAAT,SAAS,CAAyB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,QAAG,GAAH,GAAG,CAAkB;QA1C/B,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,IAAI,CAAC;YACV,KAAK,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;YAClC,IAAI,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;YACjC,OAAO,EAAE,CAAC,KAAK,EAAE,+DAAmB,CAAC;YACrC,UAAU,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;YACvC,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,CAAC,IAAI,CAAC;YACf,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QAEH,iBAAY,GAAG,MAAM,CAAC,IAAI,CAAC,mFAAkB,CAAC,CAAC;QAC/C,SAAI,GAAG,4FAAgB,CAAC;QACxB,QAAG,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC/C,iBAAY,GAAG,CAAC,IAAkB,EAAE,SAAyB,EAAE,EAAE,CAC/D,IAAI,4CAAU,CAAC,CAAC,QAA2B,EAAE,EAAE;;YAC7C,MAAM,UAAU,GACd,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC;YAC1D,IAAI,CAAC,UAAU,EAAE;gBACf,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;gBAChD,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACpB,OAAO;aACR;YACD,MAAM,MAAM,GAAG,CAAC,UAAI,CAAC,IAAI,mCAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBAC/C,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACpB,OAAO;aACR;YACD,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC;YACpC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEL,kBAAa,GAAG,KAAK,CAAC;IASnB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;;YACrD,MAAM,OAAO,GACX,IAAI,CAAC,cAAc,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,cAAqB,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,IAAI,CAAC,cAAc,0CAAE,KAAK,0CAAE,OAAO,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;IACnC,CAAC;IAEK,QAAQ;;YACZ,MAAM,KAAmB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAlC,EAAE,EAAE,OAA8B,EAAzB,KAAK,qDAAd,MAAgB,CAAkB,CAAC;YACzC,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,MAAM,GAAG,GAAG,MAAM,oDAAc,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;aACpE;iBAAM;gBACL,MAAM,GAAG,GAAG,MAAM,oDAAc,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;KAAA;IAED,kBAAkB,CAAC,KAA6B;QAC9C,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YACzB,KAAK,WAAW;gBACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC7C,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,MAAM;SACT;IACH,CAAC;;sGApFU,2BAA2B;yHAA3B,2BAA2B;QCpBxC,+EAMiB;QACjB,0EAAuB;QACgC,uJAAY,cAAU,IAAC;QAC1E,sEAAmD;QACnD,yEAA6C;QAED,gEAAK;QAAA,4DAAgB;QAC7D,kFAAiB;QACf,sEAA8D;QAChE,4DAAkB;QAEpB,gFAAc;QAC2B,gEAAI;QAAA,4DAAgB;QAC3D,mFAAiB;QAEb,qIAIa;QACf,4DAAY;QAGhB,gFAAc;QAC8B,sEAAU;QAAA,4DAAgB;QACpE,mFAAiB;QAEZ,uEAAW;QAAA,4DACb;QAIP,0EAAyB;QAAA,oEAAQ;QAAA,4DAAK;QACtC,0EAA6C;QAER,sEAAU;QAAA,4DAAgB;QAC3D,mFAAiB;QACf,wEAA6D;QAC/D,4DAAkB;QAEpB,gFAAc;QACiC,uEAAW;QAAA,4DAAgB;QACxE,mFAAiB;QACf,wEAKE;QACJ,4DAAkB;QAEpB,gFAAc;QACsB,uEAAW;QAAA,4DAAgB;QAC7D,mFAAiB;QACf,wEAA+D;QACjE,4DAAkB;QAEpB,gFAAc;QACmB,oEAAQ;QAAA,4DAAgB;QACvD,mFAAiB;QACf,wEAAyD;QAC3D,4DAAkB;QAGtB,gFAAc;QACc,iEAAK;QAAA,4DAAgB;QAC/C,mFAAiB;QAIb,mKAAY,8BAA0B,IAAC;QAKvC,4IASe;QACf,0HAAsE;QACxE,4DAAY;QAGhB,8EAMC;QACC,wDACF;;QAAA,4DAAS;;QAtGX,0EAAiB;QAOH,0DAAkB;QAAlB,+EAAkB;QAcH,2DAAe;QAAf,qFAAe;QAoDpC,2DAA4B;QAA5B,yFAA4B;QAOb,0DAAgB;QAAhB,gFAAgB;QAUzB,0DAAe;QAAf,+EAAe;QASzB,0DAAyB;QAAzB,sFAAyB;QAEzB,0DACF;QADE,+JACF;;;;;;;;;;;;;;;;;;AClGqB;AAKoB;;;AAItC,MAAM,0BAA0B;IAGrC,YAAoB,GAA0B;QAA1B,QAAG,GAAH,GAAG,CAAuB;IAAG,CAAC;IAElD,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;;oGAVU,0BAA0B;2HAA1B,0BAA0B,WAA1B,0BAA0B;;;;;;;;;;;;;;;;;;ACTd;AAOoB;AACoC;;;;AAI1E,MAAM,0BAA0B;IAGrC,YAAoB,MAAoB,EAAU,GAAuB;QAArD,WAAM,GAAN,MAAM,CAAc;QAAU,QAAG,GAAH,GAAG,CAAoB;IAAG,CAAC;IAE7E,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAG/C,KAAK,CAAC,WAAW,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;;oGAdU,0BAA0B;2HAA1B,0BAA0B,WAA1B,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AAGwB;AAC1C;;;;;;;;;;;;;IC6B/B,qEAAoC;IAC9B,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IACkC,uDAElC;;IAAA,4DAAI;;;IALJ,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAe;IAAf,6EAAe;IAEd,0DAAgC;IAAhC,4FAAgC;IAAC,0DAElC;IAFkC,iJAElC;;;;IA5BV,iFASC;IAFC,uUAAiB,oDAA6C,IAAC;IAG/D,wEAAO;IAGD,uDACF;;IAAA,4DAAK;IACL,qEAAI;IACF,uDACF;;IAAA,4DAAK;IACL,sEAAI;IAAA,wDAAmC;;IAAA,4DAAK;IAGhD,yEAAO;IACL,mIAQK;IACP,4DAAQ;;;;IA5BR,oFAA2B;IAUrB,0DACF;IADE,4JACF;IAEE,0DACF;IADE,2JACF;IACI,0DAAmC;IAAnC,qJAAmC;IAIpB,0DAAa;IAAb,6EAAa;;ADvBnC,MAAM,4BAA4B;IAGvC,YACU,KAAqB,EACrB,MAAc,EACf,YAA0B;QAFzB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;IACzE,CAAC;;wGAXU,4BAA4B;0HAA5B,4BAA4B;QCXzC,oFAKC;QAGK,kEAA6B;QAAA,uDAC/B;;QAAA,4DAAS;QAEX,yFAAwB;QACtB,oIAgCW;;QACb,4DAAyB;;;QA5CzB,0EAAiB;QAOgB,0DAC/B;QAD+B,yJAC/B;QAOG,0DAA6C;QAA7C,oOAA6C","sources":["./src/app/@services/table-service.ts","./src/app/cms/management/management-payment-gateways/management-payment-gateways-routing.module.ts","./src/app/cms/management/management-payment-gateways/management-payment-gateways.module.ts","./src/app/cms/management/management-payment-gateways/payment-gateway-view/payment-gateway-view.component.ts","./src/app/cms/management/management-payment-gateways/payment-gateway-view/payment-gateway-view.component.html","./src/app/cms/management/management-payment-gateways/payment-gateway-view/payment-gateway-view.resolver.ts","./src/app/cms/management/management-payment-gateways/payment-gateways-list/payment-gateway-list.resolver.ts","./src/app/cms/management/management-payment-gateways/payment-gateways-list/payment-gateways-list.component.ts","./src/app/cms/management/management-payment-gateways/payment-gateways-list/payment-gateways-list.component.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { OffsetPaging } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTableQueryParams } from \"ng-zorro-antd/table\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TableService {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  private serializeQueryParams(params: NzTableQueryParams) {\n    const obj: any = {};\n    if (params?.pageIndex > 1) {\n      obj[\"pageIndex\"] = params.pageIndex;\n    } else {\n      obj[\"pageIndex\"] = undefined;\n    }\n    if (params?.pageSize != 10) {\n      obj[\"pageSize\"] = params.pageSize;\n    }\n    if (params.filter != null) {\n      const filterArray = params.filter\n        .filter((val) => val.value != null && val.value.length > 0)\n        .map(\n          (filt) =>\n            `${filt.key}|${Array.isArray(filt.value) ? \"in\" : \"eq\"}|${\n              Array.isArray(filt.value) ? filt.value.join(\"-\") : filt.value\n            }`\n        );\n      obj[\"filter\"] =\n        filterArray.length > 0 ? filterArray.join(\",\") : undefined;\n    }\n    if (params.sort != null && params.sort.length > 0) {\n      const sortArray = params.sort\n        .filter((val) => val.value != null)\n        .map((val) => `${val.key}|${val.value == \"ascend\" ? \"ASC\" : \"DESC\"}`);\n      obj[\"sort\"] = sortArray.length > 0 ? sortArray.join(\",\") : undefined;\n    }\n    return obj;\n  }\n\n  onTableQueryParamsChange(params: NzTableQueryParams): void {\n    const param = this.serializeQueryParams(params);\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: param,\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterText(key: string, value: string | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (value != undefined) {\n      baseFilter[key] = { like: value };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterRange(key: string, range: number[] | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (range != undefined) {\n      baseFilter[key] = { between: range };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\" || action == \"between\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  resetFilter(key: string, input: HTMLInputElement) {\n    this.filterText(key, undefined);\n    input.value = \"\";\n  }\n\n  downloadURI(uri: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.target = \"_blank\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  deserializeQueryParams<SortType, FilterType>(\n    queryParams: any\n  ): {\n    sorting?: TableSortItem<SortType>[];\n    paging: OffsetPaging;\n    filter?: FilterType;\n  } {\n    const sorting = queryParams.sort\n      ? queryParams.sort.split(\",\").map((sItem: string) => ({\n          field: sItem.split(\"|\")[0] as unknown as SortType,\n          direction: sItem.split(\"|\")[1] as SortDirection,\n        }))\n      : [];\n    const filter: any = {};\n    if (queryParams.filter != null) {\n      queryParams.filter.split(\",\").forEach((item: string) => {\n        const operation: any = {};\n        const operationType = item.split(\"|\")[1];\n        if (operationType == \"in\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = operationValue;\n        } else if (operationType == \"between\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = {\n            lower: operationValue[0],\n            upper: operationValue[1],\n          };\n        } else {\n          operation[operationType] = item.split(\"|\")[2];\n        }\n        filter[item.split(\"|\")[0]] = operation;\n      });\n    }\n    const pageIndex =\n      queryParams.pageIndex != null ? parseInt(queryParams.pageIndex) : 1;\n    const pageSize =\n      queryParams.pageSize != null ? parseInt(queryParams.pageSize) : 10;\n    return {\n      sorting: sorting.length > 0 ? sorting : undefined,\n      paging: {\n        offset: (pageIndex - 1) * pageSize ?? undefined,\n        limit: pageSize,\n      },\n      filter:\n        filter != null && Object.keys(filter).length > 0 ? filter : undefined,\n    };\n  }\n}\n\nclass TableSortItem<T> {\n  field!: T;\n  direction!: SortDirection;\n}\n\nenum SortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PaymentGatewayViewComponent } from './payment-gateway-view/payment-gateway-view.component';\nimport { PaymentGatewayViewResolver } from './payment-gateway-view/payment-gateway-view.resolver';\nimport { PaymentGatewayListResolver } from './payment-gateways-list/payment-gateway-list.resolver';\nimport { PaymentGatewaysListComponent } from './payment-gateways-list/payment-gateways-list.component';\n\n\nconst routes: Routes = [\n  { path: '', component: PaymentGatewaysListComponent, resolve: {paymentGateways: PaymentGatewayListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange'},\n  { path: 'view/:id', component: PaymentGatewayViewComponent, resolve: {paymentGateway: PaymentGatewayViewResolver } },\n  { path: 'new', component: PaymentGatewayViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    PaymentGatewayListResolver,\n    PaymentGatewayViewResolver\n  ]\n})\nexport class ManagementPaymentGatewaysRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ManagementPaymentGatewaysRoutingModule } from \"./management-payment-gateways-routing.module\";\nimport { PaymentGatewaysListComponent } from \"./payment-gateways-list/payment-gateways-list.component\";\nimport { PaymentGatewayViewComponent } from \"./payment-gateway-view/payment-gateway-view.component\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [PaymentGatewaysListComponent, PaymentGatewayViewComponent],\n  imports: [CommonModule, ManagementPaymentGatewaysRoutingModule, SharedModule],\n  providers: [TagColorService],\n})\nexport class ManagementPaymentGatewaysModule {}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CreatePaymentGatewayGQL,\n  PaymentGatewayType,\n  UpdatePaymentGatewayGQL,\n  ViewPaymentGatewayQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { environment } from \"@ridy/admin-panel/src/environments/environment\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { NzUploadFile } from \"ng-zorro-antd/upload\";\nimport { firstValueFrom, Observable, Observer, Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-payment-gateway-view\",\n  templateUrl: \"./payment-gateway-view.component.html\",\n})\nexport class PaymentGatewayViewComponent implements OnInit, OnDestroy {\n  form = this.fb.group({\n    id: [null],\n    title: [null, Validators.required],\n    type: [null, Validators.required],\n    enabled: [false, Validators.required],\n    privateKey: [null, Validators.required],\n    publicKey: [null],\n    saltKey: [null],\n    merchantId: [null],\n    mediaId: [null],\n  });\n  subscription?: Subscription;\n  gatewayTypes = Object.keys(PaymentGatewayType);\n  root = environment.root;\n  jwt = localStorage.getItem(\"somi_admin_token\");\n  beforeUpload = (file: NzUploadFile, _fileList: NzUploadFile[]) =>\n    new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng =\n        file.type === \"image/jpeg\" || file.type === \"image/png\";\n      if (!isJpgOrPng) {\n        this.msg.error(\"You can only upload JPG file!\");\n        observer.complete();\n        return;\n      }\n      const isLt2M = (file.size ?? 0) / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error(\"Image must smaller than 2MB!\");\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n  avatarUrl?: string;\n  loadingUpload = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private updateGQL: UpdatePaymentGatewayGQL,\n    private createGQL: CreatePaymentGatewayGQL,\n    private routerHelper: RouterHelperService,\n    private msg: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe((data) => {\n      const gateway: ApolloQueryResult<ViewPaymentGatewayQuery> =\n        data.paymentGateway;\n      this.form.patchValue(gateway.data.paymentGateway as any);\n      this.avatarUrl = gateway.data.paymentGateway?.media?.address;\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  async onSubmit() {\n    const { id, ...input } = this.form.value;\n    if (id == null) {\n      const res = await firstValueFrom(this.createGQL.mutate({ input }));\n    } else {\n      const res = await firstValueFrom(this.updateGQL.mutate({ id, input }));\n    }\n    this.routerHelper.goToParent(this.route);\n  }\n\n  handleUploadChange(event: { file: NzUploadFile }) {\n    switch (event.file.status) {\n      case \"uploading\":\n        this.loadingUpload = true;\n        break;\n      case \"done\":\n        this.loadingUpload = false;\n        this.form.patchValue({ mediaId: event.file.response.id });\n        this.avatarUrl = event.file.response.address;\n        break;\n      case \"error\":\n        this.msg.error(\"Network error\");\n        this.loadingUpload = false;\n        break;\n    }\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Payment Gateway\"\n  nzSubtitle=\"API keys and client facing definitions.\"\n>\n</nz-page-header>\n<nz-card style=\"mt-16\">\n  <form nz-form [formGroup]=\"form\" nzLayout=\"vertical\" (ngSubmit)=\"onSubmit()\">\n    <input formControlName=\"id\" type=\"hidden\" hidden />\n    <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n      <nz-form-item>\n        <nz-form-label nzRequired nzFor=\"title\">Title</nz-form-label>\n        <nz-form-control>\n          <input nz-input required id=\"title\" formControlName=\"title\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzRequired nzFor=\"type\">Type</nz-form-label>\n        <nz-form-control>\n          <nz-select formControlName=\"type\" id=\"type\">\n            <nz-option\n              *ngFor=\"let type of gatewayTypes\"\n              [nzValue]=\"type\"\n              [nzLabel]=\"type\"\n            ></nz-option>\n          </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzRequired nzFor=\"enabled\">Visibility</nz-form-label>\n        <nz-form-control>\n          <label nz-checkbox required id=\"enabled\" formControlName=\"enabled\"\n            >Is Enabled?</label\n          >\n        </nz-form-control>\n      </nz-form-item>\n    </div>\n    <h3 class=\"my-2 text-sm\">API Keys</h3>\n    <div class=\"lg:grid lg:grid-cols-4 lg:gap-2\">\n      <nz-form-item>\n        <nz-form-label nzFor=\"publicKey\">Public Key</nz-form-label>\n        <nz-form-control>\n          <input nz-input formControlName=\"publicKey\" id=\"publicKey\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzRequired nzFor=\"privateKey\">Private Key</nz-form-label>\n        <nz-form-control>\n          <input\n            nz-input\n            required\n            formControlName=\"privateKey\"\n            id=\"privateKey\"\n          />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzFor=\"merchantId\">Merchant ID</nz-form-label>\n        <nz-form-control>\n          <input nz-input formControlName=\"merchantId\" id=\"merchantId\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzFor=\"saltKey\">Salt Key</nz-form-label>\n        <nz-form-control>\n          <input nz-input formControlName=\"saltKey\" id=\"saltKey\" />\n        </nz-form-control>\n      </nz-form-item>\n    </div>\n    <nz-form-item>\n      <nz-form-label nzRequired>Image</nz-form-label>\n      <nz-form-control>\n        <nz-upload\n          [nzAction]=\"root + 'upload'\"\n          [nzHeaders]=\"{ Authorization: 'Bearer ' + jwt }\"\n          (nzChange)=\"handleUploadChange($event)\"\n          [nzBeforeUpload]=\"beforeUpload\"\n          nzListType=\"picture-card\"\n          [nzShowUploadList]=\"false\"\n        >\n          <ng-container *ngIf=\"!avatarUrl\">\n            <i\n              class=\"upload-icon\"\n              nz-icon\n              [nzType]=\"loadingUpload ? 'loading' : 'plus'\"\n            ></i>\n            <div class=\"ant-upload-text\">\n              {{ \"profile.upload\" | translate }}\n            </div>\n          </ng-container>\n          <img *ngIf=\"avatarUrl\" [src]=\"root + avatarUrl\" style=\"width: 100%\" />\n        </nz-upload>\n      </nz-form-control>\n    </nz-form-item>\n    <button\n      nz-button\n      nzType=\"default\"\n      class=\"float-right\"\n      type=\"submit\"\n      [disabled]=\"form.invalid\"\n    >\n      {{ \"profile.submit\" | translate }}\n    </button>\n  </form>\n</nz-card>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewPaymentGatewayGQL,\n  ViewPaymentGatewayQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class PaymentGatewayViewResolver\n  implements Resolve<ApolloQueryResult<ViewPaymentGatewayQuery>>\n{\n  constructor(private gql: ViewPaymentGatewayGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewPaymentGatewayQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  PaymentGatewayFilter,\n  PaymentGatewaysGQL,\n  PaymentGatewaySortFields,\n  PaymentGatewaysQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class PaymentGatewayListResolver\n  implements Resolve<ApolloQueryResult<PaymentGatewaysQuery>>\n{\n  constructor(private paging: TableService, private gql: PaymentGatewaysGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<PaymentGatewaysQuery>> {\n    const params = this.paging.deserializeQueryParams<\n      PaymentGatewaySortFields,\n      PaymentGatewayFilter\n    >(route.queryParams);\n    return this.gql.fetch(params);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { PaymentGatewaysQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-payment-gateways-list\",\n  templateUrl: \"./payment-gateways-list.component.html\",\n})\nexport class PaymentGatewaysListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<PaymentGatewaysQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public tableService: TableService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.paymentGateways));\n  }\n\n  // ngOnInit(): void {\n  //   this.route.data.subscribe(x=>{\n  //     this.total = x.items.count;\n  //     this.listOfData = x.items.data;\n  //   });\n  // }\n\n  // async changeStatus(id: number, status: boolean) {\n  //   await this.backend.saveRow('PaymentGateway', { id: id, enabled: status });\n  //   this.listOfData[this.listOfData.findIndex(x=> { return x.id == id})].enabled = status;\n  // }\n\n  // async onDelete(id: number) {\n  //   await this.backend.deleteRow('PaymentGateway', id);\n  //   this.listOfData = this.listOfData.filter(x => x.id != id);\n  // }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Payment Gateways\"\n  nzSubtitle=\"Payment options of clients\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" routerLink=\"new\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      #table\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.data?.paymentGateways as paymentGateways\"\n      [nzData]=\"paymentGateways.nodes\"\n      [nzTotal]=\"paymentGateways.totalCount\"\n      (nzQueryParams)=\"tableService.onTableQueryParamsChange($event)\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th>\n            {{ \"profile.title\" | translate }}\n          </th>\n          <th>\n            {{ \"profile.type\" | translate }}\n          </th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of table.data\">\n          <td>{{ data.title }}</td>\n          <td>{{ data.type }}</td>\n          <td>\n            <a [routerLink]=\"'view/' + data.id\">{{\n              \"table.details\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n  </nz-page-header-content>\n</nz-page-header>\n"],"names":[],"sourceRoot":"webpack:///"}