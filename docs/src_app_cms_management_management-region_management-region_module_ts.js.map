{"version":3,"file":"src_app_cms_management_management-region_management-region_module_ts.js","mappings":"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","sources":["./src/app/@services/table-service.ts","./src/app/cms/management/management-region/management-region-routing.module.ts","./src/app/cms/management/management-region/management-region.module.ts","./src/app/cms/management/management-region/region-list/region-list.component.ts","./src/app/cms/management/management-region/region-list/region-list.component.html","./src/app/cms/management/management-region/region-list/region-list.resolver.ts","./src/app/cms/management/management-region/region-view/region-view.component.ts","./src/app/cms/management/management-region/region-view/region-view.component.html","./src/app/cms/management/management-region/region-view/region-view.resolver.ts","./src/app/currencies.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { OffsetPaging } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTableQueryParams } from \"ng-zorro-antd/table\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TableService {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  private serializeQueryParams(params: NzTableQueryParams) {\n    const obj: any = {};\n    if (params?.pageIndex > 1) {\n      obj[\"pageIndex\"] = params.pageIndex;\n    } else {\n      obj[\"pageIndex\"] = undefined;\n    }\n    if (params?.pageSize != 10) {\n      obj[\"pageSize\"] = params.pageSize;\n    }\n    if (params.filter != null) {\n      const filterArray = params.filter\n        .filter((val) => val.value != null && val.value.length > 0)\n        .map(\n          (filt) =>\n            `${filt.key}|${Array.isArray(filt.value) ? \"in\" : \"eq\"}|${\n              Array.isArray(filt.value) ? filt.value.join(\"-\") : filt.value\n            }`\n        );\n      obj[\"filter\"] =\n        filterArray.length > 0 ? filterArray.join(\",\") : undefined;\n    }\n    if (params.sort != null && params.sort.length > 0) {\n      const sortArray = params.sort\n        .filter((val) => val.value != null)\n        .map((val) => `${val.key}|${val.value == \"ascend\" ? \"ASC\" : \"DESC\"}`);\n      obj[\"sort\"] = sortArray.length > 0 ? sortArray.join(\",\") : undefined;\n    }\n    return obj;\n  }\n\n  onTableQueryParamsChange(params: NzTableQueryParams): void {\n    const param = this.serializeQueryParams(params);\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: param,\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterText(key: string, value: string | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (value != undefined) {\n      baseFilter[key] = { like: value };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterRange(key: string, range: number[] | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (range != undefined) {\n      baseFilter[key] = { between: range };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\" || action == \"between\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  resetFilter(key: string, input: HTMLInputElement) {\n    this.filterText(key, undefined);\n    input.value = \"\";\n  }\n\n  downloadURI(uri: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.target = \"_blank\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  deserializeQueryParams<SortType, FilterType>(\n    queryParams: any\n  ): {\n    sorting?: TableSortItem<SortType>[];\n    paging: OffsetPaging;\n    filter?: FilterType;\n  } {\n    const sorting = queryParams.sort\n      ? queryParams.sort.split(\",\").map((sItem: string) => ({\n          field: sItem.split(\"|\")[0] as unknown as SortType,\n          direction: sItem.split(\"|\")[1] as SortDirection,\n        }))\n      : [];\n    const filter: any = {};\n    if (queryParams.filter != null) {\n      queryParams.filter.split(\",\").forEach((item: string) => {\n        const operation: any = {};\n        const operationType = item.split(\"|\")[1];\n        if (operationType == \"in\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = operationValue;\n        } else if (operationType == \"between\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = {\n            lower: operationValue[0],\n            upper: operationValue[1],\n          };\n        } else {\n          operation[operationType] = item.split(\"|\")[2];\n        }\n        filter[item.split(\"|\")[0]] = operation;\n      });\n    }\n    const pageIndex =\n      queryParams.pageIndex != null ? parseInt(queryParams.pageIndex) : 1;\n    const pageSize =\n      queryParams.pageSize != null ? parseInt(queryParams.pageSize) : 10;\n    return {\n      sorting: sorting.length > 0 ? sorting : undefined,\n      paging: {\n        offset: (pageIndex - 1) * pageSize ?? undefined,\n        limit: pageSize,\n      },\n      filter:\n        filter != null && Object.keys(filter).length > 0 ? filter : undefined,\n    };\n  }\n}\n\nclass TableSortItem<T> {\n  field!: T;\n  direction!: SortDirection;\n}\n\nenum SortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegionListComponent } from './region-list/region-list.component';\nimport { RegionsListResolver } from './region-list/region-list.resolver';\nimport { RegionViewComponent } from './region-view/region-view.component';\nimport { RegionViewResolver } from './region-view/region-view.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: RegionListComponent, resolve: { regions: RegionsListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', component: RegionViewComponent, resolve: { region: RegionViewResolver } },\n  { path: 'new', component: RegionViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    RegionsListResolver,\n    RegionViewResolver\n  ]\n})\nexport class ManagementRegionRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ManagementRegionRoutingModule } from \"./management-region-routing.module\";\nimport { RegionListComponent } from \"./region-list/region-list.component\";\nimport { RegionViewComponent } from \"./region-view/region-view.component\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [RegionListComponent, RegionViewComponent],\n  imports: [CommonModule, ManagementRegionRoutingModule, SharedModule],\n  providers: [TagColorService],\n})\nexport class ManagementRegionModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Params, ActivatedRoute, Router } from \"@angular/router\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { Observable } from \"rxjs\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { RegionListQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { map } from \"rxjs/operators\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\n\n@Component({\n  selector: \"app-region-list\",\n  templateUrl: \"./region-list.component.html\",\n})\nexport class RegionListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<RegionListQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tableService: TableService,\n    private router: Router,\n    public tagColor: TagColorService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.regions));\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Regions\"\n  nzSubtitle=\"List of all the regions app operates within\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" routerLink=\"new\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      #ajaxTable\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.data?.regions as regions\"\n      [nzData]=\"regions.nodes\"\n      [nzTotal]=\"regions.totalCount\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th>{{ \"profile.name\" | translate }}</th>\n          <th>{{ \"profile.currency\" | translate }}</th>\n          <th>{{ \"profile.status\" | translate }}</th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of ajaxTable.data\">\n          <td>{{ data.name }}</td>\n          <td>{{ data.currency }}</td>\n          <td>\n            <nz-tag [nzColor]=\"tagColor.boolean(data.enabled)\">{{\n              data.enabled\n                ? (\"profile.enabled\" | translate)\n                : (\"profile.disabled\" | translate)\n            }}</nz-tag>\n          </td>\n          <td>\n            <a [routerLink]=\"'view/' + data.id\">{{\n              \"profile.view\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n  </nz-page-header-content>\n</nz-page-header>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  RegionFilter,\n  RegionListGQL,\n  RegionListQuery,\n  RegionSortFields,\n  RiderFilter,\n  RidersListGQL,\n  RidersListQuery,\n  RiderSortFields,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class RegionsListResolver\n  implements Resolve<ApolloQueryResult<RegionListQuery>>\n{\n  constructor(private paging: TableService, private gql: RegionListGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<RegionListQuery>> {\n    const params = this.paging.deserializeQueryParams<\n      RegionSortFields,\n      RegionFilter\n    >(route.queryParams);\n    return this.gql.fetch(params);\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { GoogleMap } from \"@angular/google-maps\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  CreateRegionGQL,\n  RegionViewQuery,\n  UpdateRegionGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom } from \"rxjs\";\nimport { CURRENCY_LIST } from \"../../../../currencies\";\n\n@Component({\n  selector: \"app-region-view\",\n  templateUrl: \"./region-view.component.html\",\n})\nexport class RegionViewComponent implements AfterViewInit {\n  form = this.fb.group({\n    id: [null],\n    name: [null, Validators.required],\n    currency: [null, Validators.required],\n    enabled: [true, Validators.required],\n    location: [null],\n  });\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap;\n  center = { lat: 24, lng: 12 };\n  drawingManager?: google.maps.drawing.DrawingManager;\n  currencies = CURRENCY_LIST;\n  polygons: any[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private createGQL: CreateRegionGQL,\n    private updateGQL: UpdateRegionGQL,\n    private msg: NzMessageService\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.initializeDrawingManager();\n  }\n\n  initializeDrawingManager() {\n    this.route.data.subscribe((data) => {\n      if (data.region != null) {\n        const val: RegionViewQuery = data.region.data;\n        const region = val.region;\n        if (region != null) {\n          this.form.patchValue(region);\n          if (region.location != null) {\n            const latlngbounds = new google.maps.LatLngBounds();\n            for (const poly of region.location) {\n              for (const location of poly) {\n                latlngbounds.extend(location);\n              }\n            }\n            this.map.fitBounds(latlngbounds);\n          }\n        }\n      }\n    });\n    this.drawingManager = new google.maps.drawing.DrawingManager({\n      drawingMode: google.maps.drawing.OverlayType.POLYGON,\n      drawingControl: true,\n      map: this.map?.googleMap,\n      drawingControlOptions: {\n        position: google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [google.maps.drawing.OverlayType.POLYGON],\n      },\n    });\n    google.maps.event.addListener(\n      this.drawingManager,\n      \"overlaycomplete\",\n      (event: any) => {\n        this.polygons?.push(event.overlay);\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const ar = event.overlay.getPath().getArray();\n          ar.push(ar[0]);\n          if (this.form.value.location == null) {\n            this.form.value.location = [ar];\n          } else {\n            this.form.value.location.push(ar);\n          }\n        }\n      }\n    );\n  }\n\n  async onSubmit() {\n    try {\n      const { id, ...update } = this.form.value;\n      if (id == null) {\n        await firstValueFrom(this.createGQL.mutate({ input: update }));\n      } else {\n        await firstValueFrom(this.updateGQL.mutate({ id, update }));\n      }\n      this.router.navigate([\"management/regions\"], {\n        relativeTo: this.route.root,\n      });\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n\n  clearMap() {\n    for (let poly of this.polygons) {\n      poly.setMap(null);\n    }\n    this.polygons = [];\n    this.form.value.location = [];\n    this.form.patchValue({ location: [] });\n  }\n}\n","<nz-page-header [nzGhost]=\"false\" nzBackIcon nzTitle=\"New Region\" nzSubtitle=\"Pramaters of region app is operating within.\">\n</nz-page-header>\n<nz-card [nzActions]=\"[tmplActions]\" style=\"mt-16\">\n  <form nz-form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <input formControlName=\"id\" type=\"hidden\" hidden>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"name\">Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid name\">\n        <input nz-input formControlName=\"name\" id=\"name\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"currency\">Currency</nz-form-label>\n      <nz-form-control>\n        <nz-select formControlName=\"currency\" id=\"currency\">\n          <nz-option *ngFor=\"let currency of currencies\" [nzLabel]=\"currency.label\" [nzValue]=\"currency.value\"></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"enabled\" nzRequired>Is Enabled</nz-form-label>\n      <nz-form-control>\n        <nz-switch formControlName=\"enabled\" id=\"enabled\"></nz-switch>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label nzFor=\"enabled\" nzRequired>Geofence</nz-form-label>\n      <nz-form-control>\n\n    <input type=\"hidden\" hidden formControlName=\"location\">\n        <google-map height=\"400px\" width=\"100%\" [center]=\"center\" [zoom]=\"4\">\n          <map-polygon #poly [paths]=\"form.value?.location\">\n          </map-polygon>\n        </google-map>\n      </nz-form-control>\n    </nz-form-item>\n    \n    <ng-template #tmplActions>\n      <button nz-button type=\"submit\" [disabled]=\"form.invalid\" (click)=\"onSubmit()\">Save</button>\n      <button nz-button (click)=\"clearMap()\" style=\"margin: 4px;\" type=\"button\" [disabled]=\"polygons.length == 0\">Clear Map</button>\n    </ng-template>\n  </form>\n</nz-card>","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  RegionViewGQL,\n  ViewRiderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class RegionViewResolver\n  implements Resolve<ApolloQueryResult<ViewRiderQuery>>\n{\n  constructor(private gql: RegionViewGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewRiderQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","interface CurrencyItem {\n  value: string;\n  label: string;\n}\nexport const CURRENCY_LIST: CurrencyItem[] = [\n  { value: \"AED\", label: \"United Arab Emirates Dirham\"},\n  { value: \"AFN\", label: \"Afghan Afghani\"},\n  { value: \"ALL\", label: \"Albanian Lek\"},\n  { value: \"AMD\", label: \"Armenian Dram\"},\n  { value: \"ANG\", label: \"Netherlands Antillean Guilder\"},\n  { value: \"AOA\", label: \"Angolan Kwanza\"},\n  { value: \"ARS\", label: \"Argentine Peso\"},\n  { value: \"AUD\", label: \"Australian Dollar\"},\n  { value: \"AWG\", label: \"Aruban Florin\"},\n  { value: \"AZN\", label: \"Azerbaijani Manat\"},\n  { value: \"BAM\", label: \"Bosnia-Herzegovina Convertible Mark\"},\n  { value: \"BBD\", label: \"Barbadian Dollar\"},\n  { value: \"BDT\", label: \"Bangladeshi Taka\"},\n  { value: \"BGN\", label: \"Bulgarian Lev\"},\n  { value: \"BHD\", label: \"Bahraini Dinar\"},\n  { value: \"BIF\", label: \"Burundian Franc\"},\n  { value: \"BMD\", label: \"Bermudan Dollar\"},\n  { value: \"BND\", label: \"Brunei Dollar\"},\n  { value: \"BOB\", label: \"Bolivian Boliviano\"},\n  { value: \"BRL\", label: \"Brazilian Real\"},\n  { value: \"BSD\", label: \"Bahamian Dollar\"},\n  { value: \"BTC\", label: \"Bitcoin\"},\n  { value: \"BTN\", label: \"Bhutanese Ngultrum\"},\n  { value: \"BWP\", label: \"Botswanan Pula\"},\n  { value: \"BYN\", label: \"Belarusian Ruble\"},\n  { value: \"BZD\", label: \"Belize Dollar\"},\n  { value: \"CAD\", label: \"Canadian Dollar\"},\n  { value: \"CDF\", label: \"Congolese Franc\"},\n  { value: \"CHF\", label: \"Swiss Franc\"},\n  { value: \"CLF\", label: \"Chilean Unit of Account (UF)\"},\n  { value: \"CLP\", label: \"Chilean Peso\"},\n  { value: \"CNH\", label: \"Chinese Yuan (Offshore)\"},\n  { value: \"CNY\", label: \"Chinese Yuan\"},\n  { value: \"COP\", label: \"Colombian Peso\"},\n  { value: \"CRC\", label: \"Costa Rican Colón\"},\n  { value: \"CUC\", label: \"Cuban Convertible Peso\"},\n  { value: \"CUP\", label: \"Cuban Peso\"},\n  { value: \"CVE\", label: \"Cape Verdean Escudo\"},\n  { value: \"CZK\", label: \"Czech Republic Koruna\"},\n  { value: \"DJF\", label: \"Djiboutian Franc\"},\n  { value: \"DKK\", label: \"Danish Krone\"},\n  { value: \"DOP\", label: \"Dominican Peso\"},\n  { value: \"DZD\", label: \"Algerian Dinar\"},\n  { value: \"EGP\", label: \"Egyptian Pound\"},\n  { value: \"ERN\", label: \"Eritrean Nakfa\"},\n  { value: \"ETB\", label: \"Ethiopian Birr\"},\n  { value: \"EUR\", label: \"Euro\"},\n  { value: \"FJD\", label: \"Fijian Dollar\"},\n  { value: \"FKP\", label: \"Falkland Islands Pound\"},\n  { value: \"GBP\", label: \"British Pound Sterling\"},\n  { value: \"GEL\", label: \"Georgian Lari\"},\n  { value: \"GGP\", label: \"Guernsey Pound\"},\n  { value: \"GHS\", label: \"Ghanaian Cedi\"},\n  { value: \"GIP\", label: \"Gibraltar Pound\"},\n  { value: \"GMD\", label: \"Gambian Dalasi\"},\n  { value: \"GNF\", label: \"Guinean Franc\"},\n  { value: \"GTQ\", label: \"Guatemalan Quetzal\"},\n  { value: \"GYD\", label: \"Guyanaese Dollar\"},\n  { value: \"HKD\", label: \"Hong Kong Dollar\"},\n  { value: \"HNL\", label: \"Honduran Lempira\"},\n  { value: \"HRK\", label: \"Croatian Kuna\"},\n  { value: \"HTG\", label: \"Haitian Gourde\"},\n  { value: \"HUF\", label: \"Hungarian Forint\"},\n  { value: \"IDR\", label: \"Indonesian Rupiah\"},\n  { value: \"ILS\", label: \"Israeli New Sheqel\"},\n  { value: \"IMP\", label: \"Manx pound\"},\n  { value: \"INR\", label: \"Indian Rupee\"},\n  { value: \"IQD\", label: \"Iraqi Dinar\"},\n  { value: \"IRR\", label: \"Iranian Rial\"},\n  { value: \"ISK\", label: \"Icelandic Króna\"},\n  { value: \"JEP\", label: \"Jersey Pound\"},\n  { value: \"JMD\", label: \"Jamaican Dollar\"},\n  { value: \"JOD\", label: \"Jordanian Dinar\"},\n  { value: \"JPY\", label: \"Japanese Yen\"},\n  { value: \"KES\", label: \"Kenyan Shilling\"},\n  { value: \"KGS\", label: \"Kyrgystani Som\"},\n  { value: \"KHR\", label: \"Cambodian Riel\"},\n  { value: \"KMF\", label: \"Comorian Franc\"},\n  { value: \"KPW\", label: \"North Korean Won\"},\n  { value: \"KRW\", label: \"South Korean Won\"},\n  { value: \"KWD\", label: \"Kuwaiti Dinar\"},\n  { value: \"KYD\", label: \"Cayman Islands Dollar\"},\n  { value: \"KZT\", label: \"Kazakhstani Tenge\"},\n  { value: \"LAK\", label: \"Laotian Kip\"},\n  { value: \"LBP\", label: \"Lebanese Pound\"},\n  { value: \"LKR\", label: \"Sri Lankan Rupee\"},\n  { value: \"LRD\", label: \"Liberian Dollar\"},\n  { value: \"LSL\", label: \"Lesotho Loti\"},\n  { value: \"LYD\", label: \"Libyan Dinar\"},\n  { value: \"MAD\", label: \"Moroccan Dirham\"},\n  { value: \"MDL\", label: \"Moldovan Leu\"},\n  { value: \"MGA\", label: \"Malagasy Ariary\"},\n  { value: \"MKD\", label: \"Macedonian Denar\"},\n  { value: \"MMK\", label: \"Myanma Kyat\"},\n  { value: \"MNT\", label: \"Mongolian Tugrik\"},\n  { value: \"MOP\", label: \"Macanese Pataca\"},\n  { value: \"MRO\", label: \"Mauritanian Ouguiya (pre-2018)\"},\n  { value: \"MRU\", label: \"Mauritanian Ouguiya\"},\n  { value: \"MUR\", label: \"Mauritian Rupee\"},\n  { value: \"MVR\", label: \"Maldivian Rufiyaa\"},\n  { value: \"MWK\", label: \"Malawian Kwacha\"},\n  { value: \"MXN\", label: \"Mexican Peso\"},\n  { value: \"MYR\", label: \"Malaysian Ringgit\"},\n  { value: \"MZN\", label: \"Mozambican Metical\"},\n  { value: \"NAD\", label: \"Namibian Dollar\"},\n  { value: \"NGN\", label: \"Nigerian Naira\"},\n  { value: \"NIO\", label: \"Nicaraguan Córdoba\"},\n  { value: \"NOK\", label: \"Norwegian Krone\"},\n  { value: \"NPR\", label: \"Nepalese Rupee\"},\n  { value: \"NZD\", label: \"New Zealand Dollar\"},\n  { value: \"OMR\", label: \"Omani Rial\"},\n  { value: \"PAB\", label: \"Panamanian Balboa\"},\n  { value: \"PEN\", label: \"Peruvian Nuevo Sol\"},\n  { value: \"PGK\", label: \"Papua New Guinean Kina\"},\n  { value: \"PHP\", label: \"Philippine Peso\"},\n  { value: \"PKR\", label: \"Pakistani Rupee\"},\n  { value: \"PLN\", label: \"Polish Zloty\"},\n  { value: \"PYG\", label: \"Paraguayan Guarani\"},\n  { value: \"QAR\", label: \"Qatari Rial\"},\n  { value: \"RON\", label: \"Romanian Leu\"},\n  { value: \"RSD\", label: \"Serbian Dinar\"},\n  { value: \"RUB\", label: \"Russian Ruble\"},\n  { value: \"RWF\", label: \"Rwandan Franc\"},\n  { value: \"SAR\", label: \"Saudi Riyal\"},\n  { value: \"SBD\", label: \"Solomon Islands Dollar\"},\n  { value: \"SCR\", label: \"Seychellois Rupee\"},\n  { value: \"SDG\", label: \"Sudanese Pound\"},\n  { value: \"SEK\", label: \"Swedish Krona\"},\n  { value: \"SGD\", label: \"Singapore Dollar\"},\n  { value: \"SHP\", label: \"Saint Helena Pound\"},\n  { value: \"SLL\", label: \"Sierra Leonean Leone\"},\n  { value: \"SOS\", label: \"Somali Shilling\"},\n  { value: \"SRD\", label: \"Surinamese Dollar\"},\n  { value: \"SSP\", label: \"South Sudanese Pound\"},\n  { value: \"STD\", label: \"São Tomé and Príncipe Dobra (pre-2018)\"},\n  { value: \"STN\", label: \"São Tomé and Príncipe Dobra\"},\n  { value: \"SVC\", label: \"Salvadoran Colón\"},\n  { value: \"SYP\", label: \"Syrian Pound\"},\n  { value: \"SZL\", label: \"Swazi Lilangeni\"},\n  { value: \"THB\", label: \"Thai Baht\"},\n  { value: \"TJS\", label: \"Tajikistani Somoni\"},\n  { value: \"TMT\", label: \"Turkmenistani Manat\"},\n  { value: \"TND\", label: \"Tunisian Dinar\"},\n  { value: \"TOP\", label: \"Tongan Pa'anga\"},\n  { value: \"TRY\", label: \"Turkish Lira\"},\n  { value: \"TTD\", label: \"Trinidad and Tobago Dollar\"},\n  { value: \"TWD\", label: \"New Taiwan Dollar\"},\n  { value: \"TZS\", label: \"Tanzanian Shilling\"},\n  { value: \"UAH\", label: \"Ukrainian Hryvnia\"},\n  { value: \"UGX\", label: \"Ugandan Shilling\"},\n  { value: \"USD\", label: \"United States Dollar\"},\n  { value: \"UYU\", label: \"Uruguayan Peso\"},\n  { value: \"UZS\", label: \"Uzbekistan Som\"},\n  { value: \"VEF\", label: \"Venezuelan Bolívar Fuerte (Old)\"},\n  { value: \"VES\", label: \"Venezuelan Bolívar Soberano\"},\n  { value: \"VND\", label: \"Vietnamese Dong\"},\n  { value: \"VUV\", label: \"Vanuatu Vatu\"},\n  { value: \"WST\", label: \"Samoan Tala\"},\n  { value: \"XAF\", label: \"CFA Franc BEAC\"},\n  { value: \"XAG\", label: \"Silver Ounce\"},\n  { value: \"XAU\", label: \"Gold Ounce\"},\n  { value: \"XCD\", label: \"East Caribbean Dollar\"},\n  { value: \"XDR\", label: \"Special Drawing Rights\"},\n  { value: \"XOF\", label: \"CFA Franc BCEAO\"},\n  { value: \"XPD\", label: \"Palladium Ounce\"},\n  { value: \"XPF\", label: \"CFP Franc\"},\n  { value: \"XPT\", label: \"Platinum Ounce\"},\n  { value: \"YER\", label: \"Yemeni Rial\"},\n  { value: \"ZAR\", label: \"South African Rand\"},\n  { value: \"ZMW\", label: \"Zambian Kwacha\"},\n  { value: \"ZWL\", label: \"Zimbabwean Dollar\"}\n]"],"names":[],"sourceRoot":"webpack:///"}