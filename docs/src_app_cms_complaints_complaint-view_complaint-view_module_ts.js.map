{"version":3,"file":"src_app_cms_complaints_complaint-view_complaint-view_module_ts.js","mappings":"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","sources":["./src/app/cms/complaints/complaint-view/complaint-view-info/complaint-view-info.component.ts","./src/app/cms/complaints/complaint-view/complaint-view-info/complaint-view-info.component.html","./src/app/cms/complaints/complaint-view/complaint-view-records/complaint-view-records.component.ts","./src/app/cms/complaints/complaint-view/complaint-view-records/complaint-view-records.component.html","./src/app/cms/complaints/complaint-view/complaint-view-routing.module.ts","./src/app/cms/complaints/complaint-view/complaint-view.component.ts","./src/app/cms/complaints/complaint-view/complaint-view.component.html","./src/app/cms/complaints/complaint-view/complaint-view.module.ts","./src/app/cms/complaints/complaint-view/complaint-view.resolver.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewComplaintQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { map, Observable } from \"rxjs\";\nimport { camelCase } from \"camel-case\";\n\n@Component({\n  selector: \"app-complaint-view-info\",\n  templateUrl: \"./complaint-view-info.component.html\",\n})\nexport class ComplaintViewInfoComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewComplaintQuery>>;\n  public camelCase = camelCase;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tagColor: TagColorService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.complaint));\n  }\n}\n","<div *ngIf=\"(query | async)?.data?.complaint as complaint\">\n<nz-descriptions nzTitle=\"{{ 'profile.requestInfo' | translate }}\" nzBordered class=\"mt-2\">\n    <nz-descriptions-item nzTitle=\"{{ 'requests.expectedTime' | translate }}\">{{\n    complaint.order.expectedTimestamp !== null\n      ? (complaint.order.expectedTimestamp | date: \"short\")\n      : \"-\"\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'requests.startTime' | translate }}\">{{\n      complaint.order.startTimestamp !== null ? (complaint.order.startTimestamp | date: \"short\") : \"-\"\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'requests.finishTime' | translate }}\">{{\n    complaint.order.finishTimestamp !== null ? (complaint.order.finishTimestamp | date: \"short\") : \"-\"\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'requests.costAfterCoupon' | translate }}\">{{\n    complaint.order.costAfterCoupon | currency:complaint.order.currency\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'requests.estimatedCost' | translate }}\">{{\n    complaint.order.costBest | currency:complaint.order.currency\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.status' | translate }}\" [nzSpan]=\"2\">\n        <nz-badge [nzStatus]=\"tagColor.orderStatus(complaint.order.status)\" [nzText]=\"'enum.request.' + complaint.order.status | translate\"></nz-badge>\n    </nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.locations' | translate }}\" [nzSpan]=\"3\">\n      {{ complaint.order.addresses.join(\" -> \") }}\n  </nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.view' | translate }}\"><a [routerLink]=\"'/../requests/view/' + complaint.order.id\">{{ 'profile.view' | translate }}</a></nz-descriptions-item>\n</nz-descriptions>\n\n<nz-descriptions *ngIf=\"complaint.order.driver as driver\" nzTitle=\"{{ ('profile.driverInfo' | translate) + (complaint.requestedByDriver ? ' (Sender)' : '') }}\" nzBordered class=\"mt-2\">\n    <nz-descriptions-item nzTitle=\"{{ 'profile.name' | translate }}\">{{driver.firstName }} {{driver.lastName}}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.mobileNumber' | translate }}\">{{driver.mobileNumber.toString() | phone }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.registeredOn' | translate }}\">{{ driver.registrationTimestamp | date: \"short\" }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.status' | translate }}\" [nzSpan]=\"2\">\n        <nz-badge [nzStatus]=\"tagColor.driver(driver.status)\" [nzText]=\"'enum.driver.status.' + camelCase(driver.status) | translate\"></nz-badge>\n    </nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.view' | translate }}\"><a [routerLink]=\"'/../drivers/all/view/' + driver.id\">View</a></nz-descriptions-item>\n</nz-descriptions>\n\n<nz-descriptions nzTitle=\"{{ ('profile.riderInfo' | translate) + (!complaint.requestedByDriver ? ' (Sender)' : '') }}\" nzBordered class=\"mt-2\">\n    <nz-descriptions-item nzTitle=\"{{ 'profile.name' | translate }}\">{{complaint.order.rider.firstName }} {{complaint.order.rider.lastName}}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.mobileNumber' | translate }}\">{{complaint.order.rider.mobileNumber | phone }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.registeredOn' | translate }}\">{{\n    complaint.order.rider.registrationTimestamp !== null ? (complaint.order.rider.registrationTimestamp | date: \"short\") : \"-\"\n  }}</nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.status' | translate }}\" [nzSpan]=\"2\">\n        <nz-badge [nzStatus]=\"tagColor.rider(complaint.order.rider.status)\" [nzText]=\"'enum.rider.status.' + complaint.order.rider.status.toLowerCase() | translate\"></nz-badge>\n    </nz-descriptions-item>\n    <nz-descriptions-item nzTitle=\"{{ 'profile.view' | translate }}\"><a [routerLink]=\"'/../riders/view/' + complaint.order.rider.id\">{{ 'profile.view' | translate }}</a></nz-descriptions-item>\n</nz-descriptions>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-complaint-view-records',\n  templateUrl: './complaint-view-records.component.html'\n})\nexport class ComplaintViewRecordsComponent {\n\n}\n","<p>complaint-view-records works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ComplaintViewComponent } from './complaint-view.component';\nimport { ComplaintViewInfoComponent } from './complaint-view-info/complaint-view-info.component';\nimport { ComplaintViewRecordsComponent } from './complaint-view-records/complaint-view-records.component';\nimport { ComplaintViewResolver } from './complaint-view.resolver';\n\nconst routes: Routes = [\n  { path: '', component: ComplaintViewComponent, resolve: { complaint: ComplaintViewResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange', children: [\n    { path: '', redirectTo: 'info' },\n    { path: 'info', component: ComplaintViewInfoComponent },\n    { path: 'records', component: ComplaintViewRecordsComponent }\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ComplaintViewResolver\n  ]\n})\nexport class ComplaintViewRoutingModule { }\n","import { dashCaseToCamelCase } from \"@angular/compiler/src/util\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ComplaintStatus,\n  UpdateComplaintStatusGQL,\n  ViewComplaintQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { firstValueFrom, map, Observable } from \"rxjs\";\nimport { camelCase } from \"camel-case\";\nimport { RouterHelperService } from \"../../../@services/router-helper.service\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\n\n@Component({\n  selector: \"app-complaint-view\",\n  templateUrl: \"./complaint-view.component.html\",\n})\nexport class ComplaintViewComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewComplaintQuery>>;\n  public camelCase = camelCase;\n  public complaintStatus = ComplaintStatus;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tagColor: TagColorService,\n    private updateGql: UpdateComplaintStatusGQL,\n    private routerHelper: RouterHelperService,\n    private msg: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.complaint));\n  }\n\n  async updateStatus(status: ComplaintStatus) {\n    await firstValueFrom(\n      this.updateGql.mutate({ id: this.route.snapshot.params.id, status })\n    );\n    this.routerHelper.refresh(this.route);\n    this.msg.success(\"Updated!\");\n  }\n}\n","<nz-card>\n  <nz-page-header *ngIf=\"(query | async)?.data?.complaint as complaint\">\n    <nz-page-header-title>{{complaint.subject}}</nz-page-header-title>\n    <nz-page-header-tags>\n      <nz-tag [nzColor]=\"tagColor.complaintStatus(complaint.status)\">{{ ('enum.complaintStatus.' + camelCase(complaint.status)) | translate }}</nz-tag>\n    </nz-page-header-tags>\n    <nz-page-header-content>\n      <div class=\"content\">\n        <div class=\"main\">\n          <nz-descriptions>\n            <nz-descriptions-item nzTitle=\"{{ 'complaint.inscriptionTime' | translate }}\" [nzSpan]=\"1\">{{complaint.inscriptionTimestamp | date: 'short'}}\n            </nz-descriptions-item>\n            <!-- <nz-descriptions-item nzTitle=\"{{ 'complaint.reviewTime' | translate }}\"></nz-descriptions-item> -->\n            <nz-descriptions-item nzTitle=\"{{ 'complaint.content' | translate }}\" [nzSpan]=\"2\">{{complaint.content}}</nz-descriptions-item>\n          </nz-descriptions>\n        </div>\n      </div>\n    </nz-page-header-content>\n    <nz-page-header-extra>\n      <button nz-button nz-dropdown [nzDropdownMenu]=\"menu4\">\n        {{'driver.profile.changeStatus' | translate}}\n        <i nz-icon nzType=\"down\"></i>\n      </button>\n      <nz-dropdown-menu #menu4=\"nzDropdownMenu\">\n        <ul nz-menu>\n          <li nz-menu-item (click)='updateStatus(complaintStatus.Resolved)'>Resolved</li>\n          <li nz-menu-item (click)=\"updateStatus(complaintStatus.UnderInvestigation)\">Under Investigation</li>\n        </ul>\n      </nz-dropdown-menu>\n    </nz-page-header-extra>\n    <nz-page-header-footer>\n      <nz-tabset nzLinkRouter class=\"mb-2\">\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"info\">{{ 'profile.details' | translate }}</a>\n        </nz-tab>\n      </nz-tabset>\n      <router-outlet></router-outlet>\n    </nz-page-header-footer>\n  </nz-page-header>\n</nz-card>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ComplaintViewRoutingModule } from \"./complaint-view-routing.module\";\nimport { ComplaintViewComponent } from \"./complaint-view.component\";\nimport { ComplaintViewInfoComponent } from \"./complaint-view-info/complaint-view-info.component\";\nimport { ComplaintViewRecordsComponent } from \"./complaint-view-records/complaint-view-records.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [\n    ComplaintViewComponent,\n    ComplaintViewInfoComponent,\n    ComplaintViewRecordsComponent,\n  ],\n  imports: [CommonModule, ComplaintViewRoutingModule, SharedModule],\n})\nexport class ComplaintViewModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewComplaintGQL,\n  ViewComplaintQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ComplaintViewResolver\n  implements Resolve<ApolloQueryResult<ViewComplaintQuery>>\n{\n  constructor(private gql: ViewComplaintGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewComplaintQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}