{"version":3,"file":"src_app_cms_home_overview_overview_module_ts.js","mappings":"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","sources":["./src/app/cms/home/overview/overview-drivers-map/overview-drivers-map.component.ts","./src/app/cms/home/overview/overview-drivers-map/overview-drivers-map.component.html","./src/app/cms/home/overview/overview-routing.module.ts","./src/app/cms/home/overview/overview.component.ts","./src/app/cms/home/overview/overview.component.html","./src/app/cms/home/overview/overview.module.ts","./src/app/cms/home/overview/overview.resolver.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { GoogleMap, MapInfoWindow, MapMarker } from \"@angular/google-maps\";\nimport { camelCase } from \"camel-case\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport {\n  DriverLocationFragment,\n  DriverOverviewInfoFragment,\n  OnlineDriver,\n  OverviewDriverPagingGQL,\n  OverviewQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { firstValueFrom, map, Observable, Subscription } from \"rxjs\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-overview-drivers-map\",\n  templateUrl: \"./overview-drivers-map.component.html\",\n})\nexport class OverviewDriversMapComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  // Table properties\n  page = 1;\n  total = 1;\n  listOfData: DriverOverviewInfoFragment[] = [];\n  locations: DriverLocationFragment[] = [];\n\n  // Map properties\n  autoZoom = false;\n  query?: Observable<ApolloQueryResult<OverviewQuery>>;\n\n  subscription?: Subscription;\n\n  selectedDriverId!: number;\n  @ViewChild(MapInfoWindow, { static: false }) infoWindow!: MapInfoWindow;\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap;\n\n  constructor(\n    public tagColor: TagColorService,\n    private route: ActivatedRoute,\n    private overviewDriversPaging: OverviewDriverPagingGQL\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.overview));\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = this.query?.subscribe((data) => {\n      this.listOfData = data.data.drivers.nodes;\n      this.total = data.data.drivers.totalCount;\n      this.locations = data.data.getDriversLocation;\n      this.centerMap();\n    });\n  }\n\n  centerMap() {\n    if (this.locations.length == 0) {\n      this.map.zoom = 1;\n      return;\n    }\n    if (this.locations.length == 1) {\n      this.map.panTo(this.locations[0].location);\n      return;\n    }\n    const latlngbounds = new google.maps.LatLngBounds();\n    for (const location of this.locations) {\n      latlngbounds.extend(location.location);\n    }\n    this.map.fitBounds(latlngbounds);\n  }\n\n  openInfoWindow(marker: MapMarker, driverId: number) {\n    this.selectedDriverId = driverId;\n    this.infoWindow.open(marker);\n  }\n\n  toCamelCase(value: string) {\n    return camelCase(value);\n  }\n\n  async searchData(): Promise<void> {\n    const result = await firstValueFrom(\n      this.overviewDriversPaging.fetch({ offset: (this.page - 1) * 5 })\n    );\n    this.listOfData = result.data.drivers.nodes;\n    this.total = result.data.drivers.totalCount;\n  }\n\n  showDriverOnMap(id: string) {\n    this.map.zoom = 16;\n    this.map.panTo(\n      this.locations.filter((x) => x.driverId == parseInt(id))[0].location\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<nz-card [nzTitle]=\"'overview.driversOnline' | translate\" [nzExtra]=\"extraTemplate\" [nzCover]=\"mapTpl\">\n  <nz-table #ajaxTable [nzFrontPagination]=\"false\" [nzData]=\"listOfData\" [nzTotal]=\"total\" [(nzPageIndex)]=\"page\"\n    [nzPageSize]=\"5\" (nzPageIndexChange)=\"searchData()\" (nzPageSizeChange)=\"searchData()\" nzBordered>\n    <thead>\n      <tr>\n        <th>\n          {{ 'profile.name' | translate }}\n        </th>\n        <th>\n          {{ 'profile.mobileNumber' | translate }}\n        </th>\n        <th nzColumnKey=\"status\">{{ 'profile.status' | translate }}</th>\n        <th>{{ 'profile.actions' | translate}}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let data of ajaxTable.data\">\n        <td>{{ data.firstName || '' }} {{ data.lastName || '' }}</td>\n        <td>{{ (data.mobileNumber !== null) ? (data.mobileNumber | phone) : '' }}</td>\n        <td>\n          <nz-tag [nzColor]=\"tagColor.driver(data.status)\">{{'enum.driver.status.' + toCamelCase(data.status) | translate }}</nz-tag>\n        </td>\n        <td>\n          <a (click)=\"showDriverOnMap(data.id)\">Show on Map</a>\n          <nz-divider nzType=\"vertical\"></nz-divider>\n          <a [routerLink]=\"'/drivers/view/' + data.id\">{{ 'profile.view' | translate }}</a>\n        </td>\n      </tr>\n    </tbody>\n  </nz-table>\n</nz-card>\n<ng-template #extraTemplate>\n  <span style=\"padding-right: 10px;\">{{'overview.autoZoom' | translate}}</span>\n  <nz-switch [(ngModel)]=\"autoZoom\" nzCheckedChildren=\"1\" nzUnCheckedChildren=\"0\"></nz-switch>\n</ng-template>\n<ng-template #mapTpl>\n  <google-map height=\"400px\" width=\"100%\" *ngIf=\"(query | async)?.data?.getDriversLocation as drivers\">\n    <map-marker #marker=\"mapMarker\" icon=\"assets/marker_taxi.png\" *ngFor=\"let markerPosition of drivers\" [position]=\"markerPosition.location\"\n      [options]=\"{ draggable: false }\" (mapClick)=\"openInfoWindow(marker, markerPosition.driverId)\"></map-marker>\n    <map-info-window><a [routerLink]=\"'/drivers/view/' + selectedDriverId\">{{'overview.viewDriver' |\n        translate}}</a></map-info-window>\n  </google-map>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OverviewComponent } from './overview.component';\nimport { OverviewResolver } from './overview.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: OverviewComponent, resolve: {overview: OverviewResolver} }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    OverviewResolver\n  ]\n})\nexport class OverviewRoutingModule { }\n","import { formatDate } from \"@angular/common\";\nimport { Component, Inject, LOCALE_ID, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Chart } from \"@antv/g2\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport {\n  ChartTimeframe,\n  IncomeChartGQL,\n  OverviewQuery,\n  RequestsChartGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { firstValueFrom, map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-overview\",\n  templateUrl: \"./overview.component.html\",\n})\nexport class OverviewComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<OverviewQuery>>;\n  incomeMode = ChartTimeframe.Yearly;\n  requestMode = ChartTimeframe.Yearly;\n  public chartTimeframe = ChartTimeframe;\n\n  private chartRequests!: Chart;\n  private chartIncome!: Chart;\n\n  isChartIncomeEmpty = false;\n  isChartRequestsEmpty = false;\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private route: ActivatedRoute,\n    private incomeChartGQL: IncomeChartGQL,\n    private requestsChartGQL: RequestsChartGQL,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.overview));\n    this.refreshIncome();\n    this.refreshRequests();\n  }\n\n  async refreshIncome() {\n    const result = await firstValueFrom(\n      this.incomeChartGQL.fetch({ timeframe: this.incomeMode })\n    );\n    this.isChartIncomeEmpty = result.data.incomeChart.items.length == 0;\n    if (this.isChartIncomeEmpty) {\n      this.chartIncome.clear();\n      return;\n    }\n    const timeFormat = this.getTimeFormatForQuery(this.incomeMode);\n    result.data.incomeChart.items.forEach((result) => {\n      result.time = formatDate(result.time, timeFormat, this.locale);\n      result.sum = parseFloat(result.sum.toFixed(2));\n    });\n    this.chartIncome.data(result.data.incomeChart.items);\n    this.chartIncome.interval().position(\"time*sum\").color(\"currency\");\n    this.chartIncome.render();\n    this.chartIncome.interaction(\"active-region\");\n  }\n\n  async refreshRequests() {\n    const result = await firstValueFrom(\n      this.requestsChartGQL.fetch({ timeframe: this.requestMode })\n    );\n    this.isChartRequestsEmpty = result.data.requestChart.items.length == 0;\n    if (this.isChartRequestsEmpty) {\n      this.chartRequests.clear();\n      return;\n    }\n    const timeFormat = this.getTimeFormatForQuery(this.requestMode);\n    result.data.requestChart.items.forEach((result) => {\n      result.time = formatDate(result.time, timeFormat, this.locale);\n      result.count = parseFloat(result.count.toString());\n      result.status = this.translateService.instant(\n        `enum.request.${result.status}`\n      );\n    });\n    this.chartRequests.data(result.data.requestChart.items);\n    this.chartRequests\n      .interval()\n      .adjust(\"stack\")\n      .position(\"time*count\")\n      .color(\"status\");\n    this.chartRequests.render();\n    this.chartRequests.interaction(\"active-region\");\n  }\n\n  getTimeFormatForQuery(q: ChartTimeframe): string {\n    switch (q) {\n      case ChartTimeframe.Daily:\n        return 'h\"';\n      case ChartTimeframe.Weekly:\n        return \"W,y\";\n      case ChartTimeframe.Monthly:\n        return \"M/d\";\n      case ChartTimeframe.Yearly:\n        return \"MMM y\";\n    }\n  }\n\n  colorForCount(count: number) {\n    if (count == 0) {\n      return \"#87d068\";\n    } else if (count < 10) {\n      return \"orange\";\n    } else {\n      return \"#CF1322\";\n    }\n  }\n\n  onChartRequestsInit(chartInstance: Chart): void {\n    this.chartRequests = chartInstance;\n  }\n\n  onChartIncomeInit(chartInstance: Chart): void {\n    this.chartIncome = chartInstance;\n  }\n}\n","<div class=\"lg:grid lg:grid-cols-4 lg:gap-2 mb-2\" *ngIf=\"(query | async)?.data as data\">\n  <div class=\"mt-2\">\n    <nz-card>\n      <nz-statistic [nzValue]=\"data.complaintAggregate[0].count?.id ?? 0\" [nzTitle]=\"'overview.complaints.title' | translate\" [nzPrefix]=\"prefixTplComplaints\" [nzSuffix]=\"'overview.complaints.suffix' | translate\">\n      </nz-statistic>\n      <ng-template #prefixTplComplaints><i nz-icon nzType=\"customer-service\"></i></ng-template>\n    </nz-card>\n  </div>\n  <div class=\"mt-2\">\n    <nz-card>\n      <nz-statistic [nzValue]=\"data.activeOrders[0].count?.id ?? 0\" [nzTitle]=\"'overview.activeOrders.title' | translate\"\n        [nzPrefix]=\"prefixTplpaymentRequests\" [nzSuffix]=\"'overview.activeOrders.suffix' | translate\">\n      </nz-statistic>\n      <ng-template #prefixTplpaymentRequests><i nz-icon nzType=\"field-time\"></i></ng-template>\n    </nz-card>\n  </div>\n  <div class=\"mt-2\">\n    <nz-card>\n      <nz-statistic [nzValue]=\"data.driverAggregate[0].count?.id ?? 0\" [nzTitle]=\"'overview.pendingDrivers.title' | translate\" [nzPrefix]=\"prefixTplPendingDrivers\" [nzSuffix]=\"'overview.pendingDrivers.suffix' | translate\">\n      </nz-statistic>\n      <ng-template #prefixTplPendingDrivers><i nz-icon nzType=\"car\"></i></ng-template>\n    </nz-card>\n  </div>\n  <div class=\"mt-2\">\n    <nz-card>\n      <nz-statistic [nzValue]=\"data.bookedOrders[0].count?.id ?? 0\" [nzTitle]=\"'overview.bookedOrders.title' | translate\"\n        [nzPrefix]=\"prefixTplAvailableDrivers\" [nzSuffix]=\"'overview.bookedOrders.suffix' | translate\">\n      </nz-statistic>\n      <ng-template #prefixTplAvailableDrivers><i nz-icon nzType=\"schedule\"></i></ng-template>\n    </nz-card>\n  </div>\n</div>\n<app-overview-drivers-map></app-overview-drivers-map>\n<div class=\"lg:grid lg:grid-cols-2 lg:gap-2\">\n  <div class=\"mt-2\">\n    <nz-card [nzTitle]=\"'overview.chart.requestsTitle' | translate\" [nzExtra]=\"requestsExtrasTmpl\">\n        <div [ngClass]=\"{ hidden : isChartRequestsEmpty }\" nz-g2 [nzChartOptions]=\"{ height: 300 }\" (nzChartInitialized)=\"onChartRequestsInit($event)\"></div>\n        <p class=\"w-full text-center py-16 text-gray-500\" *ngIf=\"isChartRequestsEmpty\">{{'chart.emptyState' | translate}}</p>\n    </nz-card>\n    <ng-template #requestsExtrasTmpl>\n      <nz-radio-group [(ngModel)]=\"requestMode\" (ngModelChange)=\"refreshRequests()\">\n        <label nz-radio-button nzValue=\"Daily\">{{'overview.chart.allDay' | translate}}</label>\n        <label nz-radio-button nzValue=\"Monthly\">{{'overview.chart.allMonth' | translate}}</label>\n        <label nz-radio-button nzValue=\"Yearly\">{{'overview.chart.allYear' | translate}}</label>\n      </nz-radio-group>\n    </ng-template>\n  </div>\n  <div class=\"mt-2\">\n    <nz-card [nzTitle]=\"'overview.chart.incomeTitle' | translate\" [nzExtra]=\"incomeExtrasTmpl\">\n        <div [ngClass]=\"{ hidden : isChartIncomeEmpty }\" nz-g2 [nzChartOptions]=\"{ height: 300 }\" (nzChartInitialized)=\"onChartIncomeInit($event)\"></div>\n        <p class=\"w-full text-center py-16 text-gray-500\" *ngIf=\"isChartIncomeEmpty\">{{'chart.emptyState' | translate}}</p>\n    </nz-card>\n    <ng-template #incomeExtrasTmpl>\n      <nz-radio-group [(ngModel)]=\"incomeMode\" (ngModelChange)=\"refreshIncome()\">\n        <label nz-radio-button nzValue=\"Daily\">{{'overview.chart.allDay' | translate}}</label>\n        <label nz-radio-button nzValue=\"Monthly\">{{'overview.chart.allMonth' | translate}}</label>\n        <label nz-radio-button nzValue=\"Yearly\">{{'overview.chart.allYear' | translate}}</label>\n      </nz-radio-group>\n    </ng-template>\n  </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { OverviewRoutingModule } from \"./overview-routing.module\";\nimport { OverviewComponent } from \"./overview.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\nimport { OverviewDriversMapComponent } from \"./overview-drivers-map/overview-drivers-map.component\";\n\n@NgModule({\n  declarations: [OverviewComponent, OverviewDriversMapComponent],\n  imports: [OverviewRoutingModule, SharedModule],\n})\nexport class OverviewModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  OverviewGQL,\n  ViewOrderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class OverviewResolver\n  implements Resolve<ApolloQueryResult<ViewOrderQuery>>\n{\n  constructor(private gql: OverviewGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewOrderQuery>> {\n    return this.gql.fetch();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}