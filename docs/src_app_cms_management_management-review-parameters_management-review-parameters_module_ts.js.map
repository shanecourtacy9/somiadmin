{"version":3,"file":"src_app_cms_management_management-review-parameters_management-review-parameters_module_ts.js","mappings":"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","sources":["./src/app/@services/table-service.ts","./src/app/cms/management/management-review-parameters/management-review-parameters-routing.module.ts","./src/app/cms/management/management-review-parameters/management-review-parameters.module.ts","./src/app/cms/management/management-review-parameters/review-parameter-view/review-parameter-view.component.ts","./src/app/cms/management/management-review-parameters/review-parameter-view/review-parameter-view.component.html","./src/app/cms/management/management-review-parameters/review-parameter-view/review-parameter-view.resolver.ts","./src/app/cms/management/management-review-parameters/review-parameters-list/review-parameters-list.component.ts","./src/app/cms/management/management-review-parameters/review-parameters-list/review-parameters-list.component.html","./src/app/cms/management/management-review-parameters/review-parameters-list/review-parameters-list.resolver.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { OffsetPaging } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTableQueryParams } from \"ng-zorro-antd/table\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TableService {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  private serializeQueryParams(params: NzTableQueryParams) {\n    const obj: any = {};\n    if (params?.pageIndex > 1) {\n      obj[\"pageIndex\"] = params.pageIndex;\n    } else {\n      obj[\"pageIndex\"] = undefined;\n    }\n    if (params?.pageSize != 10) {\n      obj[\"pageSize\"] = params.pageSize;\n    }\n    if (params.filter != null) {\n      const filterArray = params.filter\n        .filter((val) => val.value != null && val.value.length > 0)\n        .map(\n          (filt) =>\n            `${filt.key}|${Array.isArray(filt.value) ? \"in\" : \"eq\"}|${\n              Array.isArray(filt.value) ? filt.value.join(\"-\") : filt.value\n            }`\n        );\n      obj[\"filter\"] =\n        filterArray.length > 0 ? filterArray.join(\",\") : undefined;\n    }\n    if (params.sort != null && params.sort.length > 0) {\n      const sortArray = params.sort\n        .filter((val) => val.value != null)\n        .map((val) => `${val.key}|${val.value == \"ascend\" ? \"ASC\" : \"DESC\"}`);\n      obj[\"sort\"] = sortArray.length > 0 ? sortArray.join(\",\") : undefined;\n    }\n    return obj;\n  }\n\n  onTableQueryParamsChange(params: NzTableQueryParams): void {\n    const param = this.serializeQueryParams(params);\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: param,\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterText(key: string, value: string | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (value != undefined) {\n      baseFilter[key] = { like: value };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterRange(key: string, range: number[] | undefined) {\n    const nz = this.deserializeQueryParams<any, any>(this.route);\n    const baseFilter = nz.filter ?? {};\n    if (range != undefined) {\n      baseFilter[key] = { between: range };\n    } else {\n      baseFilter[key] = {};\n    }\n    const filters = Object.keys(baseFilter)\n      .map((key) => {\n        if (Object.keys(baseFilter[key]).length < 1) {\n          return null;\n        }\n        const action = Object.keys(baseFilter[key])[0];\n        const value =\n          action == \"in\" || action == \"between\"\n            ? baseFilter[key][action].join(\"-\")\n            : baseFilter[key][action];\n\n        return `${key}|${action}|${value}`;\n      })\n      .filter((fil) => fil != null);\n    const filter = filters.length > 0 ? filters.join(\",\") : undefined;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: { filter },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  resetFilter(key: string, input: HTMLInputElement) {\n    this.filterText(key, undefined);\n    input.value = \"\";\n  }\n\n  downloadURI(uri: string, name: string) {\n    const link = document.createElement(\"a\");\n    link.download = name;\n    link.href = uri;\n    link.target = \"_blank\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  deserializeQueryParams<SortType, FilterType>(\n    queryParams: any\n  ): {\n    sorting?: TableSortItem<SortType>[];\n    paging: OffsetPaging;\n    filter?: FilterType;\n  } {\n    const sorting = queryParams.sort\n      ? queryParams.sort.split(\",\").map((sItem: string) => ({\n          field: sItem.split(\"|\")[0] as unknown as SortType,\n          direction: sItem.split(\"|\")[1] as SortDirection,\n        }))\n      : [];\n    const filter: any = {};\n    if (queryParams.filter != null) {\n      queryParams.filter.split(\",\").forEach((item: string) => {\n        const operation: any = {};\n        const operationType = item.split(\"|\")[1];\n        if (operationType == \"in\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = operationValue;\n        } else if (operationType == \"between\") {\n          const operationValue = item.split(\"|\")[2].split(\"-\");\n          operation[operationType] = {\n            lower: operationValue[0],\n            upper: operationValue[1],\n          };\n        } else {\n          operation[operationType] = item.split(\"|\")[2];\n        }\n        filter[item.split(\"|\")[0]] = operation;\n      });\n    }\n    const pageIndex =\n      queryParams.pageIndex != null ? parseInt(queryParams.pageIndex) : 1;\n    const pageSize =\n      queryParams.pageSize != null ? parseInt(queryParams.pageSize) : 10;\n    return {\n      sorting: sorting.length > 0 ? sorting : undefined,\n      paging: {\n        offset: (pageIndex - 1) * pageSize ?? undefined,\n        limit: pageSize,\n      },\n      filter:\n        filter != null && Object.keys(filter).length > 0 ? filter : undefined,\n    };\n  }\n}\n\nclass TableSortItem<T> {\n  field!: T;\n  direction!: SortDirection;\n}\n\nenum SortDirection {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReviewParametersListComponent } from './review-parameters-list/review-parameters-list.component';\nimport { ReviewParametersListResolver } from './review-parameters-list/review-parameters-list.resolver';\nimport { ReviewParameterViewComponent } from './review-parameter-view/review-parameter-view.component';\nimport { ReviewParameterViewResolver } from './review-parameter-view/review-parameter-view.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: ReviewParametersListComponent, resolve: { reviewParameters: ReviewParametersListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', component: ReviewParameterViewComponent, resolve: { reviewParameter: ReviewParameterViewResolver } },\n  { path: 'new', component: ReviewParameterViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ReviewParametersListResolver,\n    ReviewParameterViewResolver\n  ]\n})\nexport class ManagementReviewParametersRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { ManagementReviewParametersRoutingModule } from \"./management-review-parameters-routing.module\";\nimport { ReviewParametersListComponent } from \"./review-parameters-list/review-parameters-list.component\";\nimport { ReviewParameterViewComponent } from \"./review-parameter-view/review-parameter-view.component\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n2920;\n@NgModule({\n  declarations: [ReviewParametersListComponent, ReviewParameterViewComponent],\n  imports: [ManagementReviewParametersRoutingModule, SharedModule],\n  providers: [TagColorService],\n})\nexport class ManagementReviewParametersModule {}\n","import { AfterViewInit, Component } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  CreateReviewParameterGQL,\n  ReviewParameterViewQuery,\n  UpdateReviewParameterGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom } from \"rxjs\";\nimport { CURRENCY_LIST } from \"../../../../currencies\";\n\n@Component({\n  selector: \"app-review-parameter-view\",\n  templateUrl: \"./review-parameter-view.component.html\",\n})\nexport class ReviewParameterViewComponent implements AfterViewInit {\n  form = this.fb.group({\n    id: [null],\n    title: [null, Validators.required],\n    isGood: [null, Validators.required],\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private createGQL: CreateReviewParameterGQL,\n    private updateGQL: UpdateReviewParameterGQL,\n    private msg: NzMessageService\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.initializeDrawingManager();\n  }\n\n  initializeDrawingManager() {\n    this.route.data.subscribe((data) => {\n      if (data.reviewParameter != null) {\n        const val: ReviewParameterViewQuery = data.reviewParameter.data;\n        const reviewParameter = val.feedbackParameter;\n        if (reviewParameter != null) {\n          this.form.patchValue(reviewParameter);\n        }\n      }\n    });\n  }\n\n  async onSubmit() {\n    try {\n      const { id, ...update } = this.form.value;\n      if (id == null) {\n        await firstValueFrom(this.createGQL.mutate({ input: update }));\n      } else {\n        await firstValueFrom(this.updateGQL.mutate({ id, update }));\n      }\n      this.router.navigate([\"management/review-parameters\"], {\n        relativeTo: this.route.root,\n      });\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"New Review Parameter\"\n  nzSubtitle=\"Pramaters of reviews that rider can select for his rating.\"\n>\n</nz-page-header>\n<nz-card [nzActions]=\"[tmplActions]\" style=\"mt-16\">\n  <form nz-form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <input formControlName=\"id\" type=\"hidden\" hidden />\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"title\">Title</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid name\">\n        <input nz-input formControlName=\"title\" id=\"title\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"isGood\" nzRequired>Is Good</nz-form-label>\n      <nz-form-control>\n        <nz-switch formControlName=\"isGood\" id=\"isGood\"></nz-switch>\n      </nz-form-control>\n    </nz-form-item>\n\n    <ng-template #tmplActions>\n      <button\n        nz-button\n        nzType=\"default\"\n        [disabled]=\"form.invalid\"\n        (click)=\"onSubmit()\"\n      >\n        Save\n      </button>\n    </ng-template>\n  </form>\n</nz-card>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ReviewParameterViewQuery,\n  ReviewParameterViewGQL,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ReviewParameterViewResolver\n  implements Resolve<ApolloQueryResult<ReviewParameterViewQuery>>\n{\n  constructor(private gql: ReviewParameterViewGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ReviewParameterViewQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Params, ActivatedRoute, Router } from \"@angular/router\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { Observable } from \"rxjs\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ReviewParametersListQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { map } from \"rxjs/operators\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\n\n@Component({\n  selector: \"app-review-parameters-list\",\n  templateUrl: \"./review-parameters-list.component.html\",\n})\nexport class ReviewParametersListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ReviewParametersListQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tableService: TableService,\n    private router: Router,\n    public tagColor: TagColorService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.reviewParameters));\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Review Parameters\"\n  nzSubtitle=\"List of parameters that rider can assign to the service experience\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" routerLink=\"new\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      #ajaxTable\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.data?.feedbackParameters as regions\"\n      [nzData]=\"regions\"\n      [nzTotal]=\"regions.length\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th>{{ \"profile.name\" | translate }}</th>\n          <th>Type</th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of ajaxTable.data\">\n          <td>{{ data.title }}</td>\n          <td>\n            <nz-tag [nzColor]=\"tagColor.boolean(data.isGood)\">{{\n              data.isGood ? \"Good\" : \"Bad\"\n            }}</nz-tag>\n          </td>\n          <td>\n            <a [routerLink]=\"'view/' + data.id\">{{\n              \"profile.view\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n  </nz-page-header-content>\n</nz-page-header>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ReviewParametersListGQL,\n  ReviewParametersListQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ReviewParametersListResolver\n  implements Resolve<ApolloQueryResult<ReviewParametersListQuery>>\n{\n  constructor(\n    private paging: TableService,\n    private gql: ReviewParametersListGQL\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ReviewParametersListQuery>> {\n    //const params = this.paging.deserializeQueryParams<FeedbackParameterSortFields, FeedbackParameterFilter>(route.queryParams);\n    return this.gql.fetch();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}