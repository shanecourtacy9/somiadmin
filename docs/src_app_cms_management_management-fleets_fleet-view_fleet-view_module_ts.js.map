{"version":3,"file":"src_app_cms_management_management-fleets_fleet-view_fleet-view_module_ts.js","mappings":"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","sources":["./src/app/cms/management/management-fleets/fleet-view/fleet-view-details/fleet-view-details.component.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view-details/fleet-view-details.component.html","./src/app/cms/management/management-fleets/fleet-view/fleet-view-financials/fleet-view-financials.component.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view-financials/fleet-view-financials.component.html","./src/app/cms/management/management-fleets/fleet-view/fleet-view-financials/fleet-view-financials.resolver.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view-routing.module.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view.component.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view.component.html","./src/app/cms/management/management-fleets/fleet-view/fleet-view.module.ts","./src/app/cms/management/management-fleets/fleet-view/fleet-view.resolver.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { GoogleMap, MapPolygon } from \"@angular/google-maps\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  UpdateFleetGQL,\n  ViewFleetQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { COUNTRY_CODE_LIST } from \"@ridy/admin-panel/src/app/country-codes\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom, Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-fleet-view-details\",\n  templateUrl: \"./fleet-view-details.component.html\",\n})\nexport class FleetViewDetailsComponent implements AfterViewInit {\n  form = this.fb.group({\n    id: [null, Validators.required],\n    name: [null, Validators.required],\n    phoneNumber: [null, Validators.required],\n    mobileNumber: [null, Validators.required],\n    accountNumber: [null, Validators.required],\n    commissionSharePercent: [0, Validators.required],\n    commissionShareFlat: [0, Validators.required],\n    address: [null],\n    exclusivityAreas: [null],\n  });\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap;\n  center = { lat: 24, lng: 12 };\n  drawingManager?: google.maps.drawing.DrawingManager;\n  countryCodes = COUNTRY_CODE_LIST;\n  subscription?: Subscription;\n  polygons: any[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    public tagColor: TagColorService,\n    private updateGQL: UpdateFleetGQL,\n    private msg: NzMessageService,\n    private router: Router\n  ) {}\n\n  // ngOnInit(): void {\n  //   this.subscription = this.route.parent?.data.subscribe(data => (this.form.patchValue(data.fleet.data.fleet)));\n  // }\n\n  ngAfterViewInit(): void {\n    this.initializeDrawingManager();\n  }\n\n  initializeDrawingManager() {\n    this.subscription = this.route.parent!.data.subscribe((data) => {\n      if (data.fleet != null) {\n        const val: ViewFleetQuery = data.fleet.data;\n        const fleet = val.fleet;\n        if (fleet != null) {\n          this.form.patchValue(fleet);\n          if (\n            fleet.exclusivityAreas != null &&\n            fleet.exclusivityAreas.length > 0\n          ) {\n            const latlngbounds = new google.maps.LatLngBounds();\n            for (const poly of fleet.exclusivityAreas) {\n              for (const location of poly) {\n                latlngbounds.extend(location);\n              }\n            }\n            this.map.fitBounds(latlngbounds);\n          }\n        }\n      }\n    });\n    this.drawingManager = new google.maps.drawing.DrawingManager({\n      drawingMode: google.maps.drawing.OverlayType.POLYGON,\n      drawingControl: true,\n      map: this.map?.googleMap,\n      drawingControlOptions: {\n        position: google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [google.maps.drawing.OverlayType.POLYGON],\n      },\n    });\n    google.maps.event.addListener(\n      this.drawingManager,\n      \"overlaycomplete\",\n      (event: any) => {\n        this.polygons?.push(event.overlay);\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const ar = event.overlay.getPath().getArray();\n          ar.push(ar[0]);\n          if (this.form.value.exclusivityAreas == null) {\n            this.form.value.exclusivityAreas = [ar];\n          } else {\n            this.form.value.exclusivityAreas.push(ar);\n          }\n        }\n      }\n    );\n  }\n\n  async onSubmit() {\n    const { id, ..._formValue } = this.form.value;\n    try {\n      const result = await firstValueFrom(\n        this.updateGQL.mutate({ id, update: _formValue })\n      );\n      this.msg.success(\"Success\");\n      this.router.navigateByUrl(\"/management/fleets\");\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n\n  clearMap() {\n    for (let poly of this.polygons) {\n      poly.setMap(null);\n    }\n    this.polygons = [];\n    this.form.patchValue({ exclusivityAreas: [] });\n    this.drawingManager?.setValues(null);\n  }\n}\n","<form\n  nz-form\n  #frm\n  [formGroup]=\"form\"\n  (ngSubmit)=\"onSubmit()\"\n  nzLayout=\"vertical\"\n>\n  <input type=\"hidden\" formControlName=\"id\" />\n  <div class=\"md:grid md:grid-cols-4 md:gap-2\">\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"name\">Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid Name\">\n        <input nz-input formControlName=\"name\" id=\"name\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"phoneNumber\" nzRequired>Phone Number</nz-form-label>\n      <nz-form-control>\n        <nz-input-number\n          formControlName=\"phoneNumber\"\n          id=\"phoneNumber\"\n          class=\"w-full\"\n        ></nz-input-number>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"mobileNumber\" nzRequired\n        >Mobile Number</nz-form-label\n      >\n      <nz-form-control>\n        <nz-input-number\n          formControlName=\"mobileNumber\"\n          id=\"mobileNumber\"\n          class=\"w-full\"\n        ></nz-input-number>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"commissionSharePercent\"\n        >Commission Percentage</nz-form-label\n      >\n      <nz-form-control>\n        <nz-input-number\n          [nzMin]=\"0\"\n          [nzMax]=\"100\"\n          class=\"w-full\"\n          required\n          id=\"commissionSharePercent\"\n          formControlName=\"commissionSharePercent\"\n        ></nz-input-number>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"commissionShareFlat\"\n        >Commission Flat</nz-form-label\n      >\n      <nz-form-control>\n        <nz-input-number\n          [nzMin]=\"0\"\n          [nzMax]=\"100\"\n          required\n          class=\"w-full\"\n          id=\"commissionShareFlat\"\n          formControlName=\"commissionSharePercent\"\n        ></nz-input-number>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"accountNumber\"\n        >Bank Account Info</nz-form-label\n      >\n      <nz-form-control>\n        <input\n          nz-input\n          required\n          id=\"accountNumber\"\n          formControlName=\"accountNumber\"\n        />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"address\">Address</nz-form-label>\n      <nz-form-control>\n        <input nz-input id=\"address\" formControlName=\"address\" />\n      </nz-form-control>\n    </nz-form-item>\n  </div>\n  <nz-form-item>\n    <nz-form-label nzFor=\"address\">Exclusivity Area</nz-form-label>\n    <nz-form-control>\n      <input type=\"hidden\" hidden formControlName=\"exclusivityAreas\" />\n      <google-map height=\"400px\" width=\"100%\" [center]=\"center\" [zoom]=\"4\">\n        <map-polygon #poly [paths]=\"form.value.exclusivityAreas\"> </map-polygon>\n      </google-map>\n    </nz-form-control>\n  </nz-form-item>\n\n  <div class=\"float-right\">\n    <button\n      nz-button\n      (click)=\"clearMap()\"\n      style=\"margin: 4px\"\n      type=\"button\"\n      [disabled]=\"polygons.length == 0\"\n    >\n      Clear Map\n    </button>\n    <button nz-button nzType=\"default\" type=\"submit\" [disabled]=\"form.invalid\">\n      Register\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  CreateFleetTransactionGQL,\n  FleetFinancialsQuery,\n  ProviderDeductTransactionType,\n  ProviderRechargeTransactionType,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom, map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-fleet-view-financials\",\n  templateUrl: \"./fleet-view-financials.component.html\",\n})\nexport class FleetViewFinancialsComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<FleetFinancialsQuery>>;\n  formTransaction = this.fb.group({\n    action: [null, Validators.required],\n    rechargeType: [null],\n    deductType: [null],\n    amount: [0, Validators.required],\n    currency: [null, Validators.required],\n    description: [null],\n    refrenceNumber: [null],\n  });\n  deductTypes = Object.keys(ProviderDeductTransactionType);\n  rechargeTypes = Object.keys(ProviderRechargeTransactionType);\n\n  constructor(\n    private route: ActivatedRoute,\n    public tagColor: TagColorService,\n    public tableService: TableService,\n    private fb: FormBuilder,\n    private msg: NzMessageService,\n    private routerHelper: RouterHelperService,\n    private createTransactionGQL: CreateFleetTransactionGQL\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.financials));\n  }\n\n  getUniquieCurrencies(currencies: { currency: string }[] | undefined) {\n    if (currencies == undefined) return [];\n    return [...new Set(currencies)];\n  }\n\n  async onSubmitTransaction() {\n    this.formTransaction.value.fleetId = this.route.parent?.snapshot.params.id;\n    if (\n      this.formTransaction.value.action == \"Deduct\" &&\n      this.formTransaction.value.deductType == null\n    ) {\n      this.msg.error(\"Please select the transaction type.\");\n      return;\n    }\n    if (\n      this.formTransaction.value.action == \"Recharge\" &&\n      this.formTransaction.value.rechargeType == null\n    ) {\n      this.msg.error(\"Please select the transaction type.\");\n      return;\n    }\n    try {\n      await firstValueFrom(\n        this.createTransactionGQL.mutate({ input: this.formTransaction.value })\n      );\n      this.msg.success(\"Transaction Submitted.\");\n      this.routerHelper.refresh(this.route);\n      this.formTransaction.patchValue({});\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayoutGap=\"4px\" class=\"dt-actionbar\">\n  <!--<button nz-button nzType=\"default\"><i nz-icon nzType=\"plus\"></i>Add</button>-->\n</div>\n<nz-table\n  #table\n  nzTitle=\"Transactions Records\"\n  nzShowSizeChanger\n  [nzFrontPagination]=\"false\"\n  *ngIf=\"(query | async)?.data?.fleet?.transactions as transactions\"\n  [nzData]=\"transactions.nodes\"\n  [nzTotal]=\"transactions.totalCount\"\n  (nzQueryParams)=\"(tableService.onTableQueryParamsChange)\"\n  nzBordered\n>\n  <thead>\n    <tr>\n      <th nzShowSort nzColumnKey=\"transactionTime\">\n        {{ \"profile.dateTime\" | translate }}\n      </th>\n      <th nzShowSort nzColumnKey=\"transactionType\">\n        {{ \"profile.transactionType\" | translate }}\n      </th>\n      <th>\n        {{ \"profile.amount\" | translate }}\n      </th>\n      <th class=\"hidden lg:table-cell\">\n        {{ \"profile.documentNumber\" | translate }}\n      </th>\n      <th class=\"hidden xl:table-cell\">\n        {{ \"profile.details\" | translate }}\n      </th>\n      <th>{{ \"profile.actions\" | translate }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of table.data\">\n      <td [nz-tooltip]=\"data.transactionTimestamp | date: 'short'\">\n        {{ data.transactionTimestamp | timeago }}\n      </td>\n      <td>\n        {{\n          data.action === \"Deduct\"\n            ? (\"enum.transactionType.\" + data.deductType | translate)\n            : (\"enum.transactionType.\" + data.rechargeType | translate)\n        }}\n      </td>\n      <td\n        [ngClass]=\"\n          data.action === 'Recharge' ? 'text-green-500' : 'text-red-500'\n        \"\n      >\n        {{ data.action === \"Recharge\" ? \"+\" : \"\"\n        }}{{ data.amount | currency: data.currency }}\n      </td>\n      <td class=\"hidden lg:table-cell\">{{ data.refrenceNumber }}</td>\n      <td class=\"hidden xl:table-cell\">{{ data.description }}</td>\n      <td>\n        <a\n          *ngIf=\"data.operatorId !== null\"\n          [routerLink]=\"'/management/users/view/' + data.operatorId\"\n          >{{ \"table.viewOperator\" | translate }}</a\n        >\n        <a\n          *ngIf=\"data.requestId !== null\"\n          [routerLink]=\"'/requests/view/' + data.requestId\"\n          >{{ \"table.viewRequest\" | translate }}</a\n        >\n      </td>\n    </tr>\n  </tbody>\n</nz-table>\n<nz-table\n  #walletTable\n  *ngIf=\"(query | async)?.data?.fleet?.wallets as wallets\"\n  nzTitle=\"Wallet Summary\"\n  [nzFrontPagination]\n  [nzData]=\"wallets\"\n  [nzTotal]=\"wallets.length\"\n  nzBordered\n  class=\"mt-2\"\n>\n  <thead>\n    <tr>\n      <th>Amount</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of walletTable.data\">\n      <td>{{ item.balance | currency: item.currency }}</td>\n    </tr>\n  </tbody>\n</nz-table>\n<nz-card nzTitle=\"{{ 'profile.insertTransaction' | translate }}\" class=\"mt-2\">\n  <form\n    nz-form\n    [formGroup]=\"formTransaction\"\n    (ngSubmit)=\"onSubmitTransaction()\"\n  >\n    <div class=\"lg:grid lg:grid-cols-2 lg:gap-2\">\n      <nz-form-item>\n        <nz-form-label nzRequired>Type</nz-form-label>\n        <nz-form-control>\n          <nz-select formControlName=\"action\" nzRequired>\n            <nz-option nzLabel=\"Deduct\" nzValue=\"Deduct\"></nz-option>\n            <nz-option nzLabel=\"Recharge\" nzValue=\"Recharge\"></nz-option>\n          </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <div *ngIf=\"formTransaction.value.action === null\"></div>\n      <nz-form-item *ngIf=\"formTransaction.value.action === 'Recharge'\">\n        <nz-form-label>Recharge Type</nz-form-label>\n        <nz-form-control>\n          <nz-select formControlName=\"rechargeType\">\n            <nz-option\n              *ngFor=\"let type of rechargeTypes\"\n              [nzLabel]=\"'enum.transactionType.' + type | translate\"\n              [nzValue]=\"type\"\n            ></nz-option>\n          </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item *ngIf=\"formTransaction.value.action === 'Deduct'\">\n        <nz-form-label>Deduct Type</nz-form-label>\n        <nz-form-control>\n          <nz-select formControlName=\"deductType\">\n            <nz-option\n              *ngFor=\"let type of deductTypes\"\n              [nzLabel]=\"'enum.transactionType.' + type | translate\"\n              [nzValue]=\"type\"\n            ></nz-option>\n          </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzRequired nzFor=\"amount\">Amount</nz-form-label>\n        <nz-form-control>\n          <nz-input-number\n            formControlName=\"amount\"\n            id=\"amount\"\n            class=\"w-full\"\n            required\n          ></nz-input-number>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzRequired>Currency</nz-form-label>\n        <nz-form-control>\n          <nz-select formControlName=\"currency\" id=\"currency\" required>\n            <nz-option\n              *ngFor=\"\n                let currency of getUniquieCurrencies(\n                  (query | async)?.data?.regions?.nodes\n                )\n              \"\n              [nzLabel]=\"currency.currency\"\n              [nzValue]=\"currency.currency\"\n            ></nz-option>\n          </nz-select>\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzFor=\"refrenceNumber\">Document Number</nz-form-label>\n        <nz-form-control>\n          <input\n            nz-input\n            formControlName=\"refrenceNumber\"\n            id=\"refrenceNumber\"\n          />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label nzFor=\"description\">Description</nz-form-label>\n        <nz-form-control>\n          <input nz-input formControlName=\"description\" id=\"description\" />\n        </nz-form-control>\n      </nz-form-item>\n    </div>\n    <button\n      class=\"float-right mt-2\"\n      nz-button\n      nzType=\"default\"\n      type=\"submit\"\n      [disabled]=\"!formTransaction.valid\"\n    >\n      {{ \"profile.submit\" | translate }}\n    </button>\n  </form>\n</nz-card>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  FleetFilter,\n  FleetFinancialsGQL,\n  FleetFinancialsQuery,\n  FleetSortFields,\n  FleetTransactionFilter,\n  FleetTransactionSortFields,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class FleetViewFinancialsResolver\n  implements Resolve<ApolloQueryResult<FleetFinancialsQuery>>\n{\n  constructor(\n    private gql: FleetFinancialsGQL,\n    private tableService: TableService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<FleetFinancialsQuery>> {\n    const paging = this.tableService.deserializeQueryParams<\n      FleetTransactionSortFields,\n      FleetTransactionFilter\n    >(route.queryParams);\n    return this.gql.fetch({ id: route.parent?.params.id, ...paging });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FleetViewDetailsComponent } from './fleet-view-details/fleet-view-details.component';\nimport { FleetViewFinancialsComponent } from './fleet-view-financials/fleet-view-financials.component';\nimport { FleetViewFinancialsResolver } from './fleet-view-financials/fleet-view-financials.resolver';\nimport { FleetViewComponent } from './fleet-view.component';\nimport { FleetViewResolver } from './fleet-view.resolver';\n\nconst routes: Routes = [\n  {\n    path: '', component: FleetViewComponent, resolve: { fleet: FleetViewResolver }, children: [\n      { path: '', redirectTo: 'details', pathMatch: 'full' },\n      { path: 'details', component: FleetViewDetailsComponent },\n      { path: 'financials', component: FleetViewFinancialsComponent, resolve: { financials: FleetViewFinancialsResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    FleetViewResolver,\n    FleetViewFinancialsResolver\n  ]\n})\nexport class FleetViewRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { map, Observable } from \"rxjs\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewFleetQuery } from \"@ridy/admin-panel/generated/graphql\";\n\n@Component({\n  selector: \"app-fleet-view\",\n  templateUrl: \"./fleet-view.component.html\",\n})\nexport class FleetViewComponent implements OnInit {\n  tagColor: TagColorService;\n  query?: Observable<ApolloQueryResult<ViewFleetQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private _tagColor: TagColorService,\n    private translation: TranslateService\n  ) {\n    this.tagColor = _tagColor;\n  }\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.fleet));\n  }\n}\n","<nz-card *ngIf=\"(query | async)?.data?.fleet as fleet\">\n  <nz-page-header>\n    <nz-page-header-title>{{ fleet.name }}</nz-page-header-title>\n    <nz-page-header-tags>\n    </nz-page-header-tags>\n    <nz-page-header-extra>\n    </nz-page-header-extra>\n    <nz-page-header-content>\n      <div class=\"content\">\n        <div class=\"main\">\n          <nz-descriptions [nzColumn]=\"2\">\n            <nz-descriptions-item nzTitle=\"{{ 'profile.phoneNumber' | translate }}\" [nzSpan]=\"1\">{{ fleet.phoneNumber }}</nz-descriptions-item>\n            <nz-descriptions-item nzTitle=\"{{ 'profile.address' | translate }}\" [nzSpan]=\"2\">{{ fleet.address }}</nz-descriptions-item>\n          </nz-descriptions>\n        </div>\n      </div>\n    </nz-page-header-content>\n    <nz-page-header-footer>\n      <nz-tabset class=\"mb-2\" nzLinkRouter>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"details\">{{ 'profile.details' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"financials\">{{ 'profile.financialRecords' | translate }}</a>\n        </nz-tab>\n      </nz-tabset>\n      <router-outlet></router-outlet>\n    </nz-page-header-footer>\n  </nz-page-header>\n</nz-card>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { FleetViewRoutingModule } from \"./fleet-view-routing.module\";\nimport { FleetViewDetailsComponent } from \"./fleet-view-details/fleet-view-details.component\";\nimport { FleetViewFinancialsComponent } from \"./fleet-view-financials/fleet-view-financials.component\";\nimport { FleetViewComponent } from \"./fleet-view.component\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\n\n@NgModule({\n  declarations: [\n    FleetViewComponent,\n    FleetViewDetailsComponent,\n    FleetViewFinancialsComponent,\n  ],\n  imports: [FleetViewRoutingModule, SharedModule],\n  providers: [],\n})\nexport class FleetViewModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  ViewFleetGQL,\n  ViewFleetQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class FleetViewResolver\n  implements Resolve<ApolloQueryResult<ViewFleetQuery>>\n{\n  constructor(private gql: ViewFleetGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<ViewFleetQuery>> {\n    return this.gql.fetch({ id: route.params.id });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}