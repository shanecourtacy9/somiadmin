{"version":3,"file":"src_app_cms_requests_request-view_request-view_module_ts.js","mappings":"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","sources":["./src/app/cms/requests/request-view/request-view-activities/request-view-activities.component.ts","./src/app/cms/requests/request-view/request-view-activities/request-view-activities.component.html","./src/app/cms/requests/request-view/request-view-assign/request-view-assign.component.ts","./src/app/cms/requests/request-view/request-view-assign/request-view-assign.component.html","./src/app/cms/requests/request-view/request-view-assign/request-view-assign.resolver.ts","./src/app/cms/requests/request-view/request-view-chats/request-view-chats.component.ts","./src/app/cms/requests/request-view/request-view-chats/request-view-chats.component.html","./src/app/cms/requests/request-view/request-view-complaints/request-view-complaints.component.ts","./src/app/cms/requests/request-view/request-view-complaints/request-view-complaints.component.html","./src/app/cms/requests/request-view/request-view-financials/request-view-financials.component.ts","./src/app/cms/requests/request-view/request-view-financials/request-view-financials.component.html","./src/app/cms/requests/request-view/request-view-info/request-view-info.component.ts","./src/app/cms/requests/request-view/request-view-info/request-view-info.component.html","./src/app/cms/requests/request-view/request-view-routing.module.ts","./src/app/cms/requests/request-view/request-view.component.ts","./src/app/cms/requests/request-view/request-view.component.html","./src/app/cms/requests/request-view/request-view.module.ts","./node_modules/rxjs/dist/esm/internal/operators/combineLatest.js","./node_modules/rxjs/dist/esm/internal/operators/combineLatestWith.js","./node_modules/rxjs/dist/esm/internal/util/argsOrArgArray.js"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport {\n  RequestActivityType,\n  ViewOrderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { NzTimelineItemColor } from \"ng-zorro-antd/timeline\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view-activities\",\n  templateUrl: \"./request-view-activities.component.html\",\n})\nexport class RequestViewActivitiesComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private translateService: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.order));\n  }\n\n  getPosition(type: RequestActivityType): \"left\" | \"right\" {\n    switch (type) {\n      case RequestActivityType.BookedByRider:\n      case RequestActivityType.CanceledByRider:\n      case RequestActivityType.RequestedByRider:\n      case RequestActivityType.BookedByOperator:\n      case RequestActivityType.CanceledByOperator:\n      case RequestActivityType.RequestedByOperator:\n        return \"left\";\n\n      default:\n        return \"right\";\n    }\n  }\n\n  getColor(type: RequestActivityType): NzTimelineItemColor {\n    switch (type) {\n      case RequestActivityType.CanceledByDriver:\n      case RequestActivityType.CanceledByRider:\n      case RequestActivityType.CanceledByOperator:\n      case RequestActivityType.Expired:\n        return \"red\";\n\n      case RequestActivityType.RequestedByRider:\n      case RequestActivityType.RequestedByOperator:\n      case RequestActivityType.BookedByRider:\n      case RequestActivityType.BookedByOperator:\n      case RequestActivityType.DriverAccepted:\n      case RequestActivityType.Paid:\n        return \"green\";\n\n      case RequestActivityType.ArrivedToPickupPoint:\n      case RequestActivityType.ArrivedToDestination:\n      case RequestActivityType.Started:\n        return \"blue\";\n\n      default:\n        return \"gray\";\n    }\n  }\n\n  translateType(value: RequestActivityType): string {\n    switch (value) {\n      case RequestActivityType.ArrivedToDestination:\n        return this.translateService.instant(\n          \"requestActivityType.arrivedToDestination\"\n        );\n      case RequestActivityType.ArrivedToPickupPoint:\n        return this.translateService.instant(\n          \"requestActivityType.arrivedToPickupPoint\"\n        );\n      case RequestActivityType.BookedByOperator:\n        return this.translateService.instant(\n          \"requestActivityType.bookedByOperator\"\n        );\n      case RequestActivityType.BookedByRider:\n        return this.translateService.instant(\n          \"requestActivityType.bookedByRider\"\n        );\n      case RequestActivityType.CanceledByDriver:\n        return this.translateService.instant(\n          \"requestActivityType.canceledByDriver\"\n        );\n      case RequestActivityType.CanceledByOperator:\n        return this.translateService.instant(\n          \"requestActivityType.canceledByOperator\"\n        );\n      case RequestActivityType.CanceledByRider:\n        return this.translateService.instant(\n          \"requestActivityType.canceledByRider\"\n        );\n      case RequestActivityType.DriverAccepted:\n        return this.translateService.instant(\n          \"requestActivityType.driverAccepted\"\n        );\n      case RequestActivityType.Expired:\n        return this.translateService.instant(\"requestActivityType.expired\");\n      case RequestActivityType.Paid:\n        return this.translateService.instant(\"requestActivityType.paid\");\n      case RequestActivityType.RequestedByOperator:\n        return this.translateService.instant(\n          \"requestActivityType.requestedByOperator\"\n        );\n      case RequestActivityType.RequestedByRider:\n        return this.translateService.instant(\n          \"requestActivityType.requestedByRider\"\n        );\n      case RequestActivityType.Reviewed:\n        return this.translateService.instant(\"requestActivityType.reviewed\");\n      case RequestActivityType.Started:\n        return this.translateService.instant(\"requestActivityType.started\");\n    }\n  }\n\n  isPending(items: { type: RequestActivityType }[]): boolean {\n    if (items.length == 0) return false;\n    const lastItem = items[items.length - 1];\n    const finished =\n      lastItem.type == RequestActivityType.Paid ||\n      lastItem.type == RequestActivityType.Reviewed ||\n      lastItem.type == RequestActivityType.CanceledByDriver ||\n      lastItem.type == RequestActivityType.CanceledByRider ||\n      lastItem.type == RequestActivityType.CanceledByOperator;\n    return !finished;\n  }\n}\n","\n<div *ngIf=\"(query | async)?.data?.order as order\" class=\"p-8\">\n  <nz-empty *ngIf=\"order.activities.length === 0\" class=\"empty-state\"></nz-empty>\n  <nz-timeline nzMode=\"custom\" *ngIf=\"order.activities.length !== 0\" [nzPending]=\"isPending(order.activities)\">\n    <nz-timeline-item *ngFor=\"let activity of order.activities\" [nzPosition]=\"getPosition(activity.type)\" [nzColor]=\"getColor(activity.type)\">{{translateType(activity.type) }} {{activity.createdAt | date:'short'}}</nz-timeline-item>\n  </nz-timeline>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { GoogleMap, MapInfoWindow, MapMarker } from \"@angular/google-maps\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  AssignDriverToOrderGQL,\n  AvailableDriversForOrderQuery,\n  DriverSearchGQL,\n  Point,\n  ViewOrderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { RouterHelperService } from \"@ridy/admin-panel/src/app/@services/router-helper.service\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { camelCase } from \"camel-case\";\nimport { AutocompleteDataSourceItem } from \"ng-zorro-antd/auto-complete\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport {\n  combineLatestWith,\n  debounceTime,\n  firstValueFrom,\n  map,\n  Observable,\n  Subscription,\n  switchMap,\n  tap,\n} from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view-assign\",\n  templateUrl: \"./request-view-assign.component.html\",\n})\nexport class RequestViewAssignComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  query?: Observable<\n    [\n      ApolloQueryResult<AvailableDriversForOrderQuery>,\n      ApolloQueryResult<ViewOrderQuery>\n    ]\n  >;\n\n  subscription?: Subscription;\n  selectedDriver?: AvailableDriversForOrderQuery[\"getDriversLocationWithData\"][number];\n  filteredDrivers: AutocompleteDataSourceItem[] = [];\n  @ViewChild(GoogleMap, { static: true }) map!: GoogleMap;\n  @ViewChild(MapInfoWindow, { static: false }) infoWindow!: MapInfoWindow;\n  toCamelCase = camelCase;\n  searchDriversCtrl = new FormControl();\n\n  constructor(\n    private route: ActivatedRoute,\n    private routeHelper: RouterHelperService,\n    public tagColor: TagColorService,\n    private driversSearchQuery: DriverSearchGQL,\n    private msg: NzMessageService,\n    private assignDriverToOrderMutation: AssignDriverToOrderGQL\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data\n      .pipe<ApolloQueryResult<AvailableDriversForOrderQuery>>(\n        map((data) => data.availableDrivers)\n      )\n      .pipe(\n        combineLatestWith(\n          this.route.parent!.data.pipe<ApolloQueryResult<ViewOrderQuery>>(\n            map((data) => data.order)\n          )\n        )\n      );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = this.query?.subscribe((data) => {\n      const locations: Point[] = data[0].data.getDriversLocationWithData.map(\n        (data) => ({ lat: data.location.lat, lng: data.location.lng })\n      );\n      const tripPoints = data[1].data.order!.points.map((point) => ({\n        lat: point.lat,\n        lng: point.lng,\n      }));\n      for (let tripPoint of tripPoints) {\n        locations.push(tripPoint);\n      }\n      this.fitBounds(locations);\n    });\n    this.searchDriversCtrl.valueChanges\n      .pipe(\n        debounceTime(500),\n        tap(() => {\n          this.filteredDrivers = [];\n        }),\n        switchMap((value) =>\n          this.driversSearchQuery.fetch({\n            filter: value.value == null ? value : \"\",\n          })\n        )\n      )\n      .subscribe((data) => {\n        if (data.data.drivers != null) {\n          this.filteredDrivers = data.data.drivers.nodes.map((d) => ({\n            value: d.id,\n            label: `${d.firstName} ${d.lastName} (${d.mobileNumber})`,\n          }));\n        } else {\n          this.msg.error(data.error?.message ?? \"unknown error\");\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  openInfoWindow(\n    marker: MapMarker,\n    driver: AvailableDriversForOrderQuery[\"getDriversLocationWithData\"][number]\n  ) {\n    this.selectedDriver = driver;\n    this.infoWindow.open(marker);\n  }\n\n  fitBounds(locations: Point[]) {\n    if (locations.length == 0) {\n      this.map.zoom = 1;\n      return;\n    }\n    if (locations.length == 1) {\n      this.map.panTo(locations[0]);\n      return;\n    }\n    const latlngbounds = new google.maps.LatLngBounds();\n    for (const location of locations) {\n      latlngbounds.extend(location);\n    }\n    this.map.fitBounds(latlngbounds);\n  }\n\n  async assignToDriver(driverId: string) {\n    try {\n      await firstValueFrom(\n        this.assignDriverToOrderMutation.mutate({\n          orderId: this.route.parent!.snapshot.params.id,\n          driverId,\n        })\n      );\n      this.routeHelper.refresh(this.route);\n    } catch (error: any) {\n      this.msg.error(error.message);\n    }\n  }\n}\n","<div class=\"grid lg:grid-cols-2 lg:gap-2\">\n  <div>\n    <nz-form-control class=\"mb-2\">\n      <input\n        class=\"col-span-2\"\n        placeholder=\"Enter driver last name or mobile number\"\n        nz-input\n        [formControl]=\"searchDriversCtrl\"\n        [nzAutocomplete]=\"auto\"\n      />\n      <nz-autocomplete\n        [nzDataSource]=\"filteredDrivers\"\n        nzBackfill\n        #auto\n      ></nz-autocomplete>\n    </nz-form-control>\n    <button\n      *ngIf=\"auto.activeItem as activeItem\"\n      class=\"w-24\"\n      nz-button\n      nzType=\"default\"\n      (click)=\"assignToDriver(activeItem.nzValue.value)\"\n    >\n      Assign\n    </button>\n    <google-map class=\"w-full h-96\" width=\"100%\" [zoom]=\"4\">\n      <map-marker\n        #marker=\"mapMarker\"\n        [icon]=\"\n          i == 0 ? 'assets/marker_pickup.png' : 'assets/marker_destination.png'\n        \"\n        *ngFor=\"let markerPosition of (query | async)?.[1]?.data?.order?.points, index as i\"\n        [position]=\"markerPosition\"\n        [options]=\"{ draggable: false }\"\n      ></map-marker>\n      <map-marker\n        #marker=\"mapMarker\"\n        icon=\"assets/marker_taxi.png\"\n        *ngFor=\"let driver of (query | async)?.[0]?.data?.getDriversLocationWithData, index as i\"\n        [position]=\"driver.location\"\n        [options]=\"{ draggable: false }\"\n        (mapClick)=\"openInfoWindow(marker, driver)\"\n      ></map-marker>\n      <map-info-window>\n        <div class=\"grid grid-cols-2 gap-2 gap-y-2\" *ngIf=\"selectedDriver as d\">\n          <p class=\"text-gray-600\">{{ \"profile.name\" | translate }}</p>\n          <p class=\"font-semibold\">{{ d.firstName }} {{ d.lastName }}</p>\n          <p class=\"text-gray-600\">{{ \"profile.status\" | translate }}</p>\n          <p class=\"font-semibold\">\n            <nz-tag [nzColor]=\"tagColor.driver(d.status)\">{{\n              \"enum.driver.status.\" + toCamelCase(d.status) | translate\n            }}</nz-tag>\n          </p>\n          <p class=\"text-gray-600\">{{ \"profile.mobileNumber\" | translate }}</p>\n          <a [href]=\"'tel:+' + d.mobileNumber\" class=\"font-semibold\">{{\n            d.mobileNumber | phone\n          }}</a>\n          <p class=\"text-gray-600\">{{ \"profile.rating\" | translate }}</p>\n          <p *ngIf=\"d.rating != null\">\n            {{ d.rating }}% (from {{ d.reviewCount }} reviews)\n          </p>\n          <p *ngIf=\"d.rating == null\">-</p>\n          <button [routerLink]=\"'/drivers/view/' + d.id\" nz-button>\n            View Driver\n          </button>\n          <button\n            nz-button\n            nzType=\"default\"\n            (click)=\"assignToDriver(d.id.toString())\"\n          >\n            Assign\n          </button>\n        </div>\n      </map-info-window>\n    </google-map>\n  </div>\n  <div class=\"mt-2 lg:mt-0\">\n    <nz-table\n      #table\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.[0]?.data?.getDriversLocationWithData as drivers\"\n      [nzData]=\"drivers\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th nzShowSort nzColumnKey=\"reviewTimestamp\">\n            {{ \"profile.name\" | translate }}\n          </th>\n          <th nzShowSort nzColumnKey=\"score\">\n            {{ \"profile.rating\" | translate }}\n          </th>\n          <th class=\"hidden md:table-cell\">\n            {{ \"profile.mobileNumber\" | translate }}\n          </th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of table.data\">\n          <td>{{ data.firstName }} {{ data.lastName }}</td>\n          <td *ngIf=\"data.rating != null\">\n            {{ data.rating }}% (from {{ data.reviewCount }} reviews)\n          </td>\n          <td *ngIf=\"data.rating == null\">-</td>\n          <td>{{ data.mobileNumber }}</td>\n          <td>\n            <a [routerLink]=\"'/drivers/view/' + data.id\">{{\n              \"table.viewDriver\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport {\n  Router,\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  AvailableDriversForOrderGQL,\n  AvailableDriversForOrderQuery,\n  ViewOrderQuery,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable, of } from \"rxjs\";\n\n@Injectable()\nexport class RequestViewAssignResolver\n  implements Resolve<ApolloQueryResult<AvailableDriversForOrderQuery>>\n{\n  constructor(private gql: AvailableDriversForOrderGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<AvailableDriversForOrderQuery>> {\n    const order: ApolloQueryResult<ViewOrderQuery> = route.parent!.data.order;\n    return this.gql.fetch({ center: order.data.order!.points[0], count: 10 });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewOrderQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view-chats\",\n  templateUrl: \"./request-view-chats.component.html\",\n})\nexport class RequestViewChatsComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.order));\n  }\n}\n","\n<div *ngIf=\"(query | async)?.data?.order as order\">\n  <nz-empty *ngIf=\"order.conversations.length === 0\" class=\"empty-state\"></nz-empty>\n  <nz-comment [nzAuthor]=\"!chat.sentByDriver ? ((order.rider.firstName ?? '-') + ' ' + (order.rider.lastName ?? '-')) : ((order.driver?.firstName ?? '-') + ' ' + (order.driver?.lastName ?? ''))\" [nzDatetime]=\"((chat.sentAt | date: 'short') ?? '')\" *ngFor=\"let chat of order.conversations\">\n    <nz-avatar\n      nz-comment-avatar\n      [nzIcon]=\"!chat.sentByDriver ? 'user' : 'car'\"\n      [nzSrc]=\"!chat.sentByDriver ? (order.rider.media?.address ?? '') : (order.driver?.media?.address ?? '')\"\n    ></nz-avatar>\n    <nz-comment-content>\n      <p>\n        {{chat.content}}\n      </p>\n    </nz-comment-content>\n  </nz-comment>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewOrderQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view-complaints\",\n  templateUrl: \"./request-view-complaints.component.html\",\n})\nexport class RequestViewComplaintsComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.order));\n  }\n}\n","<div *ngIf=\"(query | async)?.data?.order?.complaints as complaints\">\n      <nz-table\n      #ajaxTable\n      nzShowSizeChanger\n      [nzData]=\"complaints\"\n      [nzTotal]=\"complaints.length\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th>\n            {{ 'profile.dateTime' | translate }}\n          </th>\n          <th>\n            {{ 'profile.subject' | translate }}\n          </th>\n          <th>\n            {{ 'profile.content' | translate }}\n          </th>\n          <th>{{ 'profile.actions' | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of ajaxTable.data\">\n          <td>{{ data.inscriptionTimestamp | timeago }}</td>\n          <td>{{ data.subject }}</td>\n          <td>{{ data.content }}</td>\n          <td>\n            <a [routerLink]=\"'/complaints/view/' + data.id\"\n              >{{ 'table.viewComplaint' | translate }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewOrderQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view-financials\",\n  templateUrl: \"./request-view-financials.component.html\",\n})\nexport class RequestViewFinancialsComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.order));\n  }\n}\n","<div *ngIf=\"(query | async)?.data?.order as order\">\n<nz-table #basicTable2 [nzData]=\"order.riderTransactions\" nzTitle=\"{{ 'profile.rider' | translate }}\" nzBordered>\n  <thead>\n    <tr>\n      <th>{{ 'profile.amount' | translate }}</th>\n      <th>{{ 'profile.type' | translate }}</th>\n      <th>{{ 'profile.paymentGateway' | translate }}</th>\n      <th>{{ 'profile.documentNumber' | translate }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of basicTable2.data\">\n      <td>{{data.amount | currency: data.currency}}</td>\n      <td>{{ data.action === 'Deduct' ? ('enum.transactionType.' + data.deductType | translate) : ('enum.transactionType.' + data.rechargeType | translate) }}</td>\n      <td>{{data.paymentGateway?.title}}</td>\n      <td>{{data.refrenceNumber}}</td>\n    </tr>\n  </tbody>\n</nz-table>\n<br>\n<nz-table #basicTable [nzData]=\"order.driverTransactions\" [nzFrontPagination]='false' nzTitle=\"{{ 'profile.driver' | translate }}\" nzBordered>\n    <thead>\n      <tr>\n        <th>{{ 'profile.amount' | translate }}</th>\n        <th>{{ 'profile.type' | translate }}</th>\n        <th>{{ 'profile.documentNumber' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let data of basicTable.data\">\n        <td>{{data.amount | currency: data.currency}}</td>\n        <td>{{ data.action === 'Deduct' ? ('enum.transactionType.' + data.deductType | translate) : ('enum.transactionType.' + data.rechargeType | translate) }}</td>\n        <td>{{data.refrenceNumber}}</td>\n      </tr>\n    </tbody>\n  </nz-table>\n  <br>\n  <nz-table #basicTable3 [nzData]=\"order.providerTransactions\" [nzFrontPagination]='false' nzTitle=\"{{ 'profile.admin' | translate }}\" nzBordered>\n    <thead>\n      <tr>\n        <th>{{ 'profile.amount' | translate }}</th>\n        <th>{{ 'profile.type' | translate }}</th>\n        <th>{{ 'profile.documentNumber' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let data of basicTable3.data\">\n        <td>{{data.amount | currency: data.currency}}</td>\n        <td>{{ data.action === 'Deduct' ? ('enum.transactionType.' + data.deductType | translate) : ('enum.transactionType.' + data.rechargeType | translate) }}</td>\n        <td>{{data.refrenceNumber}}</td>\n      </tr>\n    </tbody>\n  </nz-table>\n  <br>\n  <nz-table *ngIf=\"order.fleetTransactions.length > 0\" #basicTable4 [nzData]=\"order.fleetTransactions\" [nzFrontPagination]='false' nzTitle=\"Fleet\" nzBordered>\n    <thead>\n      <tr>\n        <th>{{ 'profile.amount' | translate }}</th>\n        <th>{{ 'profile.type' | translate }}</th>\n        <th>{{ 'profile.documentNumber' | translate }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let data of basicTable4.data\">\n        <td>{{data.amount | currency: data.currency}}</td>\n        <td>{{ data.action === 'Deduct' ? ('enum.transactionType.' + data.deductType | translate) : ('enum.transactionType.' + data.rechargeType | translate) }}</td>\n        <td>{{data.refrenceNumber}}</td>\n      </tr>\n    </tbody>\n  </nz-table>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewOrderQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { camelCase } from \"camel-case\";\nimport { map, Observable } from \"rxjs\";\nimport { CurrentConfigService } from \"../../../current-config.service\";\n\n@Component({\n  selector: \"app-request-view-info\",\n  templateUrl: \"./request-view-info.component.html\",\n})\nexport class RequestViewInfoComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n  public camelCase = camelCase;\n\n  constructor(\n    private route: ActivatedRoute,\n    public tagColor: TagColorService,\n    private currentConfigService: CurrentConfigService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.parent?.data.pipe(map((data) => data.order));\n  }\n\n  getMapAddress(points: { lat: number; lng: number }[]): string {\n    return `https://maps.googleapis.com/maps/api/staticmap?size=2500x300${points\n      .map((x) => {\n        return `&markers=color:blue%7Clabel:${points.indexOf(x) + 1}%7C${\n          x.lat\n        },${x.lng}`;\n      })\n      .join(\"\")}&key=${\n      this.currentConfigService.currentConfig?.currentConfiguration\n        .adminPanelAPIKey\n    }`;\n  }\n}\n","<div *ngIf=\"(query | async)?.data?.order as order\">\n  <div class=\"grid grid-cols-3 gap-2\">\n    <div class=\"col-span-2\">\n      <nz-descriptions nzTitle=\"{{ 'profile.riderInfo' | translate }}\" nzBordered class=\"mt-2\">\n        <nz-descriptions-item nzTitle=\"{{ 'profile.name' | translate }}\">{{order.rider.firstName }} {{order.rider.lastName}}\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.mobileNumber' | translate }}\"><a [href]=\"'tel:+' + order.rider.mobileNumber\">{{order.rider.mobileNumber | phone }}</a>\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.registeredOn' | translate }}\">{{ order.rider.registrationTimestamp | date: \"short\" }}</nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.status' | translate }}\" [nzSpan]=\"2\">\n          <nz-badge [nzStatus]=\"tagColor.rider(order.rider.status)\"\n            nzText=\"{{ 'enum.rider.status.' + order.rider.status.toLowerCase() | translate }}\"></nz-badge>\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.actions' | translate }}\"><button nz-button nzType=\"text\"\n            [routerLink]=\"'/../riders/view/' + order.rider.id\"><i nz-icon nzType=\"folder-open\"></i></button></nz-descriptions-item>\n      </nz-descriptions>\n    </div>\n    <a target=\"_blank\" [href]=\"getMapAddress(order.points)\"><img class=\"w-full h-auto hover:ring-2 hover:cursor-pointer\" [src]=\"getMapAddress(order.points)\"></a>\n    <div class=\"col-span-3\">\n      <nz-descriptions nzTitle=\"{{ 'profile.driverInfo' | translate }}\" nzBordered class=\"mt-2\" *ngIf=\"order.driver as driver\">\n        <nz-descriptions-item nzTitle=\"{{ 'profile.name' | translate }}\">{{driver.firstName }} {{driver.lastName}}\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.mobileNumber' | translate }}\"><a [href]=\"'tel:+' + driver.mobileNumber\">{{driver.mobileNumber | phone }}</a>\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.registeredOn' | translate }}\">{{driver.registrationTimestamp | date: \"short\"}}</nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.status' | translate }}\" [nzSpan]=\"2\">\n          <nz-badge [nzStatus]=\"tagColor.driver(driver.status)\"\n            nzText=\"{{ 'enum.driver.status.' + camelCase(driver.status) | translate }}\"></nz-badge>\n        </nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.actions' | translate }}\"><button nz-button nzType=\"text\"\n            [routerLink]=\"'/../drivers/all/view/' + driver.id\"><i nz-icon nzType=\"folder-open\"></i></button>\n        </nz-descriptions-item>\n      </nz-descriptions>\n      <nz-descriptions nzTitle=\"{{ 'profile.coupon' | translate }}\" nzBordered style=\"margin-top: 30px;\"\n        *ngIf=\"order.coupon as coupon\">\n        <nz-descriptions-item nzTitle=\"{{ 'profile.title' | translate }}\">{{coupon.title }}</nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'profile.code' | translate }}\">{{coupon.code }}</nz-descriptions-item>\n        <nz-descriptions-item nzTitle=\"{{ 'coupons.expirationTime' | translate }}\">{{ coupon.expireAt | date: \"short\" }}</nz-descriptions-item>\n      </nz-descriptions>\n    </div>\n<!-- <nz-timeline class=\"mt-2\">\n  <nz-timeline-item>{{ 'requests.requestTime' | translate }}: {{ order.createdOn | date: \"short\" }}\n  </nz-timeline-item>\n  <nz-timeline-item>{{ 'requests.expectedTime' | translate }}: {{ order.t | date: \"short\" }}</nz-timeline-item>\n  <nz-timeline-item>{{ 'requests.startTime' | translate }}: {{ order.startTimestamp | date: \"short\" }}</nz-timeline-item>\n  <nz-timeline-item>{{ 'requests.finishTime' | translate }}: {{ order.finishTimestamp | date: \"short\" }}\n  </nz-timeline-item>\n</nz-timeline> -->\n  </div>\n\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OrderViewResolver } from './order-view.resolver';\nimport { RequestViewActivitiesComponent } from './request-view-activities/request-view-activities.component';\nimport { RequestViewAssignComponent } from './request-view-assign/request-view-assign.component';\nimport { RequestViewAssignResolver } from './request-view-assign/request-view-assign.resolver';\nimport { RequestViewChatsComponent } from './request-view-chats/request-view-chats.component';\nimport { RequestViewComplaintsComponent } from './request-view-complaints/request-view-complaints.component';\nimport { RequestViewFinancialsComponent } from './request-view-financials/request-view-financials.component';\nimport { RequestViewInfoComponent } from './request-view-info/request-view-info.component';\nimport { RequestViewComponent } from './request-view.component';\n\n\nconst routes: Routes = [\n  { path: '', component: RequestViewComponent, resolve: {order: OrderViewResolver }, children: [\n    { path: '', redirectTo: 'info' },\n    { path: 'info', component: RequestViewInfoComponent },\n    { path: 'activities', component: RequestViewActivitiesComponent },\n    { path: 'complaints', component: RequestViewComplaintsComponent },\n    { path: 'financials', component: RequestViewFinancialsComponent },\n    { path: 'chats', component: RequestViewChatsComponent },\n    { path: 'assign', component: RequestViewAssignComponent, resolve: { availableDrivers: RequestViewAssignResolver } },\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    RequestViewAssignResolver\n  ]\n})\nexport class RequestViewRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { ViewOrderQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { map, Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-request-view\",\n  templateUrl: \"./request-view.component.html\",\n})\nexport class RequestViewComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<ViewOrderQuery>>;\n  constructor(\n    private route: ActivatedRoute,\n    public tagColor: TagColorService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.order));\n  }\n}\n","<nz-card *ngIf=\"(query | async)?.data?.order as order\">\n  <nz-page-header>\n    <nz-page-header-title>{{ 'requests.header' | translate }}{{order.id}}</nz-page-header-title>\n    <nz-page-header-tags>\n      <nz-tag [nzColor]=\"tagColor.orderStatus(order.status)\">{{'enum.request.' + order.status | translate}}</nz-tag>\n    </nz-page-header-tags>\n    <nz-page-header-extra>\n      <nz-statistic nzTitle=\"{{ 'profile.cost' | translate }}\" [nzValue]=\"(order.costAfterCoupon | currency: order.currency) ?? 0\"></nz-statistic>\n    </nz-page-header-extra>\n    <nz-page-header-content>\n      <div class=\"content\">\n        <div class=\"main\">\n          <nz-descriptions [nzColumn]=\"2\">\n            <nz-descriptions-item nzTitle=\"{{ 'requests.requestTIme' | translate }}\" [nzSpan]=\"1\">{{(order.createdOn | date: 'short')}}</nz-descriptions-item>\n            <nz-descriptions-item [nzTitle]=\"'requests.service' | translate\" [nzSpan]=\"1\">{{order.service.name || '-'}}</nz-descriptions-item>\n            <nz-descriptions-item [nzTitle]=\"'requests.distance' | translate\" [nzSpan]=\"1\">{{order.distanceBest }}m</nz-descriptions-item>\n            <nz-descriptions-item [nzTitle]=\"'requests.duration' | translate\" [nzSpan]=\"1\">{{ (order.durationBest / 60).toFixed() }}:{{order.durationBest % 60}}</nz-descriptions-item>\n            <nz-descriptions-item [nzTitle]=\"'profile.locations' | translate\" [nzSpan]=\"2\">{{order.addresses.join(' -> ')}}</nz-descriptions-item>\n          </nz-descriptions>\n        </div>\n      </div>\n    </nz-page-header-content>\n    <nz-page-header-footer>\n      <nz-tabset nzLinkRouter class=\"pb-2\">\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"info\">{{ 'profile.details' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"activities\">{{ 'profile.activities' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"financials\">{{ 'profile.financialRecords' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"chats\">{{ 'requests.chats' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"complaints\">{{ 'requests.complaints' | translate }}</a>\n        </nz-tab>\n        <nz-tab>\n          <a *nzTabLink nz-tab-link routerLink=\"assign\">{{ 'requests.assign' | translate }}</a>\n        </nz-tab>\n      </nz-tabset>\n      <router-outlet></router-outlet>\n    </nz-page-header-footer>\n  </nz-page-header>\n</nz-card>","import { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"@ridy/admin-panel/src/app/@components/shared.module\";\nimport { RequestViewActivitiesComponent } from \"./request-view-activities/request-view-activities.component\";\n\nimport { RequestViewChatsComponent } from \"./request-view-chats/request-view-chats.component\";\nimport { RequestViewComplaintsComponent } from \"./request-view-complaints/request-view-complaints.component\";\nimport { RequestViewFinancialsComponent } from \"./request-view-financials/request-view-financials.component\";\nimport { RequestViewInfoComponent } from \"./request-view-info/request-view-info.component\";\nimport { RequestViewRoutingModule } from \"./request-view-routing.module\";\nimport { RequestViewComponent } from \"./request-view.component\";\nimport { RequestViewAssignComponent } from \"./request-view-assign/request-view-assign.component\";\n\n@NgModule({\n  declarations: [\n    RequestViewComponent,\n    RequestViewInfoComponent,\n    RequestViewComplaintsComponent,\n    RequestViewFinancialsComponent,\n    RequestViewChatsComponent,\n    RequestViewActivitiesComponent,\n\n    RequestViewAssignComponent,\n  ],\n  imports: [RequestViewRoutingModule, SharedModule],\n})\nexport class RequestViewModule {}\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n    const resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))\n        : operate((source, subscriber) => {\n            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n        });\n}\n","import { combineLatest } from './combineLatest';\nexport function combineLatestWith(...otherSources) {\n    return combineLatest(...otherSources);\n}\n","const { isArray } = Array;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n"],"names":[],"sourceRoot":"webpack:///"}