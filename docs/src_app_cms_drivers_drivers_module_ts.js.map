{"version":3,"file":"src_app_cms_drivers_drivers_module_ts.js","mappings":"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","sources":["./src/app/cms/drivers/driver-new/driver-new.component.ts","./src/app/cms/drivers/driver-new/driver-new.component.html","./src/app/cms/drivers/drivers-list/drivers-list.component.ts","./src/app/cms/drivers/drivers-list/drivers-list.component.html","./src/app/cms/drivers/drivers-list/drivers-list.resolver.ts","./src/app/cms/drivers/drivers-routing.module.ts","./src/app/cms/drivers/drivers.module.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CreateDriverGQL } from \"@ridy/admin-panel/generated/graphql\";\nimport { firstValueFrom } from \"rxjs\";\nimport { RouterHelperService } from \"../../../@services/router-helper.service\";\nimport { COUNTRY_CODE_LIST } from \"../../../country-codes\";\n\n@Component({\n  selector: \"app-driver-new\",\n  templateUrl: \"./driver-new.component.html\",\n})\nexport class DriverNewComponent {\n  form: FormGroup = this.fb.group({\n    firstName: [null],\n    lastName: [null],\n    phoneNumberPrefix: [\"+1\", Validators.required],\n    phoneNumber: [null, Validators.required],\n    gender: [null],\n  });\n\n  countryCodes = COUNTRY_CODE_LIST;\n\n  constructor(\n    private fb: FormBuilder,\n    private createGQL: CreateDriverGQL,\n    private routerHelper: RouterHelperService,\n    private route: ActivatedRoute\n  ) {}\n\n  async submitForm() {\n    const { phoneNumber, phoneNumberPrefix, ..._formValue } = this.form.value;\n    await firstValueFrom(\n      this.createGQL.mutate({\n        input: {\n          mobileNumber: `${phoneNumberPrefix}${phoneNumber}`,\n          ..._formValue,\n        },\n      })\n    );\n    this.routerHelper.goToParent(this.route);\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"New Driver\"\n  nzSubtitle=\"Input Driver's contact details below.\"\n>\n</nz-page-header>\n<nz-card [nzActions]=\"[tmplActions]\" style=\"mt-16\">\n  <form nz-form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"firstName\">First Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid First Name\">\n        <input nz-input formControlName=\"firstName\" id=\"firstName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzRequired nzFor=\"lastName\">Last Name</nz-form-label>\n      <nz-form-control nzErrorTip=\"The input is not valid Last Name\">\n        <input nz-input formControlName=\"lastName\" id=\"lastName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"phoneNumber\" nzRequired>Phone Number</nz-form-label>\n      <nz-form-control>\n        <nz-input-group [nzAddOnBefore]=\"addOnBeforeTemplate\">\n          <ng-template #addOnBeforeTemplate>\n            <nz-select formControlName=\"phoneNumberPrefix\" class=\"phone-select\">\n              <nz-option\n                *ngFor=\"let code of countryCodes\"\n                [nzLabel]=\"code.name + ' (' + code.dial_code + ')'\"\n                [nzValue]=\"code.dial_code\"\n              ></nz-option>\n            </nz-select>\n          </ng-template>\n          <input formControlName=\"phoneNumber\" id=\"'phoneNumber'\" nz-input />\n        </nz-input-group>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label nzFor=\"gender\">Gender</nz-form-label>\n      <nz-form-control>\n        <nz-select formControlName=\"gender\">\n          <nz-option nzLabel=\"Male\" nzValue=\"Male\"></nz-option>\n          <nz-option nzLabel=\"Female\" nzValue=\"Female\"></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <ng-template #tmplActions>\n      <button\n        nz-button\n        nzType=\"default\"\n        [disabled]=\"form.invalid\"\n        (click)=\"submitForm()\"\n      >\n        Register\n      </button>\n    </ng-template>\n  </form>\n</nz-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport {\n  DriversListQuery,\n  DriverStatus,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TagColorService } from \"@ridy/admin-panel/src/app/@services/tag-color/tag-color.service\";\nimport { camelCase } from \"camel-case\";\nimport { map, Observable } from \"rxjs\";\n\nimport { TableService } from \"../../../@services/table-service\";\n\n@Component({\n  selector: \"app-drivers-list\",\n  templateUrl: \"./drivers-list.component.html\",\n})\nexport class DriversListComponent implements OnInit {\n  statuses: { text: string; value: string }[] = Object.values(DriverStatus).map(\n    (key) => ({\n      value: key,\n      text: this.translator.instant(`enum.driver.status.${camelCase(key)}`),\n    })\n  );\n  query?: Observable<ApolloQueryResult<DriversListQuery>>;\n  toCamelCase = camelCase;\n\n  constructor(\n    public tagColor: TagColorService,\n    public tableService: TableService,\n    public route: ActivatedRoute,\n    private translator: TranslateService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.drivers));\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Drivers\"\n  nzSubtitle=\"List of all drivers registered\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" routerLink=\"new\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      #table\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.data?.drivers as drivers\"\n      [nzData]=\"drivers.nodes\"\n      [nzTotal]=\"drivers.totalCount\"\n      (nzQueryParams)=\"tableService.onTableQueryParamsChange($event)\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th nzCustomFilter nzColumnKey=\"lastName\" [nzSortFn]=\"true\">\n            {{ \"profile.name\" | translate }}\n            <nz-filter-trigger\n              [nzActive]=\"\n                (route.queryParams | async)?.filter?.includes('lastName|like|')\n              \"\n              [nzDropdownMenu]=\"filtername\"\n            >\n              <i nz-icon nzType=\"search\"></i>\n            </nz-filter-trigger>\n          </th>\n          <th nzCustomFilter nzColumnKey=\"mobileNumber\" [nzSortFn]=\"true\">\n            {{ \"profile.mobileNumber\" | translate }}\n            <nz-filter-trigger\n              [nzActive]=\"\n                (route.queryParams | async)?.filter?.includes(\n                  'mobileNumber|like|'\n                )\n              \"\n              [nzDropdownMenu]=\"filtermobile\"\n            >\n              <i nz-icon nzType=\"search\"></i>\n            </nz-filter-trigger>\n          </th>\n          <th\n            class=\"hidden md:table-cell\"\n            [nzFilters]=\"statuses\"\n            [nzFilterFn]=\"true\"\n            nzColumnKey=\"status\"\n          >\n            Status\n          </th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of table.data\">\n          <td>{{ data.firstName }} {{ data.lastName }}</td>\n          <td>\n            <a [href]=\"'tel:+' + data.mobileNumber\">{{\n              data.mobileNumber | phone\n            }}</a>\n          </td>\n          <td class=\"hidden md:table-cell\">\n            <nz-tag [nzColor]=\"tagColor.driver(data.status)\">{{\n              \"enum.driver.status.\" + toCamelCase(data.status) | translate\n            }}</nz-tag>\n          </td>\n          <td>\n            <a [routerLink]=\"'view/' + data.id\">{{\n              \"table.details\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n    <nz-dropdown-menu #filtername=\"nzDropdownMenu\">\n      <div class=\"ant-table-filter-dropdown\">\n        <div class=\"search-box\">\n          <input\n            nz-input\n            #lastNameInput\n            placeholder=\"{{ 'profile.lastName' | translate }}\"\n          />\n          <button\n            nz-button\n            nzSize=\"small\"\n            nzType=\"default\"\n            (click)=\"tableService.filterText('lastName', lastNameInput.value)\"\n            class=\"search-button\"\n          >\n            {{ \"profile.search\" | translate }}\n          </button>\n          <button\n            nz-button\n            nzSize=\"small\"\n            (click)=\"tableService.resetFilter('lastName', lastNameInput)\"\n          >\n            {{ \"profile.reset\" | translate }}\n          </button>\n        </div>\n      </div>\n    </nz-dropdown-menu>\n    <nz-dropdown-menu #filtermobile=\"nzDropdownMenu\">\n      <div class=\"ant-table-filter-dropdown\">\n        <div class=\"search-box\">\n          <input\n            #mobileNumberInput\n            nz-input\n            placeholder=\"Search Mobile Number\"\n          />\n          <button\n            nz-button\n            nzSize=\"small\"\n            nzType=\"default\"\n            class=\"search-button\"\n            (click)=\"\n              tableService.filterText('mobileNumber', mobileNumberInput.value)\n            \"\n          >\n            {{ \"profile.search\" | translate }}\n          </button>\n          <button\n            nz-button\n            nzSize=\"small\"\n            (click)=\"\n              tableService.resetFilter('mobileNumber', mobileNumberInput)\n            \"\n          >\n            {{ \"profile.reset\" | translate }}\n          </button>\n        </div>\n      </div>\n    </nz-dropdown-menu>\n  </nz-page-header-content>\n</nz-page-header>\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport {\n  DriverFilter,\n  DriversListGQL,\n  DriversListQuery,\n  DriverSortFields,\n} from \"@ridy/admin-panel/generated/graphql\";\nimport { TableService } from \"@ridy/admin-panel/src/app/@services/table-service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class DriversListResolver\n  implements Resolve<ApolloQueryResult<DriversListQuery>>\n{\n  constructor(private paging: TableService, private gql: DriversListGQL) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<ApolloQueryResult<DriversListQuery>> {\n    const params = this.paging.deserializeQueryParams<\n      DriverSortFields,\n      DriverFilter\n    >(route.queryParams);\n    return this.gql.fetch(params);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DriverNewComponent } from './driver-new/driver-new.component';\nimport { DriversListComponent } from './drivers-list/drivers-list.component';\nimport { DriversListResolver } from './drivers-list/drivers-list.resolver';\n\nconst routes: Routes = [\n  { path: '', component: DriversListComponent, resolve: {drivers: DriversListResolver}, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', loadChildren: () => import('./driver-profile/driver-profile.module').then(m => m.DriverProfileModule)},\n  { path: 'new', component: DriverNewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    DriversListResolver\n  ]\n})\nexport class DriversRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../@components/shared.module';\nimport { DriverNewComponent } from './driver-new/driver-new.component';\nimport { DriversListComponent } from './drivers-list/drivers-list.component';\nimport { DriversRoutingModule } from './drivers-routing.module';\n\n\n@NgModule({\n  declarations: [DriversListComponent, DriverNewComponent],\n  imports: [\n    SharedModule,\n    DriversRoutingModule\n  ]\n})\nexport class DriversModule { }\n"],"names":[],"sourceRoot":"webpack:///"}