{"version":3,"file":"src_app_cms_riders_riders_module_ts.js","mappings":"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","sources":["./src/app/cms/riders/rider-new/rider-new.component.ts","./src/app/cms/riders/rider-new/rider-new.component.html","./src/app/cms/riders/riders-list/riders-list.component.ts","./src/app/cms/riders/riders-list/riders-list.component.html","./src/app/cms/riders/riders-routing.module.ts","./src/app/cms/riders/riders.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CreateRiderGQL } from \"@ridy/admin-panel/generated/graphql\";\nimport { NzMessageService } from \"ng-zorro-antd/message\";\nimport { firstValueFrom } from \"rxjs\";\nimport { RouterHelperService } from \"../../../@services/router-helper.service\";\nimport { COUNTRY_CODE_LIST } from \"../../../country-codes\";\n\n@Component({\n  selector: \"app-rider-new\",\n  templateUrl: \"./rider-new.component.html\",\n})\nexport class RiderNewComponent {\n  form: FormGroup = this.fb.group({\n    firstName: [null],\n    lastName: [null],\n    phoneNumberPrefix: [\"+1\", Validators.required],\n    phoneNumber: [null, Validators.required],\n    gender: [null],\n  });\n  countryCodes = COUNTRY_CODE_LIST;\n\n  constructor(\n    private fb: FormBuilder,\n    private createRiderGQL: CreateRiderGQL,\n    private messageService: NzMessageService,\n    private routerHelper: RouterHelperService,\n    private route: ActivatedRoute\n  ) {}\n\n  async submitForm() {\n    const { phoneNumber, phoneNumberPrefix, ..._formValue } = this.form.value;\n    await firstValueFrom(\n      this.createRiderGQL.mutate({\n        input: {\n          mobileNumber: `${phoneNumberPrefix}${phoneNumber}`,\n          ..._formValue,\n        },\n      })\n    );\n    this.messageService.success(\"Saved Successfully.\");\n    this.routerHelper.goToParent(this.route);\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"New Rider\"\n  nzSubtitle=\"Input Rider's contact details below.\"\n>\n</nz-page-header>\n<nz-card [nzActions]=\"[tmplActions]\" style=\"mt-16\">\n  <form nz-form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n    <nz-form-item>\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"firstName\"\n        >First Name</nz-form-label\n      >\n      <nz-form-control\n        [nzSm]=\"14\"\n        [nzXs]=\"24\"\n        nzErrorTip=\"The input is not valid First Name\"\n      >\n        <input nz-input formControlName=\"firstName\" id=\"firstName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"lastName\"\n        >Last Name</nz-form-label\n      >\n      <nz-form-control\n        [nzSm]=\"14\"\n        [nzXs]=\"24\"\n        nzErrorTip=\"The input is not valid Last Name\"\n      >\n        <input nz-input formControlName=\"lastName\" id=\"lastName\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"phoneNumber\" nzRequired\n        >Phone Number</nz-form-label\n      >\n      <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\n        <nz-input-group [nzAddOnBefore]=\"addOnBeforeTemplate\">\n          <ng-template #addOnBeforeTemplate>\n            <nz-select formControlName=\"phoneNumberPrefix\" class=\"phone-select\">\n              <nz-option\n                *ngFor=\"let code of countryCodes\"\n                [nzLabel]=\"code.name + ' (' + code.dial_code + ')'\"\n                [nzValue]=\"code.dial_code\"\n              ></nz-option>\n            </nz-select>\n          </ng-template>\n          <input formControlName=\"phoneNumber\" id=\"'phoneNumber'\" nz-input />\n        </nz-input-group>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"gender\"\n        >Gender</nz-form-label\n      >\n      <nz-form-control [nzSm]=\"14\" [nzXs]=\"24\">\n        <nz-select formControlName=\"gender\">\n          <nz-option nzLabel=\"Male\" nzValue=\"Male\"></nz-option>\n          <nz-option nzLabel=\"Female\" nzValue=\"Female\"></nz-option>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n    <ng-template #tmplActions>\n      <button\n        nz-button\n        nzType=\"default\"\n        [disabled]=\"form.invalid\"\n        (click)=\"submitForm()\"\n      >\n        Register\n      </button>\n    </ng-template>\n  </form>\n</nz-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApolloQueryResult } from \"@apollo/client/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { RidersListQuery } from \"@ridy/admin-panel/generated/graphql\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport { TableService } from \"../../../@services/table-service\";\n\n@Component({\n  selector: \"app-riders-list\",\n  templateUrl: \"./riders-list.component.html\",\n})\nexport class RidersListComponent implements OnInit {\n  query?: Observable<ApolloQueryResult<RidersListQuery>>;\n\n  constructor(\n    public route: ActivatedRoute,\n    public translate: TranslateService,\n    public tableService: TableService\n  ) {}\n\n  ngOnInit(): void {\n    this.query = this.route.data.pipe(map((data) => data.riders));\n  }\n}\n","<nz-page-header\n  [nzGhost]=\"false\"\n  nzBackIcon\n  nzTitle=\"Riders\"\n  nzSubtitle=\"List of all the clients registered\"\n>\n  <nz-page-header-extra>\n    <button nz-button nzType=\"default\" routerLink=\"new\">\n      <i nz-icon nzType=\"plus\"></i>{{ \"profile.add\" | translate }}\n    </button>\n  </nz-page-header-extra>\n  <nz-page-header-content>\n    <nz-table\n      #table\n      nzShowSizeChanger\n      [nzFrontPagination]=\"false\"\n      *ngIf=\"(query | async)?.data?.riders as riders\"\n      [nzData]=\"riders.nodes\"\n      [nzTotal]=\"riders.totalCount\"\n      (nzQueryParams)=\"tableService.onTableQueryParamsChange($event)\"\n      nzBordered\n    >\n      <thead>\n        <tr>\n          <th nzCustomFilter nzColumnKey=\"lastName\" [nzSortFn]=\"true\">\n            {{ \"profile.name\" | translate }}\n            <nz-filter-trigger\n              [nzActive]=\"\n                (route.queryParams | async)?.filter?.includes('lastName|like|')\n              \"\n              [nzDropdownMenu]=\"filtername\"\n            >\n              <i nz-icon nzType=\"search\"></i>\n            </nz-filter-trigger>\n          </th>\n          <th nzCustomFilter nzColumnKey=\"mobileNumber\" [nzSortFn]=\"true\">\n            {{ \"profile.mobileNumber\" | translate }}\n            <nz-filter-trigger\n              [nzActive]=\"\n                (route.queryParams | async)?.filter?.includes(\n                  'mobileNumber|like|'\n                )\n              \"\n              [nzDropdownMenu]=\"filtermobile\"\n            >\n              <i nz-icon nzType=\"search\"></i>\n            </nz-filter-trigger>\n          </th>\n          <th>{{ \"profile.actions\" | translate }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of table.data\">\n          <td>{{ data.firstName }} {{ data.lastName }}</td>\n          <td>{{ data.mobileNumber | phone }}</td>\n          <td>\n            <a [routerLink]=\"'view/' + data.id\">{{\n              \"table.details\" | translate\n            }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </nz-table>\n    <nz-dropdown-menu #filtername=\"nzDropdownMenu\">\n      <div class=\"ant-table-filter-dropdown\">\n        <div class=\"search-box\">\n          <input\n            nz-input\n            #lastNameInput\n            placeholder=\"{{ 'profile.lastName' | translate }}\"\n          />\n          <button\n            nz-button\n            nzSize=\"small\"\n            nzType=\"default\"\n            (click)=\"tableService.filterText('lastName', lastNameInput.value)\"\n            class=\"search-button\"\n          >\n            {{ \"profile.search\" | translate }}\n          </button>\n          <button\n            nz-button\n            nzSize=\"small\"\n            (click)=\"tableService.resetFilter('lastName', lastNameInput)\"\n          >\n            {{ \"profile.reset\" | translate }}\n          </button>\n        </div>\n      </div>\n    </nz-dropdown-menu>\n    <nz-dropdown-menu #filtermobile=\"nzDropdownMenu\">\n      <div class=\"ant-table-filter-dropdown\">\n        <div class=\"search-box\">\n          <input\n            #mobileNumberInput\n            nz-input\n            placeholder=\"Search Mobile Number\"\n          />\n          <button\n            nz-button\n            nzSize=\"small\"\n            nzType=\"default\"\n            class=\"search-button\"\n            (click)=\"\n              tableService.filterText('mobileNumber', mobileNumberInput.value)\n            \"\n          >\n            {{ \"profile.search\" | translate }}\n          </button>\n          <button\n            nz-button\n            nzSize=\"small\"\n            (click)=\"\n              tableService.resetFilter('mobileNumber', mobileNumberInput)\n            \"\n          >\n            {{ \"profile.reset\" | translate }}\n          </button>\n        </div>\n      </div>\n    </nz-dropdown-menu>\n  </nz-page-header-content>\n</nz-page-header>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RiderNewComponent } from './rider-new/rider-new.component';\nimport { RidersListComponent } from './riders-list/riders-list.component';\nimport { RidersListResolver } from './riders-list/riders-list.resolver';\n\n\nconst routes: Routes = [\n  { path: '', component: RidersListComponent, resolve: { riders: RidersListResolver }, runGuardsAndResolvers: 'paramsOrQueryParamsChange' },\n  { path: 'view/:id', loadChildren: () => import('./rider-view/rider-view.module').then(m => m.RiderViewModule) },\n  { path: 'new', component: RiderNewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    RidersListResolver\n  ]\n})\nexport class RidersRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../../@components/shared.module';\nimport { RiderNewComponent } from './rider-new/rider-new.component';\nimport { RidersListComponent } from './riders-list/riders-list.component';\nimport { RidersRoutingModule } from './riders-routing.module';\n\n\n@NgModule({\n  declarations: [RidersListComponent, RiderNewComponent],\n  imports: [\n    RidersRoutingModule,\n    SharedModule\n  ],\n  providers: []\n})\nexport class RidersModule { }\n"],"names":[],"sourceRoot":"webpack:///"}